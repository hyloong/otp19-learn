<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
    <fo:simple-page-master master-name="cover" margin="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin="0mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="left-page" margin-top="25mm" margin-bottom="15mm" margin-left="20mm" margin-right="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="left-header" extent="10mm"/>
      <fo:region-after region-name="left-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="right-page" margin-top="25mm" margin-bottom="15mm" margin-left="25mm" margin-right="20mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="right-header" extent="10mm"/>
      <fo:region-after region-name="right-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:page-sequence-master master-name="document">
      <fo:repeatable-page-master-alternatives>
        <fo:conditional-page-master-reference master-reference="left-page" odd-or-even="even"/>
        <fo:conditional-page-master-reference master-reference="right-page" odd-or-even="odd"/>
      </fo:repeatable-page-master-alternatives>
    </fo:page-sequence-master>
  </fo:layout-master-set>
  <fo:bookmark-tree>
    <fo:bookmark internal-destination="cover-page" starting-state="show">
      <fo:bookmark-title>cosEvent</fo:bookmark-title>
      <fo:bookmark internal-destination="idp512016" starting-state="hide">
        <fo:bookmark-title>cosEvent User's Guide</fo:bookmark-title>
        <fo:bookmark internal-destination="idp509536" starting-state="hide">
          <fo:bookmark-title>The cosEvent Application</fo:bookmark-title>
          <fo:bookmark internal-destination="idp502432" starting-state="hide">
            <fo:bookmark-title>Content Overview</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp495552" starting-state="hide">
            <fo:bookmark-title>Brief Description of the User's Guide</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp273296" starting-state="hide">
          <fo:bookmark-title>Introduction to cosEvent</fo:bookmark-title>
          <fo:bookmark internal-destination="idp522976" starting-state="hide">
            <fo:bookmark-title>Overview</fo:bookmark-title>
            <fo:bookmark internal-destination="idp508368" starting-state="hide">
              <fo:bookmark-title>Purpose and Dependencies</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp436240" starting-state="hide">
              <fo:bookmark-title>Prerequisites</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp497200" starting-state="hide">
          <fo:bookmark-title>Event Service</fo:bookmark-title>
          <fo:bookmark internal-destination="idp491296" starting-state="hide">
            <fo:bookmark-title>Overview of the CosEvent Service</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp450272" starting-state="hide">
            <fo:bookmark-title>Event Service Components</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idm30784" starting-state="hide">
            <fo:bookmark-title>Event Service Communication Models</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp439200" starting-state="hide">
            <fo:bookmark-title>A Tutorial on How to Create a Simple Service</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp451232" starting-state="hide">
            <fo:bookmark-title>How to Run Everything</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
      <fo:bookmark internal-destination="idp84032" starting-state="hide">
        <fo:bookmark-title>Reference Manual</fo:bookmark-title>
        <fo:bookmark internal-destination="idp757568" starting-state="hide">
          <fo:bookmark-title>cosEventApp</fo:bookmark-title>
          <fo:bookmark internal-destination="idp548880" starting-state="hide">
            <fo:bookmark-title>install/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp761888" starting-state="hide">
            <fo:bookmark-title>uninstall/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp684896" starting-state="hide">
            <fo:bookmark-title>start/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp697840" starting-state="hide">
            <fo:bookmark-title>stop/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp416288" starting-state="hide">
            <fo:bookmark-title>start_channel/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp691936" starting-state="hide">
            <fo:bookmark-title>start_channel/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp412448" starting-state="hide">
            <fo:bookmark-title>start_channel_link/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp666144" starting-state="hide">
            <fo:bookmark-title>start_channel_link/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp415632" starting-state="hide">
            <fo:bookmark-title>stop_channel/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp581264" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin</fo:bookmark-title>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp127488" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_ConsumerAdmin</fo:bookmark-title>
          <fo:bookmark internal-destination="idm1728" starting-state="hide">
            <fo:bookmark-title>obtain_push_supplier/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp703264" starting-state="hide">
            <fo:bookmark-title>obtain_pull_supplier/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp816080" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_SupplierAdmin</fo:bookmark-title>
          <fo:bookmark internal-destination="idp541424" starting-state="hide">
            <fo:bookmark-title>obtain_push_consumer/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp545008" starting-state="hide">
            <fo:bookmark-title>obtain_pull_consumer/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp782576" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_EventChannel</fo:bookmark-title>
          <fo:bookmark internal-destination="idp788176" starting-state="hide">
            <fo:bookmark-title>for_consumers/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp792096" starting-state="hide">
            <fo:bookmark-title>for_suppliers/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp795824" starting-state="hide">
            <fo:bookmark-title>destroy/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp806880" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_ProxyPullConsumer</fo:bookmark-title>
          <fo:bookmark internal-destination="idp811472" starting-state="hide">
            <fo:bookmark-title>connect_pull_supplier/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp713088" starting-state="hide">
            <fo:bookmark-title>disconnect_pull_consumer/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp724576" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_ProxyPushConsumer</fo:bookmark-title>
          <fo:bookmark internal-destination="idp729168" starting-state="hide">
            <fo:bookmark-title>connect_push_supplier/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp734144" starting-state="hide">
            <fo:bookmark-title>disconnect_push_consumer/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp737968" starting-state="hide">
            <fo:bookmark-title>push/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp750512" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_ProxyPullSupplier</fo:bookmark-title>
          <fo:bookmark internal-destination="idp823408" starting-state="hide">
            <fo:bookmark-title>connect_pull_consumer/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp827680" starting-state="hide">
            <fo:bookmark-title>disconnect_pull_supplier/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp831024" starting-state="hide">
            <fo:bookmark-title>pull/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp834944" starting-state="hide">
            <fo:bookmark-title>try_pull/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp847088" starting-state="hide">
          <fo:bookmark-title>CosEventChannelAdmin_ProxyPushSupplier</fo:bookmark-title>
          <fo:bookmark internal-destination="idp851776" starting-state="hide">
            <fo:bookmark-title>connect_push_consumer/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp858208" starting-state="hide">
            <fo:bookmark-title>disconnect_push_supplier/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
    </fo:bookmark>
  </fo:bookmark-tree>
  <fo:page-sequence font-family="sans-serif" force-page-count="even" master-reference="cover" font-size="10pt">
    <fo:flow flow-name="xsl-region-body">
      <fo:block space-before="130mm" space-before.conditionality="retain" text-align="end">
        <fo:external-graphic src="/root/download/otp_src_20.0/bootstrap/lib/erl_docgen/priv/images/erlang-logo.gif"/>
      </fo:block>
      <fo:block id="cover-page" border-before-style="solid" border-before-width="10pt" border-color="#960003" font-size="2.3em" padding-before="0.5em" text-align="end">cosEvent</fo:block>
      <fo:block font-size="0.9em" text-align="end">Copyright © 1999-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em" text-align="end">cosEvent 2.2.1</fo:block>
      <fo:block font-size="0.9em" text-align="end">July 12, 2017</fo:block>
      <fo:block padding-before="2.5em" font-size="1.33em" font-weight="bold" color="#C00" text-align="end"/>
      <fo:block break-before="page" border-before-style="solid" border-before-width="1pt" border-color="#960003" font-weight="bold" padding-before="0.5em" space-before="200mm" space-before.conditionality="retain">Copyright © 1999-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em">
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    Ericsson AB. All Rights Reserved..
        </fo:block>
      <fo:block font-size="0.9em" font-weight="bold" space-before="2em">July 12, 2017</fo:block>
    </fo:flow>
  </fo:page-sequence>
  <fo:page-sequence font-family="serif" master-reference="document" initial-page-number="1" font-size="10pt">
    <fo:static-content flow-name="left-header">
      <fo:block text-align="start" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-header">
      <fo:block text-align="end" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="left-footer">
      <fo:block text-align="start" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold"><fo:page-number/> | Ericsson AB. All Rights Reserved.:
            cosEvent</fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-footer">
      <fo:block text-align="end" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">Ericsson AB. All Rights Reserved.:
            cosEvent | <fo:page-number/></fo:block>
    </fo:static-content>
    <fo:flow flow-name="xsl-region-body"><fo:block/><fo:block id="idp512016" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">1   
      cosEvent User's Guide</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">cosEvent</fo:inline> application is an Erlang implementation of a
      CORBA Service CosEvent.</fo:block>
  <fo:block id="idp509536" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.1  The cosEvent Application</fo:marker>1.1  The cosEvent Application</fo:block><fo:block id="idp502432" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.1 
      Content Overview</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The cosEvent documentation is divided into three sections:
      </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">PART ONE - The User's Guide  
          <fo:block/>Description of the cosEvent Application including 
          services and a small tutorial demonstrating 
          the development of a simple service.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">PART TWO - Release Notes
          <fo:block/>A concise history of cosEvent.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">PART THREE - The Reference Manual
          <fo:block/> A quick reference guide, including a
          brief description, to all the functions available in cosEvent.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  <fo:block id="idp495552" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.2 
      Brief Description of the User's Guide</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The User's Guide contains the following parts:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CosEvent overview</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CosEvent installation and examples</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  <fo:block id="idp273296" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.2  Introduction to cosEvent</fo:marker>1.2  Introduction to cosEvent</fo:block><fo:block id="idp522976" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.1 
      Overview</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The cosEvent application is a Event Service compliant with the <fo:inline font-weight="bold"><fo:basic-link external-destination="href">OMG</fo:basic-link></fo:inline> 
      Event Service CosEvent.
      </fo:block>

    <fo:block id="idp508368" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Purpose and Dependencies</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CosEvent is dependent on  <fo:inline font-weight="bold">Orber</fo:inline>, which provides CORBA functionality in an Erlang environment.</fo:block>
    

    <fo:block id="idp436240" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Prerequisites</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To fully understand the concepts presented in the
        documentation, it is recommended that the user is familiar
        with distributed programming and CORBA.  
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Recommended reading includes <fo:inline font-weight="bold">CORBA, Fundamentals and Programming - Jon Siegel</fo:inline> and <fo:inline font-weight="bold">Open Telecom Platform Documentation Set</fo:inline>. It is also helpful to  have read
        <fo:inline font-weight="bold">Concurrent Programming in Erlang</fo:inline>.</fo:block>
    
  <fo:block id="idp497200" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.3  Event Service</fo:marker>1.3  Event Service</fo:block><fo:block id="idp491296" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.1 
      Overview of the CosEvent Service</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Event service allows programmers to subscribe to
      information channels. Suppliers can generate events without knowing the
      consumer identities and the consumer can receive events without knowing
      the supplier identity. Both push and pull event delivery are supported.
      The Event service will queue information and processes.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The CORBA Event service provides a flexible model for
      asynchronous,  decoupled communication between objects. This
      chapter outlines communication  models and the roles and
      relationships of key components in the CosEvent service. It
      shows a simple example on use of this service.</fo:block>
  <fo:block id="idp450272" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.2 
      Event Service Components</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are five components in the OMG CosEvent service architecture. These
      are described below:</fo:block>
    
    <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="e_s_components.gif"/>
      <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        3.1:
         
        
Figure 1: Event service Components</fo:block>
    </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Suppliers and consumers:</fo:inline> Consumers are the ultimate targets of
       events generated by suppliers. Consumers and suppliers can both play active
       and 
       passive roles. There could be two types of consumers and suppliers: push
       or pull. A PushSupplier object can actively push an event to a passive
       PushConsumer object. Likewise, a PullSupplier object can passively 
       wait for a PullConsumer object to actively pull an event from it.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">EventChannel:</fo:inline> The central abstraction in the CosEvent service is the 
       EventChannel which plays the role of a mediator between consumers and 
       suppliers. Consumers and suppliers register their interest with the 
       EventChannel. It can provide many-to-many communication. The channel 
       consumes events from one or more suppliers, and supplies events to one 
       or more consumers. An EventChannel can support consumers and suppliers
       using different communication models.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">ProxySuppliers and ProxyConsumers:</fo:inline> ProxySuppliers act as middlemen
       between consumers and the EventChannel. A ProxySupplier is similar to
       a normal supplier, but includes an additional method for connecting a 
       consumer to the ProxySupplier. Likewise, ProxyConsumers act as 
       middlemen between suppliers and the EventChannel. A ProxyConsumer is
       similar to a normal consumer, but includes an additional method for
       connecting a supplier to the ProxyConsumer.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Supplier and consumer administrations:</fo:inline> Consumer administration acts as
       a factory for creating ProxySuppliers.  Supplier administration acts as
       a factory for creating ProxyConsumers.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  <fo:block id="idm30784" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.3 
      Event Service Communication Models</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are four general models of component collaboration in the OMG CosEvent service 
      architecture.  The following describes these models:
      (Please note that proxies are not shown in the diagrams for simplicity).</fo:block>
    
    <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="e_s_models.gif"/>
      <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        3.2:
         
        
Figure 2: Event service Communication Models</fo:block>
    </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">The Canonical Push Model:</fo:inline> The Canonical push model shown in figure 2(A) allows
       the suppliers of events to initiate the transfer of event data to consumers.
       In this model, suppliers are active initiators and consumers are the passive
       targets of the requests. EventChannels play the role of <fo:inline font-family="monospace">Notifier</fo:inline>.
       Thus, active suppliers use EventChannels to push data to passive consumers that 
       have registered with the EventChannels.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">The Canonical Pull Model:</fo:inline>The Canonical pull model shown
       in figure 2(B) 
       allows consumers to request events from suppliers. In this model,
       Consumers are 
       active initiators and suppliers are the passive targets of the pull
       requests. 
       EventChannel plays the role of <fo:inline font-family="monospace">Procurer</fo:inline> since it procures
       events
       on behalf of consumers. Thus, active consumers can explicitly pull
       data 
       from passive suppliers via the EventChannels.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">The Hybrid Push/Pull Model:</fo:inline> The push/pull model shown in figure 2(C) is a 
       hybrid that allows consumers to request events queued at an EventChannel
       by suppliers. In this model, both suppliers and consumers are active 
       initiators of the requests. EventChannels play the role of <fo:inline font-family="monospace">Queue</fo:inline>.
       Thus, active consumers can explicitly pull data deposited by active
       suppliers via the EventChannels.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">The Hybrid Pull/Push Model:</fo:inline> The pull/push model shown in figure 2(D) is another
       hybrid that allows the channel to pull events from suppliers and push them 
       to consumers. In this model, suppliers are passive targets of pull requests 
       and consumers are passive targets of pushes. EventChannels play the role of 
      <fo:inline font-family="monospace">Intelligent Agent</fo:inline>. Thus, active EventChannels can pull data from 
       passive suppliers and push that data to passive consumers.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  <fo:block id="idp439200" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.4 
      A Tutorial on How to Create a Simple Service</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To be able to use the cosEvent application supplier and consumer objects
      must be implemented, which must inherit from the appropriate interface
      defined in the <fo:inline font-weight="bold">CosEventComm.idl</fo:inline> specification.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">We start by creating an interface which inherits from the correct interface, 
      e.g., CosEventComm::PushConsumer. Hence, we must also implement all
      operations defined in the PushConsumer interface. The IDL-file could look like: 
      </fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
#ifndef _MYCLIENT_IDL
#define _MYCLIENT_IDL
#include &lt;CosEventComm.idl&gt;
 
module myClientImpl {
 
  interface ownInterface:CosEventComm::PushConsumer {
 
    void ownFunctions(in any NeededArguments)
       raises(OwnExceptions);
 
  };
};
 
#endif
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Run the IDL compiler on this file by calling the <fo:inline font-family="monospace">ic:gen/1</fo:inline> function. 
      This will produce the API named <fo:inline font-family="monospace">myClientImpl_ownInterface.erl</fo:inline>.
      After generating the API stubs and the server skeletons it is time to 
      implement the servers and if no special options are sent 
      to the IDl compiler the file name is <fo:inline font-family="monospace">myClientImpl_ownInterface_impl.erl</fo:inline>.</fo:block>
  <fo:block id="idp451232" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.5 
      How to Run Everything</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Below is a short transcript on how to run cosEvent. </fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
 
%% Start Mnesia and Orber
mnesia:delete_schema([node()]),
mnesia:create_schema([node()]),
orber:install([node()]),
mnesia:start(),
orber:start(),
 
%% Install cosEvent in the IFR.
cosEventApp:install(), 

%% Register the application specific Client implementations
%% in the IFR.
'oe_myClientImpl':'oe_register'(), 
 
%% Start the cosEvent application.
cosEventApp:start(), 
 
%% Start a channel using the default configuration
Ch = cosEventApp:start_channel(),
%% ... or use configuration parameters.
Ch = cosEventApp:start_channel([{pull_interval, 10}, {maxEvents, 50}]),
 
%% Retrieve a SupplierAdmin and a ConsumerAdmin.
AdminSupplier = 'CosEventChannelAdmin_EventChannel':for_suppliers(Ch),
AdminConsumer = 'CosEventChannelAdmin_EventChannel':for_consumers(Ch),

%% Use the corresponding Admin object to get access to wanted Proxies

%% Create a Push Consumer Proxy, which the Client Push Supplier will push 
%% events to.
ProxyPushConsumer = 
  'CosEventChannelAdmin_SupplierAdmin':obtain_push_consumer(AdminSupplier),

%% Create a Push Supplier Proxy, which will push events to the registered
%% Push Consumer.
ProxyPushSupplier =
  'CosEventChannelAdmin_ConsumerAdmin':obtain_push_supplier(AdminConsumer),


%% Create application Clients. We can, for example, start the Clients 
%% our selves or look them up in the naming service. This is application
%% specific.
Consumer = myClientImpl_ownInterface:oe_create(),
Supplier = ...

%% Connect each Client to the corresponding Proxy.
'CosEventChannelAdmin_ProxyPushConsumer':
   connect_push_supplier(ProxyPushConsumer, Supplier),
'CosEventChannelAdmin_ProxyPushSupplier':
   connect_push_consumer(ProxyPushSupplier, Consumer),
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The example above, exemplifies a event system, i.e., the <fo:inline font-weight="bold">Canonical Push Model</fo:inline>, where the Supplier client in some way generates event
      and pushes them to the proxy. The push supplier proxies will eventually
      push the events to each Consumer client.</fo:block>
  <fo:block id="idp84032" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">2   
      Reference Manual</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">cosEvent</fo:inline> application is an Erlang implementation of
      a CORBA Service CosEvent.</fo:block>
  <fo:block page-break-before="always" id="idp757568" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">cosEventApp</fo:marker>cosEventApp</fo:block>Erlang module</fo:block>
  <fo:block/>
  cosEventApp
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to the record definitions for the structures use:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains the functions for starting and stopping the application.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp548880">install() -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {'EXCEPTION', E} | {'EXIT', R}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation installs the cosEvent application.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp761888">uninstall() -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {'EXCEPTION', E} | {'EXIT', R}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation uninstalls the cosEvent application.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp684896">start() -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation starts the cosEvent application.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp697840">stop() -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation stops the cosEvent application.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp416288">start_channel() -&gt; Channel</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Channel = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation creates a new instance of a
          <fo:inline font-style="italic">Event Channel</fo:inline>
          using the default settings.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp691936">start_channel(Options) -&gt; Channel</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {pull_interval, Seconds} | {typecheck, Boolean} | {maxEvents, Integer} | {blocking, Boolean}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Channel = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation creates a new instance of a
          <fo:inline font-style="italic">Event Channel</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{pull_interval, Seconds}</fo:inline> - determine how often Proxy Pull 
           Consumers will check for new events with the client application. The
           default value is 20 seconds.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{typecheck, Boolean}</fo:inline> - if this option is set to true the
           proxies will check if the supplied client object is of correct type.
           The default value is false.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{maxEvents, Integer}</fo:inline> - this option determine how many events
           the <fo:inline font-family="monospace">ProxyPullSuppliers</fo:inline> will store before discarding events.
           If the limit is reached events will be discarded in any order.
           The default value is 300.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{blocking, Boolean}</fo:inline> - this option determine the behavior of
           the channel when handling events internally. If set to <fo:inline font-family="monospace">true</fo:inline> the
           risk of a single event supplier floods the system is reduced, but
           the performance may also be reduced.
           The default value is <fo:inline font-family="monospace">true</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp412448">start_channel_link() -&gt; Channel</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Channel = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation creates a new instance of a
          <fo:inline font-style="italic">Event Channel</fo:inline>,
          which is linked to the invoking process, using the default settings.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp666144">start_channel_link(Options) -&gt; Channel</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {pull_interval, Seconds} | {typecheck, Boolean} | {maxEvents, Integer} | {blocking, Boolean}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Channel = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation creates a new instance of a
          <fo:inline font-style="italic">Event Channel</fo:inline>,
          which is linked to the invoking process, with settings defined by the
          given options. Allowed options are the same as for 
          <fo:inline font-family="monospace">cosEventApp:start_channel/1</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp415632">stop_channel(Channel) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Channel = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = ok | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation stop the target event channel.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp581264" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin</fo:marker>CosEventChannelAdmin</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The event service defines two roles for objects: the supplier role and 
      the consumer role. Suppliers supply event data to the event channel and 
      consumers receive event data from the channel. Suppliers do not need to 
      know the identity of the consumers, and vice versa. Consumers and 
      suppliers are connected to the event channel via proxies, which are managed
      by ConsumerAdmin and SupplierAdmin objects.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are four general models of communication.  These are:    </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The canonical push model. It allows the suppliers of events to initiate the
       transfer of event data to consumers. Event channels play the role of 
      <fo:inline font-family="monospace">Notifier</fo:inline>. Active suppliers use event channel to push data to 
       passive consumers registered with the event channel.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The canonical pull model. It allows consumers to request events from 
       suppliers. Event channels play the role of <fo:inline font-family="monospace">Procure</fo:inline> since they 
       procure events on behalf of consumers. Active consumers can explicitly 
       pull data from passive suppliers via the event channels.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The hybrid push/pull model. It allows consumers request events queued at
       a channel by suppliers. Event channels play the role of <fo:inline font-family="monospace">Queue</fo:inline>.
       Active consumers explicitly pull data deposited by active suppliers via 
       the event channels.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The hybrid pull/push model. It allows the channel to pull events from 
       suppliers and push them to consumers. Event channels play the role of 
      <fo:inline font-family="monospace">Intelligent agent</fo:inline>. Active event channels can pull data from 
       passive suppliers to push it to passive consumers.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions, e.g., exceptions,
      include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are seven different interfaces supported in the service:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>ProxyPushConsumer</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>ProxyPullSupplier</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>ProxyPullConsumer</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>ProxyPushSupplier</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>ConsumerAdmin</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>SupplierAdmin</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>EventChannel</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  
  
<fo:block page-break-before="always" id="idp127488" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_ConsumerAdmin</fo:marker>CosEventChannelAdmin_ConsumerAdmin</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_ConsumerAdmin
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ConsumerAdmin interface defines the first step for connecting consumers
      to the event channel. It acts as a factory for creating proxy suppliers.
      Both consumer administration and supplier administration are defined as separate 
      objects so that the creator of the channel can control the addition of 
      suppliers and consumers. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idm1728">obtain_push_supplier(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a ProxyPushSupplier object reference.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp703264">obtain_pull_supplier(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a ProxyPullSupplier object reference.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp816080" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_SupplierAdmin</fo:marker>CosEventChannelAdmin_SupplierAdmin</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_SupplierAdmin
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SupplierAdmin interface defines the first step for connecting suppliers
      to the event channel. It acts as a factory for creating proxy consumers.
      Both consumer administration and supplier administration are defined as separate
      objects so that the creator of the channel can control the addition of 
      suppliers and consumers.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp541424">obtain_push_consumer(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a ProxyPushConsumer object reference.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp545008">obtain_pull_consumer(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a ProxyPullConsumer object reference.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp782576" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_EventChannel</fo:marker>CosEventChannelAdmin_EventChannel</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_EventChannel
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An event channel is an object that allows multiple suppliers to communicate
      with multiple consumers in a highly decoupled, asynchronous manner. The event 
      channel is built up incrementally. When an event channel is
      created no suppliers or consumers are connected to it. Event Channel can
      implement group communication by serving as a replicator, broadcaster, or
      multicaster that forward events from one or more suppliers to multiple
      consumers.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is up to the user to decide when an event channel is created and how 
      references to the event channel are obtained. By representing the event
      channel as an object, it has all of the properties that apply to objects.
      One way to manage an event channel is to register it in a naming context,
      or export it through an operation on an object.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any object that possesses an object reference that supports the ProxyPullConsumer
      interface can perform the following operations:</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp788176">for_consumers(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a ConsumerAdmin object reference. If ConsumerAdmin
          object does not exist already it creates one.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp792096">for_suppliers(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a SupplierAdmin object reference. If SupplierAdmin
          object does not exist already it creates one.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp795824">destroy(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp806880" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_ProxyPullConsumer</fo:marker>CosEventChannelAdmin_ProxyPullConsumer</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_ProxyPullConsumer
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ProxyPullConsumer interface defines the second step for connecting pull
      suppliers to the event channel. A proxy consumer is similar to a normal consumer,
      but includes an additional method for connecting a supplier to the proxy
      consumer.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions, e.g., exceptions,
      include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any object that possesses an object reference that supports the ProxyPullConsumer
      interface can perform the following operations:</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp811472">connect_pull_supplier(Object, PullSupplier) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object       = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PullSupplier = #objref of PullSupplier type</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">E = #'CosEventChannelAdmin_AlreadyConnected'{} | #'CosEventChannelAdmin_TypeError'{}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation connects PullSupplier object to the ProxyPullConsumer object.
          If a nil object reference is passed CORBA standard <fo:inline font-family="monospace">BAD_PARAM</fo:inline> exception 
          is raised. If the ProxyPullConsumer is already connected to a PullSupplier,
          then the <fo:inline font-family="monospace">CosEventChannelAdmin_AlreadyConnected</fo:inline> exception is raised.
          Implementations of ProxyPullConsumers may require additional interface
          functionality; if these requirements are not met the 
          <fo:inline font-family="monospace">CosEventChannelAdmin_TypeError</fo:inline> exception will be raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp713088">disconnect_pull_consumer(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation disconnects proxy pull consumer from the event channel and
          sends a notification about the loss of the connection to the pull supplier
          attached to it.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp724576" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_ProxyPushConsumer</fo:marker>CosEventChannelAdmin_ProxyPushConsumer</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_ProxyPushConsumer
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ProxyPushConsumer interface defines the second step for connecting push
      suppliers to the event channel. A proxy consumer is similar to a normal consumer,
      but includes an additional method for connecting a supplier to the proxy
      consumer.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions, e.g., exceptions,
      include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any object that possesses an object reference that supports the ProxyPushConsumer
      interface can perform the following operations:</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp729168">connect_push_supplier(Object, PushSupplier) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object       = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PushSupplier = #objref of PushSupplier type</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {'EXCEPTION', #'CosEventChannelAdmin_AlreadyConnected'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation connects PushSupplier object to the ProxyPushConsumer object.
          A nil object reference can be passed to this operation. If so a channel
          cannot invoke the disconnect_push_supplier operation on the supplier;
          the supplier may be disconnected from the channel without being 
          informed. If the ProxyPushConsumer is already connected to a 
          PushSupplier, then the <fo:inline font-family="monospace">CosEventChannelAdmin_AlreadyConnected</fo:inline> 
          exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp734144">disconnect_push_consumer(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation disconnects proxy push consumer from the event channel.
          Sends a notification about the loss of the connection to the push supplier
          attached to it, unless nil object reference was passed at the connection
          time.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp737968">push(Object, Data) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data   = any</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {'EXCEPTION', #'CosEventComm_Disconnected'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation sends event data to all connected consumers via the 
          event channel. If the event communication has already been disconnected,
          the <fo:inline font-family="monospace">CosEventComm_Disconnected</fo:inline> is raised.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp750512" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_ProxyPullSupplier</fo:marker>CosEventChannelAdmin_ProxyPullSupplier</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_ProxyPullSupplier
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ProxyPullSupplier interface defines the second step for connecting pull consumers to the event channel. A proxy supplier is similar to a normal supplier,
      but includes an additional method for connecting a consumer to the proxy
      supplier.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions, e.g., exceptions,
      include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any object that possesses an object reference that supports the ProxyPullSupplier
      interface can perform the following operations:</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp823408">connect_pull_consumer(Object, PullConsumer) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object       = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PullConsumer = #objref of PullConsumer type</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {'EXCEPTION', #'CosEventChannelAdmin_AlreadyConnected'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation connects PullConsumer object to the ProxyPullSupplier object.
          A nil object reference can be passed to this operation. If so a channel
          cannot invoke the disconnect_pull_consumer operation on the consumer;
          the consumer may be disconnected from the channel without being 
          informed. If the ProxyPullSupplier is already connected to a 
          PullConsumer, then the <fo:inline font-family="monospace">CosEventChannelAdmin_AlreadyConnected</fo:inline> 
          exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp827680">disconnect_pull_supplier(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation disconnects proxy pull supplier from the event channel.
          It sends a notification about the loss of the connection to the pull consumer
          attached to it, unless nil object reference was passed at the connection
          time.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp831024">pull(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = any</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation blocks until the event data is available or the 
          <fo:inline font-family="monospace">CosEventComm_Disconnected</fo:inline> exception is raised. 
          It returns the event data to the consumer.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp834944">try_pull(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = {any, bool()}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation does not block: if the event data is available, it returns 
          the event data and sets the data availability flag to true; otherwise
          it returns a long with an undefined value and sets the data availability to
          false. If the event communication has already been disconnected, the 
          <fo:inline font-family="monospace">CosEventComm_Disconnected</fo:inline> exception is raised.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp847088" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosEventChannelAdmin_ProxyPushSupplier</fo:marker>CosEventChannelAdmin_ProxyPushSupplier</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosEventChannelAdmin_ProxyPushSupplier
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ProxyPushSupplier interface defines the second step for connecting push
      consumers to the event channel. A proxy supplier is similar to a normal supplier,
      but includes an additional method for connecting a consumer to the proxy
      supplier.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to all definitions, e.g., exceptions,
      include necessary <fo:inline font-family="monospace">hrl</fo:inline> files by using:<fo:block/><fo:inline font-family="monospace">-include_lib("cosEvent/include/*.hrl").</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any object that possesses an object reference that supports the ProxyPushSupplier
      interface can perform the following operations:</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp851776">connect_push_consumer(Object, PushConsumer) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object       = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PushConsumer = #objref of PushConsumer type</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return       = ok | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">E = #'CosEventChannelAdmin_AlreadyConnected'{} | #'CosEventChannelAdmin_TypeError'{}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation connects PushConsumer object to the ProxyPushSupplier object.
          If a nil object reference is passed CORBA standard <fo:inline font-family="monospace">BAD_PARAM</fo:inline> exception 
          is raised. If the ProxyPushSupplier is already connected to a PushConsumer,
          then the <fo:inline font-family="monospace">CosEventChannelAdmin_AlreadyConnected</fo:inline> exception is raised.
          Implementations of ProxyPushSuppliers may require additional interface
          functionality; if these requirements are not met the 
          <fo:inline font-family="monospace">CosEventChannelAdmin_TypeError</fo:inline> exception will be raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp858208">disconnect_push_supplier(Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation disconnects proxy push supplier from the event channel and
          sends a notification about the loss of the connection to the push consumer
          attached to it.</fo:block>
      </fo:block>
  
  
</fo:flow>
  </fo:page-sequence>
</fo:root>
