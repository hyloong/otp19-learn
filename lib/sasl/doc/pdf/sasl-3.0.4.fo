<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
    <fo:simple-page-master master-name="cover" margin="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin="0mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="left-page" margin-top="25mm" margin-bottom="15mm" margin-left="20mm" margin-right="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="left-header" extent="10mm"/>
      <fo:region-after region-name="left-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="right-page" margin-top="25mm" margin-bottom="15mm" margin-left="25mm" margin-right="20mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="right-header" extent="10mm"/>
      <fo:region-after region-name="right-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:page-sequence-master master-name="document">
      <fo:repeatable-page-master-alternatives>
        <fo:conditional-page-master-reference master-reference="left-page" odd-or-even="even"/>
        <fo:conditional-page-master-reference master-reference="right-page" odd-or-even="odd"/>
      </fo:repeatable-page-master-alternatives>
    </fo:page-sequence-master>
  </fo:layout-master-set>
  <fo:bookmark-tree>
    <fo:bookmark internal-destination="cover-page" starting-state="show">
      <fo:bookmark-title>System Architecture Support Libraries (SASL)</fo:bookmark-title>
      <fo:bookmark internal-destination="idp578176" starting-state="hide">
        <fo:bookmark-title>SASL User's Guide</fo:bookmark-title>
        <fo:bookmark internal-destination="idp455904" starting-state="hide">
          <fo:bookmark-title>Introduction</fo:bookmark-title>
          <fo:bookmark internal-destination="idp530960" starting-state="hide">
            <fo:bookmark-title>Scope</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp524320" starting-state="hide">
            <fo:bookmark-title>Prerequisites</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp519248" starting-state="hide">
          <fo:bookmark-title>SASL Error Logging</fo:bookmark-title>
          <fo:bookmark internal-destination="idp309152" starting-state="hide">
            <fo:bookmark-title>Supervisor Report</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp300304" starting-state="hide">
            <fo:bookmark-title>Progress Report</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idm31088" starting-state="hide">
            <fo:bookmark-title>Crash Report</fo:bookmark-title>
            <fo:bookmark internal-destination="idm25328" starting-state="hide">
              <fo:bookmark-title>Example</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp513712" starting-state="hide">
            <fo:bookmark-title>Multi-File Error Report Logging</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp285040" starting-state="hide">
            <fo:bookmark-title>Report Browser</fo:bookmark-title>
            <fo:bookmark internal-destination="idm24816" starting-state="hide">
              <fo:bookmark-title>Starting Report Browser</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp94416" starting-state="hide">
              <fo:bookmark-title>Online Help</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp473072" starting-state="hide">
              <fo:bookmark-title>List Reports in Server</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp472592" starting-state="hide">
              <fo:bookmark-title>Show Reports</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp471952" starting-state="hide">
              <fo:bookmark-title>Search Reports</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp281808" starting-state="hide">
              <fo:bookmark-title>Stop Server</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
      <fo:bookmark internal-destination="idm26848" starting-state="hide">
        <fo:bookmark-title>Reference Manual</fo:bookmark-title>
        <fo:bookmark internal-destination="idp1063408" starting-state="hide">
          <fo:bookmark-title>sasl</fo:bookmark-title>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp712944" starting-state="hide">
          <fo:bookmark-title>alarm_handler</fo:bookmark-title>
          <fo:bookmark internal-destination="idp434608" starting-state="hide">
            <fo:bookmark-title>clear_alarm/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp631248" starting-state="hide">
            <fo:bookmark-title>get_alarms/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp393664" starting-state="hide">
            <fo:bookmark-title>set_alarm/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp410128" starting-state="hide">
          <fo:bookmark-title>rb</fo:bookmark-title>
          <fo:bookmark internal-destination="idp1487840" starting-state="hide">
            <fo:bookmark-title>filter/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp372256" starting-state="hide">
            <fo:bookmark-title>filter/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp790528" starting-state="hide">
            <fo:bookmark-title>grep/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp886672" starting-state="hide">
            <fo:bookmark-title>h/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp887120" starting-state="hide">
            <fo:bookmark-title>help/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp889392" starting-state="hide">
            <fo:bookmark-title>list/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp889840" starting-state="hide">
            <fo:bookmark-title>list/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1538912" starting-state="hide">
            <fo:bookmark-title>log_list/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1539296" starting-state="hide">
            <fo:bookmark-title>log_list/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1545184" starting-state="hide">
            <fo:bookmark-title>rescan/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1545568" starting-state="hide">
            <fo:bookmark-title>rescan/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1549824" starting-state="hide">
            <fo:bookmark-title>show/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1550272" starting-state="hide">
            <fo:bookmark-title>show/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1554096" starting-state="hide">
            <fo:bookmark-title>start/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1554544" starting-state="hide">
            <fo:bookmark-title>start/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1585424" starting-state="hide">
            <fo:bookmark-title>start_log/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1589568" starting-state="hide">
            <fo:bookmark-title>stop/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1592704" starting-state="hide">
            <fo:bookmark-title>stop_log/0</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp1601200" starting-state="hide">
          <fo:bookmark-title>release_handler</fo:bookmark-title>
          <fo:bookmark internal-destination="idp1644448" starting-state="hide">
            <fo:bookmark-title>check_install_release/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1644944" starting-state="hide">
            <fo:bookmark-title>check_install_release/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1658496" starting-state="hide">
            <fo:bookmark-title>create_RELEASES/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1672704" starting-state="hide">
            <fo:bookmark-title>install_file/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1679280" starting-state="hide">
            <fo:bookmark-title>install_release/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1679776" starting-state="hide">
            <fo:bookmark-title>install_release/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1729808" starting-state="hide">
            <fo:bookmark-title>make_permanent/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1733936" starting-state="hide">
            <fo:bookmark-title>remove_release/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1737776" starting-state="hide">
            <fo:bookmark-title>reboot_old_release/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1742816" starting-state="hide">
            <fo:bookmark-title>set_removed/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1746672" starting-state="hide">
            <fo:bookmark-title>set_unpacked/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1756928" starting-state="hide">
            <fo:bookmark-title>unpack_release/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1762080" starting-state="hide">
            <fo:bookmark-title>which_releases/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1766224" starting-state="hide">
            <fo:bookmark-title>which_releases/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1778768" starting-state="hide">
            <fo:bookmark-title>upgrade_app/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1799680" starting-state="hide">
            <fo:bookmark-title>downgrade_app/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1800144" starting-state="hide">
            <fo:bookmark-title>downgrade_app/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1821040" starting-state="hide">
            <fo:bookmark-title>upgrade_script/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1837232" starting-state="hide">
            <fo:bookmark-title>downgrade_script/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1854896" starting-state="hide">
            <fo:bookmark-title>eval_appup_script/4</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp1921248" starting-state="hide">
          <fo:bookmark-title>systools</fo:bookmark-title>
          <fo:bookmark internal-destination="idp1925056" starting-state="hide">
            <fo:bookmark-title>make_relup/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1925536" starting-state="hide">
            <fo:bookmark-title>make_relup/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1966304" starting-state="hide">
            <fo:bookmark-title>make_script/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1966768" starting-state="hide">
            <fo:bookmark-title>make_script/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2018864" starting-state="hide">
            <fo:bookmark-title>make_tar/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2019328" starting-state="hide">
            <fo:bookmark-title>make_tar/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2066480" starting-state="hide">
            <fo:bookmark-title>script2boot/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2084896" starting-state="hide">
          <fo:bookmark-title>appup</fo:bookmark-title>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2226544" starting-state="hide">
          <fo:bookmark-title>rel</fo:bookmark-title>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2260256" starting-state="hide">
          <fo:bookmark-title>relup</fo:bookmark-title>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2291712" starting-state="hide">
          <fo:bookmark-title>script</fo:bookmark-title>
        </fo:bookmark>
      </fo:bookmark>
    </fo:bookmark>
  </fo:bookmark-tree>
  <fo:page-sequence font-family="sans-serif" force-page-count="even" master-reference="cover" font-size="10pt">
    <fo:flow flow-name="xsl-region-body">
      <fo:block space-before="130mm" space-before.conditionality="retain" text-align="end">
        <fo:external-graphic src="/root/download/otp_src_20.0/bootstrap/lib/erl_docgen/priv/images/erlang-logo.gif"/>
      </fo:block>
      <fo:block id="cover-page" border-before-style="solid" border-before-width="10pt" border-color="#960003" font-size="2.3em" padding-before="0.5em" text-align="end">System Architecture Support Libraries (SASL)</fo:block>
      <fo:block font-size="0.9em" text-align="end">Copyright © 1997-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em" text-align="end">System Architecture Support Libraries (SASL) 3.0.4</fo:block>
      <fo:block font-size="0.9em" text-align="end">July 12, 2017</fo:block>
      <fo:block padding-before="2.5em" font-size="1.33em" font-weight="bold" color="#C00" text-align="end"/>
      <fo:block break-before="page" border-before-style="solid" border-before-width="1pt" border-color="#960003" font-weight="bold" padding-before="0.5em" space-before="200mm" space-before.conditionality="retain">Copyright © 1997-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em">
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    Ericsson AB. All Rights Reserved..
        </fo:block>
      <fo:block font-size="0.9em" font-weight="bold" space-before="2em">July 12, 2017</fo:block>
    </fo:flow>
  </fo:page-sequence>
  <fo:page-sequence font-family="serif" master-reference="document" initial-page-number="1" font-size="10pt">
    <fo:static-content flow-name="left-header">
      <fo:block text-align="start" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-header">
      <fo:block text-align="end" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="left-footer">
      <fo:block text-align="start" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold"><fo:page-number/> | Ericsson AB. All Rights Reserved.:
            System Architecture Support Libraries (SASL)</fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-footer">
      <fo:block text-align="end" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">Ericsson AB. All Rights Reserved.:
            System Architecture Support Libraries (SASL) | <fo:page-number/></fo:block>
    </fo:static-content>
    <fo:flow flow-name="xsl-region-body"><fo:block/><fo:block id="idp578176" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">1   
      SASL User's Guide</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The System Architecture Support Libraries SASL application
      provides support for alarm handling, release handling, and
      related functions.</fo:block>
  <fo:block id="idp455904" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.1  Introduction</fo:marker>1.1  Introduction</fo:block><fo:block id="idp530960" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.1 
      Scope</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SASL application provides support for:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Error logging</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Alarm handling</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Release handling</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Report browsing</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Section
      <fo:inline font-style="italic">SASL Error Logging</fo:inline> 
      describes the error
      handler that produces the supervisor, progress, and crash
      reports, which can be written to screen or to a specified file.
      It also describes the Report Browser (RB).</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The sections about release structure and release handling have
      been moved to section
      <fo:inline font-style="italic">OTP Design Principles</fo:inline>
      in <fo:inline font-weight="bold">System Documentation</fo:inline>.</fo:block>
  <fo:block id="idp524320" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.2 
      Prerequisites</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is assumed that the reader is familiar with the Erlang
      programming language.</fo:block>
  <fo:block id="idp519248" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.2  SASL Error Logging</fo:marker>1.2  SASL Error Logging</fo:block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SASL application introduces three types of reports:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
    <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Supervisor report</fo:block></fo:list-item-body></fo:list-item>
    <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Progress report</fo:block></fo:list-item-body></fo:list-item>
    <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Crash report</fo:block></fo:list-item-body></fo:list-item>
  </fo:list-block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When the SASL application is started, it adds a handler that
    formats and writes these reports, as specified in the configuration
    parameters for SASL, that is, the environment variables
    in the SASL application specification, which is found in the
    <fo:inline font-family="monospace">.app</fo:inline> file of SASL. For details, see the
    <fo:inline font-style="italic"><fo:inline font-family="monospace">sasl(6)</fo:inline></fo:inline> application in the
    Reference Manual and the <fo:inline font-style="italic"><fo:inline font-family="monospace">app(4)</fo:inline></fo:inline>
    file in the Kernel Reference Manual.</fo:block><fo:block id="idp309152" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.1 
      Supervisor Report</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A supervisor report is issued when a supervised child terminates
      unexpectedly. A supervisor report contains the following
      items:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Supervisor</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Name of the reporting supervisor.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Context</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Indicates in which phase the child terminated
       from the supervisor's point of view. This can be
       <fo:inline font-family="monospace">start_error</fo:inline>, <fo:inline font-family="monospace">child_terminated</fo:inline>, or
       <fo:inline font-family="monospace">shutdown_error</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Reason</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Termination reason.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Offender</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start specification for the child.</fo:block></fo:block></fo:block-container>
    </fo:block>
  <fo:block id="idp300304" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.2 
      Progress Report</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A progress report is issued when a supervisor starts or
      restarts a child. A progress report contains the following items:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Supervisor</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Name of the reporting supervisor.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Started</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start specification for the successfully
       started child.</fo:block></fo:block></fo:block-container>
    </fo:block>
    
  <fo:block id="idm31088" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.3 
      Crash Report</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Processes started with functions 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">proc_lib:spawn</fo:inline></fo:inline> or
      <fo:inline font-style="italic"><fo:inline font-family="monospace">proc_lib:spawn_link</fo:inline></fo:inline> 
      are wrapped within a <fo:inline font-family="monospace">catch</fo:inline>. A crash report is issued when such 
      a process terminates with an unexpected reason, which is any reason 
      other than <fo:inline font-family="monospace">normal</fo:inline>, <fo:inline font-family="monospace">shutdown</fo:inline>, or <fo:inline font-family="monospace">{shutdown,Term}</fo:inline>.
      Processes using behaviors
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_server</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_fsm</fo:inline></fo:inline> or
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_statem</fo:inline></fo:inline>
      are examples of such processes. A crash report contains the following items:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Crasher</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Information about the crashing process, such
       as initial function call, exit reason, and message queue.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Neighbours</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Information about processes that are linked to the crashing
       process and do not trap exits. These processes are the
       neighbours that terminate because of this process
       crash. The information gathered is the same as the information
       for Crasher, described in the previous item.</fo:block></fo:block></fo:block-container>
    </fo:block>

    <fo:block id="idm25328" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Example</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following example shows the reports generated
        when a process crashes. The example process is a
        <fo:inline font-family="monospace">permanent</fo:inline> process supervised by the <fo:inline font-family="monospace">test_sup</fo:inline>
        supervisor. A division by zero is executed and the error is
        first reported by the faulty process. A crash report is
        generated, as the process was started using function
        <fo:inline font-style="italic"><fo:inline font-family="monospace">proc_lib:spawn/3</fo:inline></fo:inline>. 
	The supervisor generates a
        supervisor report showing the crashed process. A
        progress report is generated when the process is finally
        restarted.</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
        =ERROR REPORT==== 27-May-1996::13:38:56 ===
        &lt;0.63.0&gt;: Divide by zero !
        
        =CRASH REPORT==== 27-May-1996::13:38:56 ===
        crasher:
        pid: &lt;0.63.0&gt;
        registered_name: []
        error_info: {badarith,{test,s,[]}}
        initial_call: {test,s,[]}
        ancestors: [test_sup,&lt;0.46.0&gt;]
        messages: []
        links: [&lt;0.47.0&gt;]
        dictionary: []
        trap_exit: false
        status: running
        heap_size: 128
        stack_size: 128
        reductions: 348
        neighbours:
        
        =SUPERVISOR REPORT==== 27-May-1996::13:38:56 ===
        Supervisor: {local,test_sup}
        Context:    child_terminated
        Reason:     {badarith,{test,s,[]}}
        Offender:   [{pid,&lt;0.63.0&gt;},
        {name,test},
        {mfa,{test,t,[]}},
        {restart_type,permanent},
        {shutdown,200},
        {child_type,worker}]
        
        =PROGRESS REPORT==== 27-May-1996::13:38:56 ===
        Supervisor: {local,test_sup}
        Started:  [{pid,&lt;0.64.0&gt;},
        {name,test},
        {mfa,{test,t,[]}},
        {restart_type,permanent},
        {shutdown,200},
        {child_type,worker}]</fo:block>
    
  <fo:block id="idp513712" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.4 
      Multi-File Error Report Logging</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Multi-file error report logging is used to store error messages
      received by <fo:inline font-family="monospace">error_logger</fo:inline>. The error messages
      are stored in several files and each file is smaller than a
      specified number of kilobytes. No more than a specified number
      of files exist at the same time. The logging is very fast, as
      each error message is written as a binary term.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more details, see the
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sasl(6)</fo:inline></fo:inline>
      application in the Reference Manual.</fo:block>
  <fo:block id="idp285040" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.5 
      Report Browser</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The report browser is used to browse and format error reports
      written by the error logger handler 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">log_mf_h</fo:inline></fo:inline> 
      defined in STDLIB.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">log_mf_h</fo:inline> handler writes all reports to a
      report logging directory, which is specified when
      configuring the SASL application.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the report browser is
      used offline, the reports can be copied to another directory
      specified when starting the browser. If no such directory
      is specified, the browser reads reports from the SASL
      <fo:inline font-family="monospace">error_logger_mf_dir</fo:inline>.</fo:block>

    <fo:block id="idm24816" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Starting Report Browser</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start the <fo:inline font-family="monospace">rb_server</fo:inline> with function
        <fo:inline font-style="italic"><fo:inline font-family="monospace">rb:start([Options])</fo:inline></fo:inline> 
	as shown in the following example:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
        5&gt; <fo:inline font-weight="bold">rb:start([{max, 20}]).</fo:inline>
        rb: reading report...done.
        rb: reading report...done.
        rb: reading report...done.
        rb: reading report...done.
        {ok,&lt;0.199.0&gt;}</fo:block>
    

    <fo:block id="idp94416" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Online Help</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Enter command 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rb:help()</fo:inline></fo:inline> 
      to access the report browser online help system.</fo:block>
    

    <fo:block id="idp473072" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">List Reports in Server</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use function 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rb:list()</fo:inline></fo:inline> 
      to list all loaded reports:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
        4&gt; <fo:inline font-weight="bold">rb:list().</fo:inline>
        No                Type          Process       Date     Time
        ==                ====          =======       ====     ====
        20            progress         &lt;0.17.0&gt; 1996-10-16 16:14:54
        19            progress         &lt;0.14.0&gt; 1996-10-16 16:14:55
        18               error         &lt;0.15.0&gt; 1996-10-16 16:15:02
        17            progress         &lt;0.14.0&gt; 1996-10-16 16:15:06
        16            progress         &lt;0.38.0&gt; 1996-10-16 16:15:12
        15            progress         &lt;0.17.0&gt; 1996-10-16 16:16:14
        14            progress         &lt;0.17.0&gt; 1996-10-16 16:16:14
        13            progress         &lt;0.17.0&gt; 1996-10-16 16:16:14
        12            progress         &lt;0.14.0&gt; 1996-10-16 16:16:14
        11               error         &lt;0.17.0&gt; 1996-10-16 16:16:21
        10               error         &lt;0.17.0&gt; 1996-10-16 16:16:21
        9        crash_report  release_handler 1996-10-16 16:16:21
        8   supervisor_report         &lt;0.17.0&gt; 1996-10-16 16:16:21
        7            progress         &lt;0.17.0&gt; 1996-10-16 16:16:21
        6            progress         &lt;0.17.0&gt; 1996-10-16 16:16:36
        5            progress         &lt;0.17.0&gt; 1996-10-16 16:16:36
        4            progress         &lt;0.17.0&gt; 1996-10-16 16:16:36
        3            progress         &lt;0.14.0&gt; 1996-10-16 16:16:36
        2               error         &lt;0.15.0&gt; 1996-10-16 16:17:04
        1            progress         &lt;0.14.0&gt; 1996-10-16 16:17:09
        ok</fo:block>
    

    <fo:block id="idp472592" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Show Reports</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use function 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rb:show(Number)</fo:inline></fo:inline> 
      to show details of a specific report:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
7&gt; <fo:inline font-weight="bold">rb:show(4).</fo:inline>
        
PROGRESS REPORT  &lt;0.20.0&gt;                                   1996-10-16 16:16:36
===============================================================================
supervisor                                                     {local,sasl_sup}
started
[{pid,&lt;0.24.0&gt;},
{name,release_handler},
{mfa,{release_handler,start_link,[]}},
{restart_type,permanent},
{shutdown,2000},
{child_type,worker}]
        
ok
8&gt; <fo:inline font-weight="bold">rb:show(9).</fo:inline>
        
CRASH REPORT  &lt;0.24.0&gt;                                      1996-10-16 16:16:21
===============================================================================
Crashing process                                                               
pid                                                                 &lt;0.24.0&gt;
registered_name                                              release_handler
error_info                             {undef,{release_handler,mbj_func,[]}}
initial_call
{gen,init_it,
[gen_server,
&lt;0.20.0&gt;,
&lt;0.20.0&gt;,
{erlang,register},
release_handler,
release_handler,
[],
[]]}
ancestors                                                [sasl_sup,&lt;0.18.0&gt;]
messages                                                                  []
links                                                    [&lt;0.23.0&gt;,&lt;0.20.0&gt;]
dictionary                                                                []
trap_exit                                                              false
status                                                               running
heap_size                                                                610
stack_size                                                               142
reductions                                                                54

ok</fo:block>
    

    <fo:block id="idp471952" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Search Reports</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All reports containing a common pattern can be shown.
        Suppose a process crashes because it tries to call a
        non-existing function <fo:inline font-family="monospace">release_handler:mbj_func/1</fo:inline>.
        The reports can then be shown as follows:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
12&gt; <fo:inline font-weight="bold">rb:grep("mbj_func").</fo:inline>
Found match in report number 11
        
ERROR REPORT  &lt;0.24.0&gt;                                      1996-10-16 16:16:21
===============================================================================
        
** undefined function: release_handler:mbj_func[] **
Found match in report number 10

ERROR REPORT  &lt;0.24.0&gt;                                      1996-10-16 16:16:21
===============================================================================
        
** Generic server release_handler terminating 
** Last message in was {unpack_release,hej}
** When Server state == {state,[],
"/home/dup/otp2/otp_beam_sunos5_p1g_7",
[{release,
"OTP  APN 181 01",
"P1G",
undefined,
[],
permanent}],
undefined}
** Reason for termination == 
** {undef,{release_handler,mbj_func,[]}}
Found match in report number 9
        
CRASH REPORT  &lt;0.24.0&gt;                                      1996-10-16 16:16:21
===============================================================================
Crashing process                                                               
pid                                                                 &lt;0.24.0&gt;
registered_name                                              release_handler
error_info                             {undef,{release_handler,mbj_func,[]}}
initial_call
{gen,init_it,
[gen_server,
&lt;0.20.0&gt;,
&lt;0.20.0&gt;,
{erlang,register},
release_handler,
release_handler,
[],
[]]}
ancestors                                                [sasl_sup,&lt;0.18.0&gt;]
messages                                                                  []
links                                                    [&lt;0.23.0&gt;,&lt;0.20.0&gt;]
dictionary                                                                []
trap_exit                                                              false
status                                                               running
heap_size                                                                610
stack_size                                                               142
reductions                                                                54
        
Found match in report number 8
        
SUPERVISOR REPORT  &lt;0.20.0&gt;                                 1996-10-16 16:16:21
===============================================================================
Reporting supervisor                                           {local,sasl_sup}
        
Child process                                                                  
errorContext                                                child_terminated
reason                                 {undef,{release_handler,mbj_func,[]}}
pid                                                                 &lt;0.24.0&gt;
name                                                         release_handler
start_function                               {release_handler,start_link,[]}
restart_type                                                       permanent
shutdown                                                                2000
child_type                                                            worker
        
ok</fo:block>
    

    <fo:block id="idp281808" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Stop Server</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use function 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rb:stop()</fo:inline></fo:inline> 
      to stop the <fo:inline font-family="monospace">rb_server</fo:inline>:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
13&gt; <fo:inline font-weight="bold">rb:stop().</fo:inline>
ok</fo:block>
    
  <fo:block id="idm26848" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">2   
      Reference Manual</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SASL application provides support for alarm handling,
      release handling, and related functions.</fo:block>
  <fo:block page-break-before="always" id="idp1063408" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">sasl</fo:marker>sasl</fo:block>Application</fo:block>
  <fo:block/>
    sasl
    The SASL application
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SASL application provides the following services:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">alarm_handler</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">rb</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">release_handler</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">systools</fo:inline></fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SASL application also includes <fo:inline font-family="monospace">error_logger</fo:inline> event
      handlers for formatting SASL error and crash reports.</fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
       <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The SASL application in OTP has nothing to do with
          "Simple Authentication and Security Layer" (RFC 4422).</fo:block>
    </fo:block>
  

  <fo:block id="idp896848" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Error Logger Event Handlers</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following error logger event handlers are used by
      the SASL application.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">sasl_report_tty_h</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Formats and writes <fo:inline font-weight="bold">supervisor reports</fo:inline>, <fo:inline font-weight="bold">crash
        reports</fo:inline>, and <fo:inline font-weight="bold">progress reports</fo:inline> to <fo:inline font-family="monospace">stdio</fo:inline>.
        This error logger event handler uses
	<fo:inline font-style="italic">error_logger_format_depth</fo:inline>
	in the Kernel application to limit how much detail is
        printed in crash and supervisor reports.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">sasl_report_file_h</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Formats and writes <fo:inline font-weight="bold">supervisor reports</fo:inline>, <fo:inline font-weight="bold">crash
        report</fo:inline>, and <fo:inline font-weight="bold">progress report</fo:inline> to a single file.
        This error logger event handler uses
	<fo:inline font-style="italic">error_logger_format_depth</fo:inline>
	in the Kernel application to limit the details
        printed in crash and supervisor reports.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">log_mf_h</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This error logger writes <fo:inline font-weight="bold">all</fo:inline> events sent to the
          error logger to disk. Multiple files and log rotation are
          used. For efficiency reasons, each event is written as a
          binary. For more information about this handler,
          see <fo:inline font-style="italic">the STDLIB Reference
          Manual</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To activate this event handler, three SASL
          configuration parameters must be set,
          <fo:inline font-family="monospace">error_logger_mf_dir</fo:inline>, <fo:inline font-family="monospace">error_logger_mf_maxbytes</fo:inline>,
          and <fo:inline font-family="monospace">error_logger_mf_maxfiles</fo:inline>. The next section provides
          more information about the configuration parameters.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
  

  <fo:block id="idp618928" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Configuration</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following configuration parameters are defined for the SASL
      application. For more information about configuration parameters, see
      <fo:inline font-style="italic"><fo:inline font-family="monospace">app(4)</fo:inline></fo:inline> in Kernel.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All configuration parameters are optional.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">sasl_error_logger = Value </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Value</fo:inline> is one of the following:</fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">tty</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Installs <fo:inline font-family="monospace">sasl_report_tty_h</fo:inline> in the error logger.
            This is the default option.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{file,FileName}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Installs <fo:inline font-family="monospace">sasl_report_file_h</fo:inline> in the error logger.
            All reports go to file <fo:inline font-family="monospace">FileName</fo:inline>, which is a
            string.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{file,FileName,Modes}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Same as <fo:inline font-family="monospace">{file,FileName}</fo:inline>, except that <fo:inline font-family="monospace">Modes</fo:inline>
            allows you to specify the modes used for opening the <fo:inline font-family="monospace">FileName</fo:inline>
            given to the <fo:inline font-style="italic">file:open/2</fo:inline>
            call. When not specified, <fo:inline font-family="monospace">Modes</fo:inline> defaults to <fo:inline font-family="monospace">[write]</fo:inline>.
            Use <fo:inline font-family="monospace">[append]</fo:inline> to have the <fo:inline font-family="monospace">FileName</fo:inline> open in append mode.
            <fo:inline font-family="monospace">FileName</fo:inline> is a string.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">false</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">No SASL error logger handler is installed.</fo:block></fo:block></fo:block-container>
        </fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">errlog_type = error | progress | all </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Restricts the error logging performed by the specified
          <fo:inline font-family="monospace">sasl_error_logger</fo:inline> to error reports or progress reports,
          or both. Default is <fo:inline font-family="monospace">all</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">error_logger_mf_dir = string() | false </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies in which directory <fo:inline font-family="monospace">log_mf_h</fo:inline> is to store
          its files. If this parameter is undefined or <fo:inline font-family="monospace">false</fo:inline>,
          the <fo:inline font-family="monospace">log_mf_h</fo:inline> handler is not installed.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">error_logger_mf_maxbytes = integer() </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the maximum size of each individual file written
          by <fo:inline font-family="monospace">log_mf_h</fo:inline>. If this parameter is undefined,
          the <fo:inline font-family="monospace">log_mf_h</fo:inline> handler is not installed.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">error_logger_mf_maxfiles = 0&lt;integer()&lt;256 </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the number of files used by <fo:inline font-family="monospace">log_mf_h</fo:inline>. If
          this parameter is undefined, the <fo:inline font-family="monospace">log_mf_h</fo:inline> handler is
          not installed.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">start_prg = string() </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the program to be used when restarting the system
          during release installation. Default is
          <fo:inline font-family="monospace">$OTP_ROOT/bin/start</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">masters = [atom()] </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the nodes used by this node to read/write release
          information. This parameter is ignored if parameter
          <fo:inline font-family="monospace">client_directory</fo:inline> is not set.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">client_directory = string() </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This parameter specifies the client directory at the master
          nodes. For details, see
          <fo:inline font-style="italic">Release Handling</fo:inline>
          in <fo:inline font-weight="bold">OTP Design Principles</fo:inline>. This parameter is
          ignored if parameter <fo:inline font-family="monospace">masters</fo:inline> is not set.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">static_emulator = true | false </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Indicates if the Erlang emulator is statically installed. A
          node with a static emulator cannot switch dynamically to a
          new emulator, as the executable files are written into memory
          statically. This parameter is ignored if parameters <fo:inline font-family="monospace">masters</fo:inline>
          and <fo:inline font-family="monospace">client_directory</fo:inline> are not set.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">releases_dir = string() </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Indicates where the <fo:inline font-family="monospace">releases</fo:inline> directory is located.
          The release handler writes all its files to this directory.
          If this parameter is not set, the OS environment parameter
          <fo:inline font-family="monospace">RELDIR</fo:inline> is used. By default, this is
          <fo:inline font-family="monospace">$OTP_ROOT/releases</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">utc_log = true | false </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If set to <fo:inline font-family="monospace">true</fo:inline>, all dates in textual log outputs are
          displayed in Universal Coordinated Time with the string
          <fo:inline font-family="monospace">UTC</fo:inline> appended.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
  

  <fo:block id="idp1485008" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">alarm_handler(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">error_logger(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">log_mf_h(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rb(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools(3)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp712944" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">alarm_handler</fo:marker>alarm_handler</fo:block>Erlang module</fo:block>
  <fo:block/>
  alarm_handler
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The alarm handler process is a 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_event</fo:inline></fo:inline> 
      event manager process that receives alarms in the system. 
      This process is not intended to be a complete alarm handler. 
      It defines a place to which alarms can be sent. One simple event 
      handler is installed in the alarm handler at startup, but users 
      are encouraged to write and install their own handlers.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The simple event handler sends all alarms as info reports to
      the error logger, and saves all in a list. This list can be
      passed to a user-defined event handler, which can be installed
      later. The list can grow large if many alarms are generated.
      This is a good reason to install a better user-defined
      handler.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Functions are provided to set and clear alarms. The alarm
      format is defined by the user. For example, an event handler
      for SNMP can be defined, together with an alarm Management
      Information Base (MIB).</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The alarm handler is part of the SASL application.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When writing new event handlers for the alarm handler, the
      following events must be handled:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{set_alarm, {AlarmId, AlarmDescr}}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This event is generated by
          <fo:inline font-family="monospace">alarm_handler:set_alarm({AlarmId, AlarmDecsr})</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{clear_alarm, AlarmId}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This event is
          generated by <fo:inline font-family="monospace">alarm_handler:clear_alarm(AlarmId)</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The default simple handler is called <fo:inline font-family="monospace">alarm_handler</fo:inline> and
      it can be exchanged by calling 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_event:swap_handler/3</fo:inline></fo:inline>
      as <fo:inline font-family="monospace">gen_event:swap_handler(alarm_handler, {alarm_handler, swap},
      {NewHandler, Args})</fo:inline>. <fo:inline font-family="monospace">NewHandler:init({Args, {alarm_handler,
      Alarms}})</fo:inline> is called. For more details, see
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_event(3)</fo:inline></fo:inline>
      in STDLIB.</fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp434608">clear_alarm(AlarmId) -&gt; void()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AlarmId = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sends event <fo:inline font-family="monospace">clear_alarm</fo:inline> to all event handlers.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When receiving this event, the default simple handler
          clears the latest received alarm with id <fo:inline font-family="monospace">AlarmId</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp631248">get_alarms() -&gt; [alarm()]</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of all active alarms. This function can only
          be used when the simple handler is installed.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp393664">set_alarm(alarm())</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">alarm() = {AlarmId, AlarmDescription}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AlarmId = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AlarmDescription = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sends event <fo:inline font-family="monospace">set_alarm</fo:inline> to all event handlers.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When receiving this event, the default simple handler
          stores the alarm. <fo:inline font-family="monospace">AlarmId</fo:inline> identifies the alarm
          and is used when the alarm is cleared.</fo:block>
      </fo:block>
  

  <fo:block id="idp376384" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">error_logger(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_event(3)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp410128" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">rb</fo:marker>rb</fo:block>Erlang module</fo:block>
  <fo:block/>
  rb
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Report Browser (RB) tool is used to browse and
      format error reports written by the error logger handler
      <fo:inline font-style="italic"><fo:inline font-family="monospace">log_mf_h</fo:inline></fo:inline>
      in STDLIB.</fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1487840">filter(Filters)</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp372256">filter(Filters, Dates)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Filters = [filter()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">filter() = {Key, Value} | {Key, Value, no} | {Key, RegExp, re} |
          {Key, RegExp, re, no}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RegExp = string() | {string(), Options} | re:mp() | {re:mp(), Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dates = {DateFrom, DateTo} | {DateFrom, from} | {DateTo, to}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">DateFrom = DateTo = calendar:datetime()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Displays the reports that match the provided filters.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a filter includes the <fo:inline font-family="monospace">no</fo:inline> atom, it excludes the
          reports that match that filter.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The reports are matched using the
          <fo:inline font-style="italic"><fo:inline font-family="monospace">proplists</fo:inline></fo:inline>
          module in STDLIB. The report must be a proplist
          to be matched against any of the filters.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the filter has the form <fo:inline font-family="monospace">{Key, RegExp, re}</fo:inline>, the
          report must contain an element with key equal to <fo:inline font-family="monospace">Key</fo:inline> and
          the value must match the regular expression <fo:inline font-family="monospace">RegExp</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If parameter <fo:inline font-family="monospace">Dates</fo:inline> is specified, the reports are filtered
          according to the date when they occurred. If <fo:inline font-family="monospace">Dates</fo:inline> has
          the form <fo:inline font-family="monospace">{DateFrom, from}</fo:inline>, reports that occurred after
	  <fo:inline font-family="monospace">DateFrom</fo:inline> are displayed.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">Dates</fo:inline> has the form <fo:inline font-family="monospace">{DateTo, to}</fo:inline>, reports that
          occurred before <fo:inline font-family="monospace">DateTo</fo:inline> are displayed.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If two <fo:inline font-family="monospace">Dates</fo:inline> are specified, reports that occurred between
          those dates are returned.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To filter only by dates, specify the empty list as the <fo:inline font-family="monospace">Filters</fo:inline>
	   parameter.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For details about parameter <fo:inline font-family="monospace">RegExp</fo:inline>, see <fo:inline font-family="monospace">rb:grep/1</fo:inline>.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For details about data type <fo:inline font-family="monospace">mp()</fo:inline>, see 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">re:mp()</fo:inline></fo:inline>.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For details about data type <fo:inline font-family="monospace">datetime()</fo:inline>, see 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">calendar:datetime()</fo:inline></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp790528">grep(RegExp)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RegExp = string() | {string(), Options} | re:mp() | {re:mp(), Options}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All reports matching the regular expression <fo:inline font-family="monospace">RegExp</fo:inline>
          are displayed. <fo:inline font-family="monospace">RegExp</fo:inline> can be any of the following:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A string containing the regular expression</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A tuple with the string and the options for compilation</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A compiled regular expression</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A compiled regular expression and the options for running it</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For a definition of valid regular expressions and options, see
          the <fo:inline font-style="italic"><fo:inline font-family="monospace">re</fo:inline></fo:inline> module in
          STDLIB and in particular function <fo:inline font-family="monospace">re:run/3</fo:inline>.</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For details about data type <fo:inline font-family="monospace">mp()</fo:inline>, see 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">re:mp()</fo:inline></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp886672">h()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp887120">help()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Displays online help information.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp889392">list()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp889840">list(Type)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = type()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">type() = error | error_report | info_msg | info_report |
          warning_msg | warning_report | crash_report |
          supervisor_report | progress</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Lists all reports loaded in
          <fo:inline font-family="monospace">rb_server</fo:inline>. Each report is given a unique number that
          can be used as a reference to the report in function
          <fo:inline font-style="italic"><fo:inline font-family="monospace">show/1</fo:inline></fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If no <fo:inline font-family="monospace">Type</fo:inline> is specified, all reports are listed.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1538912">log_list()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1539296">log_list(Type)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = type()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">type() = error | error_report | info_msg | info_report |
          warning_msg | warning_report | crash_report |
          supervisor_report | progress</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Same as functions 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">list/0</fo:inline></fo:inline> or 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">list/1</fo:inline></fo:inline>,
	  but the result is printed to a log file, if set; otherwise
          to <fo:inline font-family="monospace">standard_io</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If no <fo:inline font-family="monospace">Type</fo:inline> is specified, all reports are listed.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1545184">rescan()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1545568">rescan(Options)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [opt()]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Rescans the report directory. <fo:inline font-family="monospace">Options</fo:inline> is the same as
          for function 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">start/1</fo:inline></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1549824">show()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1550272">show(Report)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Report = integer() | type()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If argument <fo:inline font-family="monospace">type</fo:inline> is specified, all loaded reports of this
          type are displayed. If an integer argument is specified, the
          report with this reference number is displayed. If no argument
          is specified, all reports are displayed.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1554096">start()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1554544">start(Options)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [opt()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">opt() = {start_log, FileName} | {max, MaxNoOfReports} |
          {report_dir, DirString} | {type, ReportType} |
          {abort_on_error, Bool}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FileName = string() | atom() | pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MaxNoOfReports = integer() | all</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">DirString = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ReportType = type() | [type()] | all</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bool = boolean()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function <fo:inline font-family="monospace">start/1</fo:inline> starts <fo:inline font-family="monospace">rb_server</fo:inline> with the
          specified options, whereas function <fo:inline font-family="monospace">start/0</fo:inline> starts with
          default options. <fo:inline font-family="monospace">rb_server</fo:inline> must be started before
          reports can be browsed. When <fo:inline font-family="monospace">rb_server</fo:inline> is
          started, the files in the specified directory are
          scanned. The other functions assume that the server has
	  started.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Options:</fo:inline></fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{start_log, FileName}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts logging to file,
	  registered name, or <fo:inline font-family="monospace">io_device</fo:inline>. All reports are printed
	  to the specified destination. Default is <fo:inline font-family="monospace">standard_io</fo:inline>.
	  Option <fo:inline font-family="monospace">{start_log, standard_error}</fo:inline> is not allowed and
          will be replaced by default <fo:inline font-family="monospace">standard_io</fo:inline>.</fo:block></fo:block></fo:block-container>
        <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{max, MaxNoOfReports}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Controls how many reports
          <fo:inline font-family="monospace">rb_server</fo:inline> is to read at startup. This option is
          useful, as the directory can contain a large amount of reports. If this
          option is specified, the <fo:inline font-family="monospace">MaxNoOfReports</fo:inline> latest reports
          are read. Default is <fo:inline font-family="monospace">all</fo:inline>.</fo:block></fo:block></fo:block-container>
        <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{report_dir, DirString}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the directory where
          the error log files are located. Default is
          the directory specified by application environment
          variable <fo:inline font-family="monospace">error_logger_mf_dir</fo:inline>,
          see <fo:inline font-style="italic">sasl(6)</fo:inline>.</fo:block></fo:block></fo:block-container>
        <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{type, ReportType}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Controls what kind of reports
          <fo:inline font-family="monospace">rb_server</fo:inline> is to read at startup. <fo:inline font-family="monospace">ReportType</fo:inline>
          is a supported type, <fo:inline font-family="monospace">all</fo:inline>, or a list of supported
          types. Default is <fo:inline font-family="monospace">all</fo:inline>.</fo:block></fo:block></fo:block-container>
        <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{abort_on_error, Bool}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies if
          logging is to be ended if <fo:inline font-family="monospace">rb</fo:inline> encounters an unprintable
          report. (You can get a report with an incorrect form if function
          <fo:inline font-family="monospace">error_logger</fo:inline>, <fo:inline font-family="monospace">error_msg</fo:inline>, or
          <fo:inline font-family="monospace">info_msg</fo:inline> has been called with an invalid format string)</fo:block>
          <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
            <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If <fo:inline font-family="monospace">Bool</fo:inline> is <fo:inline font-family="monospace">true</fo:inline>, <fo:inline font-family="monospace">rb</fo:inline> stops logging
            (and prints an error message to <fo:inline font-family="monospace">stdout</fo:inline>) if it encounters
            a badly formatted report. If logging to file is enabled, an
            error message is appended to the log file as well.</fo:block></fo:list-item-body></fo:list-item>
            <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If <fo:inline font-family="monospace">Bool</fo:inline> is <fo:inline font-family="monospace">false</fo:inline> (the default value), <fo:inline font-family="monospace">rb</fo:inline> 
            prints an error message to <fo:inline font-family="monospace">stdout</fo:inline> for every bad report it
            encounters, but the logging process is never ended. All printable 
            reports are written. If logging to file is enabled, <fo:inline font-family="monospace">rb</fo:inline> prints 
            <fo:inline font-family="monospace">* UNPRINTABLE REPORT *</fo:inline> in the log file at the location of an
            unprintable report.</fo:block></fo:list-item-body></fo:list-item>
         </fo:list-block></fo:block></fo:block-container>
       </fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1585424">start_log(FileName)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FileName = string() | atom() | pid()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Redirects all report output from the RB tool to the
          specified file, registered name, or <fo:inline font-family="monospace">io_device</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1589568">stop()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops <fo:inline font-family="monospace">rb_server</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1592704">stop_log()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Closes the log file. The output from the RB tool is
          directed to <fo:inline font-family="monospace">standard_io</fo:inline>.</fo:block>
      </fo:block>
  
<fo:block page-break-before="always" id="idp1601200" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">release_handler</fo:marker>release_handler</fo:block>Erlang module</fo:block>
  <fo:block/>
  release_handler
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">release handler</fo:inline> process belongs to the SASL
      application, which is responsible for <fo:inline font-weight="bold">release handling</fo:inline>,
      that is, unpacking, installation, and removal of release packages.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An introduction to release handling and an example is provided in
      <fo:inline font-style="italic">OTP Design
      Principles</fo:inline> in <fo:inline font-weight="bold">System Documentation</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-weight="bold">release package</fo:inline> is a compressed tar file containing
      code for a certain version of a release, created by calling
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools:make_tar/1,2</fo:inline></fo:inline>.
      The release package is to be located in the <fo:inline font-family="monospace">$ROOT/releases</fo:inline>
      directory of the previous version of the release, where
      <fo:inline font-family="monospace">$ROOT</fo:inline> is the installation root directory,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">code:root_dir()</fo:inline></fo:inline>.
      Another <fo:inline font-family="monospace">releases</fo:inline> directory can be specified using the SASL
      configuration parameter <fo:inline font-family="monospace">releases_dir</fo:inline> or the OS environment
      variable <fo:inline font-family="monospace">RELDIR</fo:inline>. The release handler must have write access
      to this directory to install the new release.
      The persistent state of the release handler is stored there in a
      file called <fo:inline font-family="monospace">RELEASES</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A release package is always to contain:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A release resource file, <fo:inline font-family="monospace">Name.rel</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A boot script, <fo:inline font-family="monospace">Name.boot</fo:inline></fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">.rel</fo:inline> file contains information about the release: its name,
      version, and which ERTS and application versions it uses.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A release package can also contain:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A release upgrade file, <fo:inline font-family="monospace">relup</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A system configuration file, <fo:inline font-family="monospace">sys.config</fo:inline></fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">relup</fo:inline> file contains instructions for how to upgrade
      to, or downgrade from, this version of the release.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release package can be <fo:inline font-weight="bold">unpacked</fo:inline>, which extracts
      the files. An unpacked release can be <fo:inline font-weight="bold">installed</fo:inline>.
      The currently used version of the release is then upgraded or
      downgraded to the specified version by evaluating the instructions
      in the <fo:inline font-family="monospace">relup</fo:inline> file. An installed release can be made
      <fo:inline font-weight="bold">permanent</fo:inline>. Only one permanent release can exist in
      the system, and this release is used if the system
      is restarted. An installed release, except the permanent one,
      can be <fo:inline font-weight="bold">removed</fo:inline>. When a release is removed, all files
      belonging to that release only are deleted.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Each release version has a status, which can be
      <fo:inline font-family="monospace">unpacked</fo:inline>, <fo:inline font-family="monospace">current</fo:inline>, <fo:inline font-family="monospace">permanent</fo:inline>, or <fo:inline font-family="monospace">old</fo:inline>.
      There is always one latest release, which either has status
      <fo:inline font-family="monospace">permanent</fo:inline> (normal case) or <fo:inline font-family="monospace">current</fo:inline> (installed, but
      not yet made permanent). The meaning of the status values are
      illustrated in the following table:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
        Status     Action                NextStatus
        -------------------------------------------
        -          unpack                unpacked
        unpacked   install               current
                   remove                -
        current    make_permanent        permanent
                   install other         old
                   remove                -
        permanent  make other permanent  old
                   install               permanent
        old        reboot_old            permanent
                   install               current
                   remove                -</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release handler process is a locally registered process on
      each node. When a release is installed in a distributed system,
      the release handler on each node must be called. The release
      installation can be synchronized between nodes. From an operator
      view, it can be unsatisfactory to specify each node. The aim is
      to install one release package in the system, no matter how many
      nodes there are. It is recommended that
      software management functions are written that take care of
      this problem. Such a function can have knowledge of the system
      architecture, so it can contact each individual release handler
      to install the package.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For release handling to work properly, the runtime system must
      know which release it is running. It
      must also be able to change (in runtime) which boot script and
      system configuration file are to be used if the system is
      restarted. This is taken care of automatically if Erlang is
      started as an embedded system. Read about this in
      <fo:inline font-style="italic">Embedded System</fo:inline> in
      <fo:inline font-weight="bold">System Documentation</fo:inline>. In this case, the system
      configuration file <fo:inline font-family="monospace">sys.config</fo:inline> is mandatory.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The installation of a new release can restart the system. Which
      program to use is specified by the SASL configuration
      parameter <fo:inline font-family="monospace">start_prg</fo:inline>, which defaults
      to <fo:inline font-family="monospace">$ROOT/bin/start</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The emulator restart on Windows NT expects that the system is
      started using the <fo:inline font-family="monospace">erlsrv</fo:inline> program (as a service).
      Furthermore, the release handler expects that the service is named
      <fo:inline font-family="monospace">NodeName</fo:inline>_<fo:inline font-family="monospace">Release</fo:inline>, where <fo:inline font-family="monospace">NodeName</fo:inline> is
      the first part of the Erlang node name (up to, but not including
      the "@") and <fo:inline font-family="monospace">Release</fo:inline> is the current release version.
      The release handler furthermore expects that a
      program like <fo:inline font-family="monospace">start_erl.exe</fo:inline> is specified as "machine" to
      <fo:inline font-family="monospace">erlsrv</fo:inline>. During upgrading with restart, a new service
      is registered and started. The new service is set to
      automatic and the old service is removed when the new release
      is made permanent.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release handler at a node running on a diskless machine,
      or with a read-only file system, must be configured accordingly
      using the following SASL configuration parameters (for
      details, see <fo:inline font-style="italic">sasl(6)</fo:inline>):</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">masters</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This node uses some master nodes to store
          and fetch release information. All master nodes must be
          operational whenever release information is written by this
          node.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">client_directory</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">client_directory</fo:inline> in the directory structure of
          the master nodes must be specified.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">static_emulator</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This parameter specifies if the Erlang emulator is
          statically installed at the client node. A node with a static
          emulator cannot dynamically switch to a new emulator, as
          the executable files are statically written into memory.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release handler can also be used to unpack and
      install release packages when not running Erlang as an embedded
      system. However, in this case the user must somehow ensure that
      correct boot scripts and configuration files are used if
      the system must be restarted.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Functions are provided for using another file structure
      than the structure defined in OTP. These functions can be used
      to test a release upgrade locally.</fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1644448">check_install_release(Vsn) -&gt; {ok, OtherVsn, Descr} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1644944">check_install_release(Vsn,Opts) -&gt; {ok, OtherVsn, Descr} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = OtherVsn = string()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opts = [Opt]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opt = purge</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Descr = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Checks if the specified version <fo:inline font-family="monospace">Vsn</fo:inline> of the release
          can be installed. The release must not have status
          <fo:inline font-family="monospace">current</fo:inline>. Issues warnings if <fo:inline font-family="monospace">relup</fo:inline> file or
          <fo:inline font-family="monospace">sys.config</fo:inline> is not present. If <fo:inline font-family="monospace">relup</fo:inline> file is present,
          its contents are checked and <fo:inline font-family="monospace">{error,Reason}</fo:inline> is
          returned if an error is found. Also checks that all required
          applications are present and that all new code can be loaded;
          <fo:inline font-family="monospace">{error,Reason}</fo:inline> is returned if an error is found.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Evaluates all instructions that occur before
          the <fo:inline font-family="monospace">point_of_no_return</fo:inline> instruction in the release
          upgrade script.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the same as 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1</fo:inline></fo:inline>.
	<fo:inline font-family="monospace">Descr</fo:inline> defaults to "" if no <fo:inline font-family="monospace">relup</fo:inline> file is found.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">purge</fo:inline> is specified, all old code that can
          be soft-purged is purged after all other checks are
          successfully completed. This can be useful to
          reduce the time needed by <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1</fo:inline></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1658496">create_RELEASES(Root, RelDir, RelFile, AppDirs) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Root = RelDir = RelFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AppDirs = [{App, Vsn, Dir}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Vsn = Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an initial <fo:inline font-family="monospace">RELEASES</fo:inline> file to be used by the
          release handler. This file must exist to install new
          releases.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Root</fo:inline> is the root of the installation (<fo:inline font-family="monospace">$ROOT</fo:inline>) as
          described earlier. <fo:inline font-family="monospace">RelDir</fo:inline> is the directory where
          the <fo:inline font-family="monospace">RELEASES</fo:inline> file is to be created (normally
          <fo:inline font-family="monospace">$ROOT/releases</fo:inline>). <fo:inline font-family="monospace">RelFile</fo:inline> is the name
          of the <fo:inline font-family="monospace">.rel</fo:inline> file that describes the initial release,
          including the extension <fo:inline font-family="monospace">.rel</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">AppDirs</fo:inline> can be used to specify from where the modules
          for the specified applications are to be loaded. <fo:inline font-family="monospace">App</fo:inline> is
          the name of an application, <fo:inline font-family="monospace">Vsn</fo:inline> is the version, and
          <fo:inline font-family="monospace">Dir</fo:inline> is the name of the directory where <fo:inline font-family="monospace">App-Vsn</fo:inline>
          is located. The corresponding modules are to be located under
          <fo:inline font-family="monospace">Dir/App-Vsn/ebin</fo:inline>. The directories for applications not
          specified in <fo:inline font-family="monospace">AppDirs</fo:inline> are assumed to be located in
          <fo:inline font-family="monospace">$ROOT/lib</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1672704">install_file(Vsn, File) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = File = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Installs a release-dependent file in the release structure.
          The release-dependent file must be in
          the release structure when a new release is installed:
          <fo:inline font-family="monospace">start.boot</fo:inline>, <fo:inline font-family="monospace">relup</fo:inline>, and <fo:inline font-family="monospace">sys.config</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function can be called, for example, when these files
          are generated at the target. The function is to be called after
          <fo:inline font-style="italic"><fo:inline font-family="monospace">set_unpacked/2</fo:inline></fo:inline> 
	has been called.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1679280">install_release(Vsn) -&gt; {ok, OtherVsn, Descr} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1679776">install_release(Vsn, [Opt]) -&gt; {ok, OtherVsn, Descr} | {continue_after_restart, OtherVsn, Descr} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = OtherVsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opt = {error_action, Action} | {code_change_timeout, Timeout}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">   | {suspend_timeout, Timeout} | {update_paths, Bool}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Action = restart | reboot</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Timeout = default | infinity | pos_integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Bool = boolean()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Descr = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = {illegal_option, Opt} | {already_installed, Vsn} | {change_appl_data, term()} | {missing_base_app, OtherVsn, App} | {could_not_create_hybrid_boot, term()} | term()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">App = atom()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Installs the specified version <fo:inline font-family="monospace">Vsn</fo:inline> of the release.
          Looks first for a <fo:inline font-family="monospace">relup</fo:inline> file for <fo:inline font-family="monospace">Vsn</fo:inline> and a
          script <fo:inline font-family="monospace">{UpFromVsn,Descr1,Instructions1}</fo:inline> in this file
          for upgrading from the current version. If not found,
          the function looks for a <fo:inline font-family="monospace">relup</fo:inline> file for the current
          version and a script <fo:inline font-family="monospace">{Vsn,Descr2,Instructions2}</fo:inline> in this
          file for downgrading to <fo:inline font-family="monospace">Vsn</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a script is found, the first thing that happens is that
          the application specifications are updated according to
          the <fo:inline font-family="monospace">.app</fo:inline> files and <fo:inline font-family="monospace">sys.config</fo:inline> belonging to
          the release version <fo:inline font-family="monospace">Vsn</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After the application specifications have been updated,
          the instructions in the script are evaluated and the function
          returns <fo:inline font-family="monospace">{ok,OtherVsn,Descr}</fo:inline> if successful.
          <fo:inline font-family="monospace">OtherVsn</fo:inline> and <fo:inline font-family="monospace">Descr</fo:inline> are the version
          (<fo:inline font-family="monospace">UpFromVsn</fo:inline> or <fo:inline font-family="monospace">Vsn</fo:inline>) and description
          (<fo:inline font-family="monospace">Descr1</fo:inline> or <fo:inline font-family="monospace">Descr2</fo:inline>) as specified in the script.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">{continue_after_restart,OtherVsn,Descr}</fo:inline> is
	  returned, the emulator is restarted
	  before the upgrade instructions are executed. This
	  occurs if the emulator or any of the applications
          Kernel, STDLIB, or SASL
	  are updated. The new emulator version
	  and these core applications execute after the restart.
	  For all other applications the old versions are
	  started and the upgrade is performed as normal by
	  executing the upgrade instructions.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a recoverable error occurs, the function returns
          <fo:inline font-family="monospace">{error,Reason}</fo:inline> and the original application
          specifications are restored. If a non-recoverable error
          occurs, the system is restarted.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Options</fo:inline>:</fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">error_action</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines if the node is to be
            restarted 
	    (<fo:inline font-style="italic"><fo:inline font-family="monospace">init:restart()</fo:inline></fo:inline>) 
	    or rebooted
            (<fo:inline font-style="italic"><fo:inline font-family="monospace">init:reboot()</fo:inline></fo:inline>) 
	    if there is an error during
            the installation. Default is <fo:inline font-family="monospace">restart</fo:inline>.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">code_change_timeout</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the time-out
            for all calls to 
	    <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:change_code</fo:inline></fo:inline>.
	    If no value is specified or <fo:inline font-family="monospace">default</fo:inline> is specified, the 
	    default value defined in <fo:inline font-family="monospace">sys</fo:inline> is used.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">suspend_timeout</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the time-out for 
            all calls to 
	    <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:suspend</fo:inline></fo:inline>.
	    If no value is specified, the values defined by the <fo:inline font-family="monospace">Timeout</fo:inline> 
	    parameter of the <fo:inline font-family="monospace">upgrade</fo:inline> or <fo:inline font-family="monospace">suspend</fo:inline> instructions are used.
            If <fo:inline font-family="monospace">default</fo:inline> is specified, the default value defined in
            <fo:inline font-family="monospace">sys</fo:inline> is used.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{update_paths,Bool}</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Indicates if all
            application code paths are to be updated (<fo:inline font-family="monospace">Bool==true</fo:inline>)
            or if only code paths for modified applications are to be
            updated (<fo:inline font-family="monospace">Bool==false</fo:inline>, default). This option has only
            effect for other application directories than the default
            <fo:inline font-family="monospace">$ROOT/lib/App-Vsn</fo:inline>, that is, application directories
            specified in argument <fo:inline font-family="monospace">AppDirs</fo:inline> in a call to
            <fo:inline font-style="italic"><fo:inline font-family="monospace">create_RELEASES/4</fo:inline></fo:inline> or 
	    <fo:inline font-style="italic"><fo:inline font-family="monospace">set_unpacked/2</fo:inline></fo:inline>.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Example:</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In the current version <fo:inline font-family="monospace">CurVsn</fo:inline> of a release, the
              application directory of <fo:inline font-family="monospace">myapp</fo:inline> is
              <fo:inline font-family="monospace">$ROOT/lib/myapp-1.0</fo:inline>. A new version <fo:inline font-family="monospace">NewVsn</fo:inline> is
              unpacked outside the release handler and the release
              handler is informed about this with a call as follows:</fo:block>
            <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
release_handler:set_unpacked(RelFile, [{myapp,"1.0","/home/user"},...]).
=&gt; {ok,NewVsn}</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">NewVsn</fo:inline> is installed with option
              <fo:inline font-family="monospace">{update_paths,true}</fo:inline>, then
              <fo:inline font-style="italic"><fo:inline font-family="monospace">code:lib_dir(myapp)</fo:inline></fo:inline>
	      returns <fo:inline font-family="monospace">/home/user/myapp-1.0</fo:inline>.</fo:block></fo:block></fo:block-container>
        </fo:block>
	<fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Installing a new release can be time consuming if
	  there are many processes in the system. The reason is that
	  each process must be checked for references to old code
	  before a module can be purged. This check can lead to
	  garbage collections and copying of data.</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To speed up the execution of
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release</fo:inline></fo:inline>, 
	  first call <fo:inline font-style="italic"><fo:inline font-family="monospace">check_install_release</fo:inline></fo:inline>,
	  using option <fo:inline font-family="monospace">purge</fo:inline>. This does the same
	  check for old code. Then purges all modules that can be
	  soft-purged. The purged modules do then no longer have any
	  old code, and 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release</fo:inline></fo:inline>
	  does not need to do the
	  checks.</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This does not reduce the overall time for the
	  upgrade, but it allows checks and purge to be executed
	  in the background before the real upgrade is started.</fo:block>
	</fo:block>
	<fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When upgrading the emulator from a version older than OTP
	  R15, an attempt is made to load new application beam
	  code into the old emulator. Sometimes the new beam
	  format cannot be read by the old emulator, so the code
	  loading fails and the complete upgrade is terminated. To
	  overcome this problem, the new application code is to be
	  compiled with the old emulator. For more information about
          emulator upgrade from pre OTP R15 versions, see
          <fo:inline font-style="italic">Design
          Principles</fo:inline> in <fo:inline font-weight="bold">System Documentation</fo:inline>.</fo:block>
	</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1729808">make_permanent(Vsn) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = {bad_status, Status} | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Makes the specified release version <fo:inline font-family="monospace">Vsn</fo:inline>
          permanent.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1733936">remove_release(Vsn) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = {permanent, Vsn} | client_node | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Removes a release and its files from the system.
          The release must not be the permanent release. Removes only
          the files and directories not in use by another release.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1737776">reboot_old_release(Vsn) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = {bad_status, Status} | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Reboots the system by making the old release permanent, and
          calls 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">init:reboot()</fo:inline></fo:inline> 
	  directly. The release must have status <fo:inline font-family="monospace">old</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1742816">set_removed(Vsn) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = {permanent, Vsn} | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Makes it possible to handle removal of releases outside
          the release handler. Tells the release handler that
          the release is removed from the system. This function does
          not delete any files.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1746672">set_unpacked(RelFile, AppDirs) -&gt; {ok, Vsn} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RelFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AppDirs = [{App, Vsn, Dir}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Vsn = Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Makes it possible to handle unpacking of releases outside
          the release handler. Tells the release handler that
          the release is unpacked. <fo:inline font-family="monospace">Vsn</fo:inline> is extracted from
          the release resource file <fo:inline font-family="monospace">RelFile</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">AppDirs</fo:inline> can be used to specify from where the modules
          for the specified applications are to be loaded. <fo:inline font-family="monospace">App</fo:inline> is
          the name of an application, <fo:inline font-family="monospace">Vsn</fo:inline> is the version, and
          <fo:inline font-family="monospace">Dir</fo:inline> is the name of the directory where <fo:inline font-family="monospace">App-Vsn</fo:inline>
          is located. The corresponding modules are to be located under
          <fo:inline font-family="monospace">Dir/App-Vsn/ebin</fo:inline>. The directories for applications not
          specified in <fo:inline font-family="monospace">AppDirs</fo:inline> are assumed to be located in
          <fo:inline font-family="monospace">$ROOT/lib</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1756928">unpack_release(Name) -&gt; {ok, Vsn} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = client_node | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Unpacks a release package <fo:inline font-family="monospace">Name.tar.gz</fo:inline> located in
          the <fo:inline font-family="monospace">releases</fo:inline> directory.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs some checks on the package, for example, checks
          that all mandatory files are present, and extracts its
          contents.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1762080">which_releases() -&gt; [{Name, Vsn, Apps, Status}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Apps = ["App-Vsn"]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Status = unpacked | current | permanent | old</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns all releases known to the release handler.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1766224">which_releases(Status) -&gt; [{Name, Vsn, Apps, Status}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = Vsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Apps = ["App-Vsn"]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Status = unpacked | current | permanent | old</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns all releases, known to the release handler, of a
          specific status.</fo:block>
      </fo:block>
  

  <fo:block id="idp1770576" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Application Upgrade/Downgrade</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following functions can be used to test upgrade and downgrade
      of single applications (instead of upgrading/downgrading an entire
      release). A script corresponding to the instructions in the
      <fo:inline font-family="monospace">relup</fo:inline> file is created
      on-the-fly, based on the <fo:inline font-family="monospace">.appup</fo:inline> file for the application,
      and evaluated exactly in the same way as <fo:inline font-family="monospace">release_handler</fo:inline>
      does.</fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">These functions are primarily intended for simplified testing
        of <fo:inline font-family="monospace">.appup</fo:inline> files. They are not run within the context of
        the <fo:inline font-family="monospace">release_handler</fo:inline> process. They must therefore
        <fo:inline font-weight="bold">not</fo:inline> be used together with calls to
        <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1,2</fo:inline></fo:inline>, 
	as this causes the
        <fo:inline font-family="monospace">release_handler</fo:inline> to end up in an inconsistent state.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">No persistent information is updated, so these functions can
        be used on any Erlang node, embedded or not. Also, using these
        functions does not affect which code is loaded if there is
        a reboot.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the upgrade or downgrade fails, the application can end up
        in an inconsistent state.</fo:block>
    </fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1778768">upgrade_app(App, Dir) -&gt; {ok, Unpurged} | restart_emulator | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Unpurged = [Module]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Upgrades an application <fo:inline font-family="monospace">App</fo:inline> from the current
          version to a new version located in <fo:inline font-family="monospace">Dir</fo:inline> according to
          the <fo:inline font-family="monospace">.appup</fo:inline> file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">App</fo:inline> is the name of the application, which must be
          started. <fo:inline font-family="monospace">Dir</fo:inline> is the new library directory of
          <fo:inline font-family="monospace">App</fo:inline>. The corresponding modules as well as
          the <fo:inline font-family="monospace">.app</fo:inline> and <fo:inline font-family="monospace">.appup</fo:inline> files are to be located
          under <fo:inline font-family="monospace">Dir/ebin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function looks in the <fo:inline font-family="monospace">.appup</fo:inline> file and tries to
          find an upgrade script from the current version of
          the application using
          <fo:inline font-style="italic"><fo:inline font-family="monospace">upgrade_script/2</fo:inline></fo:inline>.
          This script is evaluated using
          <fo:inline font-style="italic"><fo:inline font-family="monospace">eval_appup_script/4</fo:inline></fo:inline>,
          exactly in the same way as
          <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1,2</fo:inline></fo:inline>
          does.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns one of the following:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{ok, Unpurged}</fo:inline> if evaluating the script is
            successful, where <fo:inline font-family="monospace">Unpurged</fo:inline> is a list of unpurged
            modules</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">restart_emulator</fo:inline> if this instruction is
            encountered in the script</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{error, Reason}</fo:inline> if an error occurred when
            finding or evaluating the script</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the <fo:inline font-family="monospace">restart_new_emulator</fo:inline> instruction is found in
          the script, 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">upgrade_app/2</fo:inline></fo:inline> 
	  returns <fo:inline font-family="monospace">{error,restart_new_emulator}</fo:inline>. This because
          <fo:inline font-family="monospace">restart_new_emulator</fo:inline> requires a new version of the
          emulator to be started before the rest of the upgrade
          instructions can be executed, and this can only be done by
          <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1,2</fo:inline></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1799680">downgrade_app(App, Dir) -&gt;</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1800144">downgrade_app(App, OldVsn, Dir) -&gt; {ok, Unpurged} | restart_emulator | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = OldVsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Unpurged = [Module]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Downgrades an application <fo:inline font-family="monospace">App</fo:inline> from the current
          version to a previous version <fo:inline font-family="monospace">OldVsn</fo:inline> located in
          <fo:inline font-family="monospace">Dir</fo:inline> according to the <fo:inline font-family="monospace">.appup</fo:inline> file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">App</fo:inline> is the name of the application, which must be
          started. <fo:inline font-family="monospace">OldVsn</fo:inline> is the previous application version
          and can be omitted if <fo:inline font-family="monospace">Dir</fo:inline> is of
          the format <fo:inline font-family="monospace">"App-OldVsn"</fo:inline>. <fo:inline font-family="monospace">Dir</fo:inline> is the library
          directory of the previous version of <fo:inline font-family="monospace">App</fo:inline>.
          The corresponding modules and the old <fo:inline font-family="monospace">.app</fo:inline> file
          are to be located under <fo:inline font-family="monospace">Dir/ebin</fo:inline>. The <fo:inline font-family="monospace">.appup</fo:inline>
          file is to be located in the <fo:inline font-family="monospace">ebin</fo:inline> directory of
          the <fo:inline font-weight="bold">current</fo:inline> library directory of the application
          (<fo:inline font-style="italic"><fo:inline font-family="monospace">code:lib_dir(App)</fo:inline></fo:inline>).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function looks in the <fo:inline font-family="monospace">.appup</fo:inline> file and tries to
          find a downgrade script to the previous version of
          the application using
          <fo:inline font-style="italic"><fo:inline font-family="monospace">downgrade_script/3</fo:inline></fo:inline>.
          This script is evaluated using
          <fo:inline font-style="italic"><fo:inline font-family="monospace">eval_appup_script/4</fo:inline></fo:inline>,
          exactly in the same way as
          <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1,2</fo:inline></fo:inline>
          does.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns one of the following:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{ok, Unpurged}</fo:inline> if evaluating the script is
            successful, where <fo:inline font-family="monospace">Unpurged</fo:inline> is a list of unpurged
            modules</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">restart_emulator</fo:inline> if this instruction is
            encountered in the script</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{error, Reason}</fo:inline> if an error occurred when
            finding or evaluating the script</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1821040">upgrade_script(App, Dir) -&gt; {ok, NewVsn, Script}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewVsn = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Script = Instructions</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Tries to find an application upgrade script for <fo:inline font-family="monospace">App</fo:inline>
          from the current version to a new version located in
          <fo:inline font-family="monospace">Dir</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The upgrade script can then be evaluated using
          <fo:inline font-style="italic"><fo:inline font-family="monospace">eval_appup_script/4</fo:inline></fo:inline>.
          It is recommended to use
          <fo:inline font-style="italic"><fo:inline font-family="monospace">upgrade_app/2</fo:inline></fo:inline>
          instead, but this function (<fo:inline font-family="monospace">upgrade_script</fo:inline>) is useful
          to inspect the contents of the script.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">App</fo:inline> is the name of the application, which must be
          started. <fo:inline font-family="monospace">Dir</fo:inline> is the new library directory of
          <fo:inline font-family="monospace">App</fo:inline>. The corresponding modules as well as
          the <fo:inline font-family="monospace">.app</fo:inline> and <fo:inline font-family="monospace">.appup</fo:inline> files are to be located
          under <fo:inline font-family="monospace">Dir/ebin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function looks in the <fo:inline font-family="monospace">.appup</fo:inline> file and tries to
          find an upgrade script from the current application version.
          High-level instructions are translated to
          low-level instructions. The instructions are sorted in
          the same manner as when generating a <fo:inline font-family="monospace">relup</fo:inline> file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns <fo:inline font-family="monospace">{ok, NewVsn, Script}</fo:inline> if successful, where
          <fo:inline font-family="monospace">NewVsn</fo:inline> is the new application version.
	For details about <fo:inline font-family="monospace">Script</fo:inline>, see 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">appup(4)</fo:inline></fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Failure: If a script cannot be found, the function fails
          with an appropriate error reason.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1837232">downgrade_script(App, OldVsn, Dir) -&gt; {ok, Script}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">OldVsn = Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Script = Instructions</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Tries to find an application downgrade script for <fo:inline font-family="monospace">App</fo:inline>
          from the current version to a previous version <fo:inline font-family="monospace">OldVsn</fo:inline>
          located in <fo:inline font-family="monospace">Dir</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The downgrade script can then be evaluated using
          <fo:inline font-style="italic"><fo:inline font-family="monospace">eval_appup_script/4</fo:inline></fo:inline>.
          It is recommended to use
          <fo:inline font-style="italic"><fo:inline font-family="monospace">downgrade_app/2,3</fo:inline></fo:inline>
          instead, but this function (<fo:inline font-family="monospace">downgrade_script</fo:inline>) is useful
          to inspect the contents of the script.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">App</fo:inline> is the name of the application, which must be
          started. <fo:inline font-family="monospace">Dir</fo:inline> is the previous library directory of
          <fo:inline font-family="monospace">App</fo:inline>. The corresponding modules and
          the old <fo:inline font-family="monospace">.app</fo:inline> file are to be located under
          <fo:inline font-family="monospace">Dir/ebin</fo:inline>. The <fo:inline font-family="monospace">.appup</fo:inline> file is to be located in
          the <fo:inline font-family="monospace">ebin</fo:inline> directory of the <fo:inline font-weight="bold">current</fo:inline> library
          directory of the application 
	(<fo:inline font-style="italic"><fo:inline font-family="monospace">code:lib_dir(App)</fo:inline>)</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function looks in the <fo:inline font-family="monospace">.appup</fo:inline> file and tries to
          find a downgrade script from the current application version.
          High-level instructions are translated to
          low-level instructions. The instructions are sorted in
          the same manner as when generating a <fo:inline font-family="monospace">relup</fo:inline> file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns <fo:inline font-family="monospace">{ok, Script}</fo:inline> if successful. 
	For details about <fo:inline font-family="monospace">Script</fo:inline>, see 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">appup(4)</fo:inline></fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Failure: If a script cannot be found, the function fails
          with an appropriate error reason.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1854896">eval_appup_script(App, ToVsn, ToDir, Script) -&gt; {ok, Unpurged} | restart_emulator | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ToVsn = ToDir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Script</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>See <fo:inline font-style="italic"><fo:inline font-family="monospace">upgrade_script/2</fo:inline></fo:inline>, <fo:inline font-style="italic"><fo:inline font-family="monospace">downgrade_script/3</fo:inline></fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Unpurged = [Module]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Evaluates an application upgrade or downgrade script
          <fo:inline font-family="monospace">Script</fo:inline>, the result from calling
          <fo:inline font-style="italic"><fo:inline font-family="monospace">upgrade_script/2</fo:inline></fo:inline> or
          <fo:inline font-style="italic"><fo:inline font-family="monospace">downgrade_script/3</fo:inline></fo:inline>,
          exactly in the same way as
          <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1,2</fo:inline></fo:inline>
          does.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">App</fo:inline> is the name of the application, which must be
          started. <fo:inline font-family="monospace">ToVsn</fo:inline> is the version to be upgraded/downgraded
          to, and <fo:inline font-family="monospace">ToDir</fo:inline> is the library directory of this version.
          The corresponding modules as well as the <fo:inline font-family="monospace">.app</fo:inline> and
          <fo:inline font-family="monospace">.appup</fo:inline> files are to be located under <fo:inline font-family="monospace">Dir/ebin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns one of the following:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{ok, Unpurged}</fo:inline> if evaluating the script is
            successful, where <fo:inline font-family="monospace">Unpurged</fo:inline> is a list of unpurged
            modules</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">restart_emulator</fo:inline> if this instruction is
            encountered in the script</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{error, Reason}</fo:inline> if an error occurred when
            finding or evaluating the script</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the <fo:inline font-family="monospace">restart_new_emulator</fo:inline> instruction is found in
          the script, 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">eval_appup_script/4</fo:inline></fo:inline>
	  returns <fo:inline font-family="monospace">{error,restart_new_emulator}</fo:inline>. This because
          <fo:inline font-family="monospace">restart_new_emulator</fo:inline> requires a new version of the
          emulator to be started before the rest of the upgrade
          instructions can be executed, and this can only be done by
          <fo:inline font-style="italic"><fo:inline font-family="monospace">install_release/1,2</fo:inline></fo:inline>.</fo:block>
      </fo:block>
  

  <fo:block id="idp1876528" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Typical Error Reasons</fo:block>
    
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{bad_masters, Masters}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The master nodes <fo:inline font-family="monospace">Masters</fo:inline> are not alive.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{bad_rel_file, File}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specified <fo:inline font-family="monospace">.rel</fo:inline> file <fo:inline font-family="monospace">File</fo:inline> cannot be read or
          does not contain a single term.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{bad_rel_data, Data}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specified <fo:inline font-family="monospace">.rel</fo:inline> file does not contain a recognized
          release specification, but another term <fo:inline font-family="monospace">Data</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{bad_relup_file, File}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specified <fo:inline font-family="monospace">relup</fo:inline> file <fo:inline font-family="monospace">Relup</fo:inline> contains bad
          data.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{cannot_extract_file, Name, Reason}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Problems when extracting from a tar file,
          <fo:inline font-style="italic"><fo:inline font-family="monospace">erl_tar:extract/2</fo:inline></fo:inline>
	  returned <fo:inline font-family="monospace">{error, {Name, Reason}}</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{existing_release, Vsn}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specified release version <fo:inline font-family="monospace">Vsn</fo:inline> is already
          in use.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{Master, Reason, When}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Some operation, indicated by the term <fo:inline font-family="monospace">When</fo:inline>, failed
          on the master node <fo:inline font-family="monospace">Master</fo:inline> with the specified error
          reason <fo:inline font-family="monospace">Reason</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{no_matching_relup, Vsn, CurrentVsn}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Cannot find a script for upgrading/downgrading between
          <fo:inline font-family="monospace">CurrentVsn</fo:inline> and <fo:inline font-family="monospace">Vsn</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{no_such_directory, Path}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The directory <fo:inline font-family="monospace">Path</fo:inline>does not exist.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{no_such_file, Path}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The path <fo:inline font-family="monospace">Path</fo:inline> (file or directory) does not
          exist.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{no_such_file, {Master, Path}}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The path <fo:inline font-family="monospace">Path</fo:inline> (file or directory) does not exist at
          the master node <fo:inline font-family="monospace">Master</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{no_such_release, Vsn}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The specified release version <fo:inline font-family="monospace">Vsn</fo:inline> does not
          exist.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{not_a_directory, Path}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Path</fo:inline> exists but is not a directory.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{Posix, File}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Some file operation failed for <fo:inline font-family="monospace">File</fo:inline>. <fo:inline font-family="monospace">Posix</fo:inline>
          is an atom named from the Posix error codes, such as
          <fo:inline font-family="monospace">enoent</fo:inline>, <fo:inline font-family="monospace">eacces</fo:inline>, or <fo:inline font-family="monospace">eisdir</fo:inline>. See
          <fo:inline font-style="italic"><fo:inline font-family="monospace">file(3)</fo:inline></fo:inline>
          in Kernel.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Posix</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Some file operation failed, as for the previous item in
          the list.</fo:block></fo:block></fo:block-container>
    </fo:block>
  

  <fo:block id="idp1908544" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">OTP Design Principles</fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">config(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rel(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">relup(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">script(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sys(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools(3)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp1921248" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">systools</fo:marker>systools</fo:block>Erlang module</fo:block>
  <fo:block/>
  systools
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions to generate boot scripts
      (<fo:inline font-family="monospace">.boot</fo:inline>, <fo:inline font-family="monospace">.script</fo:inline>), a release upgrade file
      (<fo:inline font-family="monospace">relup</fo:inline>), and release packages.</fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1925056">make_relup(Name, UpFrom, DownTo) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1925536">make_relup(Name, UpFrom, DownTo, [Opt]) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UpFrom = DownTo = [Name | {Name,Descr}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Descr = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opt = {path,[Dir]} | restart_emulator | silent | noexec | {outdir,Dir}
	| warnings_as_errors</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | error | {ok,Relup,Module,Warnings} | {error,Module,Error}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Relup, see relup(4)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Warnings = Error = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Generates a release upgrade file <fo:inline font-family="monospace">relup</fo:inline> containing instructions 
	for upgrading from or downgrading to one or more previous releases. 
	The instructions are used by 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler</fo:inline></fo:inline> 
	when installing a new version of a release in runtime.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, <fo:inline font-family="monospace">relup</fo:inline> file is located in the current working
          directory. If option <fo:inline font-family="monospace">{outdir,Dir}</fo:inline> is specified,
          the <fo:inline font-family="monospace">relup</fo:inline> file is located in <fo:inline font-family="monospace">Dir</fo:inline> instead.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release resource file <fo:inline font-family="monospace">Name.rel</fo:inline> is compared with
          all release resource files <fo:inline font-family="monospace">Name2.rel</fo:inline>, specified in
          <fo:inline font-family="monospace">UpFrom</fo:inline> and <fo:inline font-family="monospace">DownTo</fo:inline>. For each such pair, the
          following is deducted:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Which applications to be deleted, that is,
              applications listed in <fo:inline font-family="monospace">Name.rel</fo:inline> but not
              in <fo:inline font-family="monospace">Name2.rel</fo:inline></fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Which applications to be added, that is, applications
              listed in <fo:inline font-family="monospace">Name2.rel</fo:inline> but not in <fo:inline font-family="monospace">Name.rel</fo:inline></fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Which applications to be upgraded/downgraded, that
              is, applications listed in both <fo:inline font-family="monospace">Name.rel</fo:inline> and
              <fo:inline font-family="monospace">Name2.rel</fo:inline> but with different versions</fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the emulator needs to be restarted after upgrading or
              downgrading, that is, if the ERTS version differs
              between <fo:inline font-family="monospace">Name.rel</fo:inline> and <fo:inline font-family="monospace">Name2.rel</fo:inline></fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Instructions for this are added to the <fo:inline font-family="monospace">relup</fo:inline> file in
          the above order. Instructions for upgrading or downgrading
          between application versions are fetched from the relevant
          application upgrade files <fo:inline font-family="monospace">App.appup</fo:inline>, sorted in
          the same order as when generating a boot script, see
          <fo:inline font-style="italic"><fo:inline font-family="monospace">make_script/1,2</fo:inline></fo:inline>. 
	  High-level instructions are translated
          into low-level instructions and the result is printed to the
          <fo:inline font-family="monospace">relup</fo:inline> file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The optional <fo:inline font-family="monospace">Descr</fo:inline> parameter is included "as is" in
          the <fo:inline font-family="monospace">relup</fo:inline> file, see
          <fo:inline font-style="italic"><fo:inline font-family="monospace">relup(4)</fo:inline></fo:inline>. Defaults to
          the empty list.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All the files are searched for in the code path. It is
          assumed that the <fo:inline font-family="monospace">.app</fo:inline> and <fo:inline font-family="monospace">.appup</fo:inline> files for an
          application are located in the same directory.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">{path,[Dir]}</fo:inline> is specified, this path is
          appended to the current path. Wildcard <fo:inline font-family="monospace">*</fo:inline> is
          expanded to all matching directories, for example,
          <fo:inline font-family="monospace">lib/*/ebin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">restart_emulator</fo:inline> is specified, a
          low-level instruction to restart the emulator is appended to
          the <fo:inline font-family="monospace">relup</fo:inline> file. This ensures that a complete reboot of
          the system is done when the system is upgraded or downgraded.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If an upgrade includes a change from an emulator earlier
          than OTP R15 to OTP R15 or later, the warning
          <fo:inline font-family="monospace">pre_R15_emulator_upgrade</fo:inline> is issued. For more information
          about this, see
          <fo:inline font-style="italic">Design
          Principles</fo:inline> in <fo:inline font-weight="bold">System Documentation</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, errors and warnings are printed to tty and
          the function returns <fo:inline font-family="monospace">ok</fo:inline> or <fo:inline font-family="monospace">error</fo:inline>. If option
          <fo:inline font-family="monospace">silent</fo:inline> is specified, the function instead either returns
          <fo:inline font-family="monospace">{ok,Relup,Module,Warnings}</fo:inline>, where <fo:inline font-family="monospace">Relup</fo:inline> is
          the release upgrade file, or <fo:inline font-family="monospace">{error,Module,Error}</fo:inline>.
          Warnings and errors can be converted to strings by calling
          <fo:inline font-family="monospace">Module:format_warning(Warnings)</fo:inline> or
          <fo:inline font-family="monospace">Module:format_error(Error)</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">noexec</fo:inline> is specified, the function returns
          the same values as for <fo:inline font-family="monospace">silent</fo:inline> but no <fo:inline font-family="monospace">relup</fo:inline> file
          is created.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">warnings_as_errors</fo:inline> is specified, warnings
          are treated as errors.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1966304">make_script(Name) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1966768">make_script(Name, [Opt]) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opt = src_tests | {path,[Dir]} | local | {variables,[Var]} | exref |
	  {exref,[App]}] | silent | {outdir,Dir} | no_dot_erlang | no_warn_sasl |
	  warnings_as_errors</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Var = {VarName,Prefix}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  VarName = Prefix = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | error | {ok,Module,Warnings} | {error,Module,Error}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Warnings = Error = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Generates a boot script <fo:inline font-family="monospace">Name.script</fo:inline> and its binary
          version, the boot file <fo:inline font-family="monospace">Name.boot</fo:inline>. The boot file
          specifies which code to be loaded and which applications
          to be started when the Erlang runtime system is started.
          See <fo:inline font-style="italic"><fo:inline font-family="monospace">script(4)</fo:inline></fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release resource file <fo:inline font-family="monospace">Name.rel</fo:inline> is read to determine
          which applications are included in the release. Then
          the relevant application resource files <fo:inline font-family="monospace">App.app</fo:inline> are read
          to determine which modules to be loaded, and if and
          how the applications are to be started. (Keys <fo:inline font-family="monospace">modules</fo:inline>
          and <fo:inline font-family="monospace">mod</fo:inline>, see
          <fo:inline font-style="italic"><fo:inline font-family="monospace">app(4)</fo:inline></fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, the boot script and boot file are located in
          the same directory as <fo:inline font-family="monospace">Name.rel</fo:inline>. That is, in the current
          working directory unless <fo:inline font-family="monospace">Name</fo:inline> contains a path. If
          option <fo:inline font-family="monospace">{outdir,Dir}</fo:inline> is specified, they are located
          in <fo:inline font-family="monospace">Dir</fo:inline> instead.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The correctness of each application is checked as follows:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The version of an application specified in
              the <fo:inline font-family="monospace">.rel</fo:inline> file is to be the same as the version
              specified in the <fo:inline font-family="monospace">.app</fo:inline> file.</fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are to be no undefined applications, that is,
              dependencies to applications that are not included in
              the release. (Key <fo:inline font-family="monospace">applications</fo:inline> in the <fo:inline font-family="monospace">.app</fo:inline>
              file).</fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are to be no circular dependencies among
              the applications.</fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are to be no duplicated modules, that is, modules with
              the same name but belonging to different applications.</fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">src_tests</fo:inline> is specified, a
              warning is issued if the source code for a module is
              missing or is newer than the object code.</fo:block>
          </fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The applications are sorted according to the dependencies
          between the applications. Where there are no dependencies,
          the order in the <fo:inline font-family="monospace">.rel</fo:inline> file is kept.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function fails if the mandatory
          applications Kernel and STDLIB are not
          included in the <fo:inline font-family="monospace">.rel</fo:inline> file and have start
          type <fo:inline font-family="monospace">permanent</fo:inline> (which is default).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If SASL is not included as an application in
          the <fo:inline font-family="monospace">.rel</fo:inline> file, a warning is issued because such a
          release cannot be used in an upgrade. To turn off this
          warning, add option <fo:inline font-family="monospace">no_warn_sasl</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All files are searched for in the current path. It is
          assumed that the <fo:inline font-family="monospace">.app</fo:inline> and <fo:inline font-family="monospace">.beam</fo:inline> files for an
          application are located in the same directory. The <fo:inline font-family="monospace">.erl</fo:inline>
          files are also assumed to be located in this directory, unless
          it is an <fo:inline font-family="monospace">ebin</fo:inline> directory in which case they can be
          located in the corresponding <fo:inline font-family="monospace">src</fo:inline> directory.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">{path,[Dir]}</fo:inline> is specified, this path is
          appended to the current path. A directory in the path can be
          specified with a wildcard <fo:inline font-family="monospace">*</fo:inline>, this is expanded to all
          matching directories. Example: <fo:inline font-family="monospace">"lib/*/ebin"</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In the generated boot script all application directories are
          structured as <fo:inline font-family="monospace">App-Vsn/ebin</fo:inline>. They are assumed to be located
          in <fo:inline font-family="monospace">$ROOT/lib</fo:inline>, where <fo:inline font-family="monospace">$ROOT</fo:inline> is the root directory
          of the installed release. If option <fo:inline font-family="monospace">local</fo:inline> is
          specified, the actual directories where the applications were
          found are used instead. This is a useful way to test a
          generated boot script locally.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option <fo:inline font-family="monospace">variables</fo:inline> can be used to specify an
          installation directory other than <fo:inline font-family="monospace">$ROOT/lib</fo:inline> for some of
          the applications. If a variable <fo:inline font-family="monospace">{VarName,Prefix}</fo:inline> is
          specified and an application is found in a directory
          <fo:inline font-family="monospace">Prefix/Rest/App[-Vsn]/ebin</fo:inline>, this application gets
          the path <fo:inline font-family="monospace">VarName/Rest/App-Vsn/ebin</fo:inline> in the boot script.
          If an application is found in a directory <fo:inline font-family="monospace">Prefix/Rest</fo:inline>,
          the path is <fo:inline font-family="monospace">VarName/Rest/App-Vsn/ebin</fo:inline>. When
          starting Erlang, all variables <fo:inline font-family="monospace">VarName</fo:inline> are given
          values using command-line flag <fo:inline font-family="monospace">boot_var</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Example:</fo:inline> If option <fo:inline font-family="monospace">{variables,[{"TEST","lib"}]}</fo:inline>
          is specified and <fo:inline font-family="monospace">myapp.app</fo:inline> is found in
          <fo:inline font-family="monospace">lib/myapp/ebin</fo:inline>, the path to this application in
          the boot script is <fo:inline font-family="monospace">"$TEST/myapp-1/ebin"</fo:inline>. If
          <fo:inline font-family="monospace">myapp.app</fo:inline> is found in <fo:inline font-family="monospace">lib/test</fo:inline>, the path
          is <fo:inline font-family="monospace">$TEST/test/myapp-1/ebin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The checks performed before the boot script is generated can
          be extended with some cross reference checks by specifying
          option <fo:inline font-family="monospace">exref</fo:inline>. These checks are performed with
          the Xref tool. All applications, or the applications specified
          with <fo:inline font-family="monospace">{exref,[App]}</fo:inline>, are checked by Xref and
          warnings are issued for calls to undefined functions.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, errors and warnings are printed to tty and
          the function returns <fo:inline font-family="monospace">ok</fo:inline> or <fo:inline font-family="monospace">error</fo:inline>. If option
          <fo:inline font-family="monospace">silent</fo:inline> is specified, the function instead returns
          <fo:inline font-family="monospace">{ok,Module,Warnings}</fo:inline> or <fo:inline font-family="monospace">{error,Module,Error}</fo:inline>.
          Warnings and errors can be converted to strings by calling
          <fo:inline font-family="monospace">Module:format_warning(Warnings)</fo:inline> or
          <fo:inline font-family="monospace">Module:format_error(Error)</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">warnings_as_errors</fo:inline> is specified, warnings
          are treated as errors.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">no_dot_erlang</fo:inline> is specified, the instruction to
          load the <fo:inline font-family="monospace">.erlang</fo:inline> file during boot is <fo:inline font-weight="bold">not</fo:inline>
          included.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2018864">make_tar(Name) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2019328">make_tar(Name, [Opt]) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opt = {dirs,[IncDir]} | {path,[Dir]} | {variables,[Var]} | {var_tar,VarTar} | {erts,Dir} | src_tests | exref | {exref,[App]} | silent | {outdir,Dir} | | no_warn_sasl | warnings_as_errors</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> IncDir = src | include | atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Var = {VarName,PreFix}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  VarName = Prefix = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> VarTar = include | ownfile | omit</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Machine = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> App = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | error | {ok,Module,Warnings} | {error,Module,Error}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Warning = Error = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates a release package file <fo:inline font-family="monospace">Name.tar.gz</fo:inline>.
          This file must be uncompressed and unpacked on the target
          system using 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler</fo:inline></fo:inline> 
	  before the new release can be installed.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release resource file <fo:inline font-family="monospace">Name.rel</fo:inline> is read to determine
          which applications are included in the release. Then
          the relevant application resource files <fo:inline font-family="monospace">App.app</fo:inline> are
          read to determine the version and modules of each application
          (keys <fo:inline font-family="monospace">vsn</fo:inline> and <fo:inline font-family="monospace">modules</fo:inline>, see
          <fo:inline font-style="italic"><fo:inline font-family="monospace">app(4)</fo:inline></fo:inline>).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, the release package file is located in the same
          directory as <fo:inline font-family="monospace">Name.rel</fo:inline>. That is, in the current working
          directory unless <fo:inline font-family="monospace">Name</fo:inline> contains a path. If option
          <fo:inline font-family="monospace">{outdir,Dir}</fo:inline> is specified, it is located in <fo:inline font-family="monospace">Dir</fo:inline>
          instead.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If SASL is not included as an application in
          the <fo:inline font-family="monospace">.rel</fo:inline> file, a warning is issued because such a
          release cannot be used in an upgrade. To turn off this
          warning, add option <fo:inline font-family="monospace">no_warn_sasl</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, the release package contains the directories
          <fo:inline font-family="monospace">lib/App-Vsn/ebin</fo:inline> and <fo:inline font-family="monospace">lib/App-Vsn/priv</fo:inline> for each
          included application. If more directories are to be included,
          option <fo:inline font-family="monospace">dirs</fo:inline> is specified, for example,
          <fo:inline font-family="monospace">{dirs,[src,examples]}</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All these files are searched for in the current path. If
          option <fo:inline font-family="monospace">{path,[Dir]}</fo:inline> is specified, this path is
          appended to the current path. Wildcard <fo:inline font-family="monospace">*</fo:inline> is
          expanded to all matching directories.
          Example: <fo:inline font-family="monospace">"lib/*/ebin"</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option <fo:inline font-family="monospace">variables</fo:inline> can be used to specify an
          installation directory other than <fo:inline font-family="monospace">lib</fo:inline> for some of
          the applications. If variable <fo:inline font-family="monospace">{VarName,Prefix}</fo:inline> is
          specified and an application is found in directory
          <fo:inline font-family="monospace">Prefix/Rest/App[-Vsn]/ebin</fo:inline>, this application is
          packed into a separate <fo:inline font-family="monospace">VarName.tar.gz</fo:inline> file as
          <fo:inline font-family="monospace">Rest/App-Vsn/ebin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Example:</fo:inline> If option <fo:inline font-family="monospace">{variables,[{"TEST","lib"}]}</fo:inline>
          is specified and <fo:inline font-family="monospace">myapp.app</fo:inline> is located in
          <fo:inline font-family="monospace">lib/myapp-1/ebin</fo:inline>, application <fo:inline font-family="monospace">myapp</fo:inline> is
          included in <fo:inline font-family="monospace">TEST.tar.gz</fo:inline>:</fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
% <fo:inline font-weight="bold">tar tf TEST.tar</fo:inline>
myapp-1/ebin/myapp.app
...</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option <fo:inline font-family="monospace">{var_tar,VarTar}</fo:inline> can be used to specify if
          and where a separate package is to be stored. In this option
          <fo:inline font-family="monospace">VarTar</fo:inline> is one of the following:</fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">include</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Each separate (variable) package is included in the
              main <fo:inline font-family="monospace">ReleaseName.tar.gz</fo:inline> file. This is the
              default.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">ownfile</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Each separate (variable) package is
              generated as a separate file in the same directory as
              the <fo:inline font-family="monospace">ReleaseName.tar.gz</fo:inline> file.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">omit</fo:inline></fo:block>
            <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">No separate (variable) packages are
              generated. Applications that are found underneath a
              variable directory are ignored.</fo:block></fo:block></fo:block-container>
        </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A directory <fo:inline font-family="monospace">releases</fo:inline> is also included in
          the release package, containing <fo:inline font-family="monospace">Name.rel</fo:inline> and a
          subdirectory <fo:inline font-family="monospace">RelVsn</fo:inline>. <fo:inline font-family="monospace">RelVsn</fo:inline> is
          the release version as specified in <fo:inline font-family="monospace">Name.rel</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">releases/RelVsn</fo:inline> contains the boot script
          <fo:inline font-family="monospace">Name.boot</fo:inline> renamed to <fo:inline font-family="monospace">start.boot</fo:inline> and, if found,
          the files <fo:inline font-family="monospace">relup</fo:inline> and <fo:inline font-family="monospace">sys.config</fo:inline>. These files
          are searched for in the same directory as <fo:inline font-family="monospace">Name.rel</fo:inline>,
          in the current working directory, and in any directories
          specified using option <fo:inline font-family="monospace">path</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the release package is to contain a new Erlang runtime
          system, the <fo:inline font-family="monospace">bin</fo:inline> directory of the specified runtime
          system <fo:inline font-family="monospace">{erts,Dir}</fo:inline> is copied to <fo:inline font-family="monospace">erts-ErtsVsn/bin</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All checks with function 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">make_script</fo:inline></fo:inline>
          are performed before the release package is created.
          Options <fo:inline font-family="monospace">src_tests</fo:inline> and <fo:inline font-family="monospace">exref</fo:inline> are also
          valid here.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The return value and the handling of errors and warnings
          are the same as described for 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">make_script</fo:inline></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2066480">script2boot(File) -&gt; ok | error</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">File = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Erlang runtime system requires that the contents of
          the script used to boot the system is a binary Erlang term.
          This function transforms the <fo:inline font-family="monospace">File.script</fo:inline> boot script
          to a binary term, which is stored in the <fo:inline font-family="monospace">File.boot</fo:inline>
          file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A boot script generated using 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">make_script</fo:inline></fo:inline>
          is already transformed to the binary form.</fo:block>
      </fo:block>
  

  <fo:block id="idp2072256" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">app(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">appup(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">erl(1)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rel(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">relup(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">script(4)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp2084896" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">appup</fo:marker>appup</fo:block>Name</fo:block>
  <fo:block/>
  appup
  Application upgrade file
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">application upgrade file</fo:inline> defines how an application
      is upgraded or downgraded in a running system.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This file is used by the functions in 
    <fo:inline font-style="italic"><fo:inline font-family="monospace">systools</fo:inline></fo:inline> 
    when generating a release upgrade file <fo:inline font-family="monospace">relup</fo:inline>.</fo:block>
  

  <fo:block id="idp2089328" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">File Syntax</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The application upgrade file is to be called
      <fo:inline font-family="monospace">Application.appup</fo:inline>, where <fo:inline font-family="monospace">Application</fo:inline> is the
      application name. The file is to be located in the <fo:inline font-family="monospace">ebin</fo:inline>
      directory for the application.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">.appup</fo:inline> file contains one single Erlang term, which
      defines the instructions used to upgrade or downgrade
      the application. The file has the following syntax:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{Vsn,
  [{UpFromVsn, Instructions}, ...],
  [{DownToVsn, Instructions}, ...]}.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Vsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Current application version.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">UpFromVsn = string() | binary()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An earlier
          application version to upgrade from. If it is a
          string, it is interpreted as a specific version
          number. If it is a binary, it is interpreted as a
          regular expression that can match multiple version
          numbers.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">DownToVsn = string() | binary()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An earlier
          application version to downgrade to. If it is a
          string, it is  interpreted as a specific version
          number. If it is a binary, it is interpreted as a
          regular expression that can match multiple version
          numbers.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Instructions</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A list of <fo:inline font-weight="bold">release upgrade instructions</fo:inline>, see
          <fo:inline font-style="italic">Release
          Upgrade Instructions</fo:inline>. It is recommended to use
          high-level instructions only. These are automatically
          translated to low-level instructions by <fo:inline font-family="monospace">systools</fo:inline> when
          creating the <fo:inline font-family="monospace">relup</fo:inline> file.</fo:block></fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To avoid duplication of upgrade instructions, it is
      allowed to use regular expressions to specify <fo:inline font-family="monospace">UpFromVsn</fo:inline>
      and <fo:inline font-family="monospace">DownToVsn</fo:inline>. To be considered a regular expression, the
      version identifier must be specified as a binary. For example,
      the following match all versions <fo:inline font-family="monospace">2.1.x</fo:inline>, where <fo:inline font-family="monospace">x</fo:inline> is
      any number:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
&lt;&lt;"2\\.1\\.[0-9]+"&gt;&gt;</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Notice that the regular expression must match the complete
      version string, so this example works for, for example,
      <fo:inline font-family="monospace">2.1.1</fo:inline>, but not for <fo:inline font-family="monospace">2.1.1.1</fo:inline>.</fo:block>
  

  <fo:block id="idp2107040" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Release Upgrade Instructions</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Release upgrade instructions are interpreted by the release
      handler when an upgrade or downgrade is made. For more
      information about release handling, see
      <fo:inline font-style="italic">OTP
      Design Principles</fo:inline> in <fo:inline font-weight="bold">System Documentation</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A process is said to <fo:inline font-weight="bold">use</fo:inline> a module <fo:inline font-family="monospace">Mod</fo:inline> if
      <fo:inline font-family="monospace">Mod</fo:inline> is listed in the <fo:inline font-family="monospace">Modules</fo:inline> part of the child
      specification used to start the process, see
      <fo:inline font-style="italic"><fo:inline font-family="monospace">supervisor(3)</fo:inline></fo:inline>.
      In the case of 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_event</fo:inline></fo:inline>, 
      an event manager process is said to use <fo:inline font-family="monospace">Mod</fo:inline> if <fo:inline font-family="monospace">Mod</fo:inline> 
      is an installed event handler.</fo:block>

    <fo:block id="idp2114560" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">High-Level Instructions</fo:block>
    
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{update, Mod}
{update, Mod, supervisor}
{update, Mod, Change}
{update, Mod, DepMods}
{update, Mod, Change, DepMods}
{update, Mod, Change, PrePurge, PostPurge, DepMods}
{update, Mod, Timeout, Change, PrePurge, PostPurge, DepMods}
{update, Mod, ModType, Timeout, Change, PrePurge, PostPurge, DepMods}
  Mod = atom()
  ModType = static | dynamic
  Timeout = int()&gt;0 | default | infinity
  Change = soft | {advanced,Extra}
    Extra = term()
  PrePurge = PostPurge = soft_purge | brutal_purge
  DepMods = [Mod]</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Synchronized code replacement of processes using module
      <fo:inline font-family="monospace">Mod</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All those processes are suspended using 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:suspend</fo:inline></fo:inline>,
      the new module version is loaded, and
      then the processes are resumed using 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:resume</fo:inline></fo:inline>.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
    <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Change</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">soft</fo:inline> and defines the type of
      code change. If it is set to <fo:inline font-family="monospace">{advanced,Extra}</fo:inline>, implemented
      processes using 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_server</fo:inline></fo:inline>, 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_fsm</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_statem</fo:inline></fo:inline>, or
      <fo:inline font-style="italic"><fo:inline font-family="monospace">gen_event</fo:inline></fo:inline> 
      transform their internal state by calling the callback function
      <fo:inline font-family="monospace">code_change</fo:inline>. Special processes call the callback
      function <fo:inline font-family="monospace">system_code_change/4</fo:inline>. In both cases, the term
      <fo:inline font-family="monospace">Extra</fo:inline> is passed as an argument to the callback
      function.</fo:block></fo:block></fo:block-container>
    <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">PrePurge</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">brutal_purge</fo:inline>. It controls
      what action to take with processes executing old code
      before loading the new module version. If the value
      is <fo:inline font-family="monospace">brutal_purge</fo:inline>, the processes are killed. If the value is
      <fo:inline font-family="monospace">soft_purge</fo:inline>, 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler:install_release/1</fo:inline></fo:inline>
      returns <fo:inline font-family="monospace">{error,{old_processes,Mod}}</fo:inline>.</fo:block></fo:block></fo:block-container>
    <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">PostPurge</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">brutal_purge</fo:inline>. It controls
      what action to take with processes that are executing old code
      when the new module version has been loaded. If the value
      is <fo:inline font-family="monospace">brutal_purge</fo:inline>, the code is purged when the release is
      made permanent and the processes are killed. If the value is
      <fo:inline font-family="monospace">soft_purge</fo:inline>, the release handler purges the old code
      when no remaining processes execute the code.</fo:block></fo:block></fo:block-container>
    <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">DepMods</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">[]</fo:inline> and defines other modules that
      <fo:inline font-family="monospace">Mod</fo:inline> is dependent on. In the <fo:inline font-family="monospace">relup</fo:inline> file, instructions 
      for suspending processes using <fo:inline font-family="monospace">Mod</fo:inline> come before
      instructions for suspending processes using modules in
      <fo:inline font-family="monospace">DepMods</fo:inline> when upgrading, and conversely when downgrading.
      In case of circular dependencies, the order of the instructions in
      the <fo:inline font-family="monospace">appup</fo:inline> file is kept.</fo:block></fo:block></fo:block-container>
    <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Timeout</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the time-out when suspending processes.
      If no value or <fo:inline font-family="monospace">default</fo:inline> is specified, the default value for
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:suspend</fo:inline></fo:inline> 
      is used.</fo:block></fo:block></fo:block-container>
    <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">ModType</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">dynamic</fo:inline>. It specifies if
      the code is "dynamic", that is, if a process using the module
      spontaneously switches to new code, or if it is "static".
      When doing an advanced update and upgrade, the new version of a
      dynamic module is loaded before the process is asked to change
      code. When downgrading, the process is asked to change code before
      loading the new version. For static modules, the new version is
      loaded before the process is asked to change code, both in
      the case of upgrading and downgrading. Callback modules are
      dynamic.</fo:block></fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">update</fo:inline> with argument <fo:inline font-family="monospace">supervisor</fo:inline> is used when
      changing the start specification of a supervisor.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{load_module, Mod}
{load_module, Mod, DepMods}
{load_module, Mod, PrePurge, PostPurge, DepMods}
  Mod = atom()
  PrePurge = PostPurge = soft_purge | brutal_purge
  DepMods = [Mod]</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Simple code replacement of the module <fo:inline font-family="monospace">Mod</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For a description of <fo:inline font-family="monospace">PrePurge</fo:inline> and <fo:inline font-family="monospace">PostPurge</fo:inline>,
      see <fo:inline font-family="monospace">update</fo:inline> above.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">DepMods</fo:inline> defaults to <fo:inline font-family="monospace">[]</fo:inline> and defines which other modules
      <fo:inline font-family="monospace">Mod</fo:inline> is dependent on. In the <fo:inline font-family="monospace">relup</fo:inline> file, instructions for
      loading these modules come before the instruction for loading
      <fo:inline font-family="monospace">Mod</fo:inline> when upgrading, and conversely when downgrading.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{add_module, Mod}
{add_module, Mod, DepMods}
  Mod = atom()
  DepMods = [Mod]</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Loads a new module <fo:inline font-family="monospace">Mod</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">DepMods</fo:inline> defaults to <fo:inline font-family="monospace">[]</fo:inline> and defines which other modules
      <fo:inline font-family="monospace">Mod</fo:inline> is dependent on. In the <fo:inline font-family="monospace">relup</fo:inline> file, instructions
      related to these modules come before the instruction for
      loading <fo:inline font-family="monospace">Mod</fo:inline> when upgrading, and conversely when
      downgrading.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{delete_module, Mod}
{delete_module, Mod, DepMods}
  Mod = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Deletes a module <fo:inline font-family="monospace">Mod</fo:inline> using the low-level instructions
      <fo:inline font-family="monospace">remove</fo:inline> and <fo:inline font-family="monospace">purge</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">DepMods</fo:inline> defaults to <fo:inline font-family="monospace">[]</fo:inline> and defines which other modules
      <fo:inline font-family="monospace">Mod</fo:inline> is dependent on. In the <fo:inline font-family="monospace">relup</fo:inline> file, instructions
      related to these modules come before the instruction for
      removing <fo:inline font-family="monospace">Mod</fo:inline> when upgrading, and conversely when
      downgrading.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{add_application, Application}
{add_application, Application, Type}
  Application = atom()
  Type = permanent | transient | temporary | load | none</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Adding an application means that the modules defined by
      the <fo:inline font-family="monospace">modules</fo:inline> key in the <fo:inline font-family="monospace">.app</fo:inline> file are loaded using
      <fo:inline font-family="monospace">add_module</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Type</fo:inline> defaults to <fo:inline font-family="monospace">permanent</fo:inline> and specifies the start type
      of the application. If <fo:inline font-family="monospace">Type = permanent | transient | temporary</fo:inline>,
      the application is loaded and started in the corresponding way, see
      <fo:inline font-style="italic"><fo:inline font-family="monospace">application(3)</fo:inline></fo:inline>.
      If <fo:inline font-family="monospace">Type = load</fo:inline>, the application is only loaded.
      If <fo:inline font-family="monospace">Type = none</fo:inline>, the application is not loaded and not
      started, although the code for its modules is loaded.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{remove_application, Application}
  Application = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Removing an application means that the application is stopped,
      the modules are unloaded using <fo:inline font-family="monospace">delete_module</fo:inline>, and then
      the application specification is unloaded from the application
      controller.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{restart_application, Application}
  Application = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Restarting an application means that the application is
      stopped and then started again, similar to using the instructions
      <fo:inline font-family="monospace">remove_application</fo:inline> and <fo:inline font-family="monospace">add_application</fo:inline> in sequence.</fo:block>
    

    <fo:block id="idp2168528" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Low-Level Instructions</fo:block>
    
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{load_object_code, {App, Vsn, [Mod]}}
  App = Mod = atom()
  Vsn = string()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Reads each <fo:inline font-family="monospace">Mod</fo:inline> from directory <fo:inline font-family="monospace">App-Vsn/ebin</fo:inline> as
      a binary. It does not load the modules. The instruction is to be
      placed first in the script to read all new code from the file
      to make the suspend-load-resume cycle less time-consuming.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
point_of_no_return</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a crash occurs after this instruction, the system cannot
      recover and is restarted from the old release version.
      The instruction must only occur once in a script. It is to be
      placed after all <fo:inline font-family="monospace">load_object_code</fo:inline> instructions.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{load, {Mod, PrePurge, PostPurge}}
  Mod = atom()
  PrePurge = PostPurge = soft_purge | brutal_purge</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Before this instruction occurs, <fo:inline font-family="monospace">Mod</fo:inline> must have been loaded
      using <fo:inline font-family="monospace">load_object_code</fo:inline>. This instruction loads the module.
      <fo:inline font-family="monospace">PrePurge</fo:inline> is ignored. For a description of <fo:inline font-family="monospace">PostPurge</fo:inline>,
      see the high-level instruction <fo:inline font-family="monospace">update</fo:inline> earlier.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{remove, {Mod, PrePurge, PostPurge}}
  Mod = atom()
  PrePurge = PostPurge = soft_purge | brutal_purge</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Makes the current version of <fo:inline font-family="monospace">Mod</fo:inline> old.
      <fo:inline font-family="monospace">PrePurge</fo:inline> is ignored. For a description of <fo:inline font-family="monospace">PostPurge</fo:inline>,
      see the high-level instruction <fo:inline font-family="monospace">update</fo:inline> earlier.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{purge, [Mod]}
  Mod = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Purges each module <fo:inline font-family="monospace">Mod</fo:inline>, that is, removes the old code.
      Notice that any process executing purged code is killed.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{suspend, [Mod | {Mod, Timeout}]}
  Mod = atom()
  Timeout = int()&gt;0 | default | infinity</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Tries to suspend all processes using a module <fo:inline font-family="monospace">Mod</fo:inline>. If a
      process does not respond, it is ignored. This can cause
      the process to die, either because it crashes when it
      spontaneously switches to new code, or as a result of a purge
      operation. If no <fo:inline font-family="monospace">Timeout</fo:inline> is specified or <fo:inline font-family="monospace">default</fo:inline> is
      specified, the default value for 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:suspend</fo:inline></fo:inline> 
      is used.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{resume, [Mod]}
  Mod = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Resumes all suspended processes using a module <fo:inline font-family="monospace">Mod</fo:inline>.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{code_change, [{Mod, Extra}]}
{code_change, Mode, [{Mod, Extra}]}
  Mod = atom()
  Mode = up | down
  Extra = term()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Mode</fo:inline> defaults to <fo:inline font-family="monospace">up</fo:inline> and specifies if it is an
      upgrade or downgrade. This instruction sends a <fo:inline font-family="monospace">code_change</fo:inline>
      system message to all processes using a module <fo:inline font-family="monospace">Mod</fo:inline> by
      calling function 
      <fo:inline font-style="italic"><fo:inline font-family="monospace">sys:change_code</fo:inline></fo:inline>, 
      passing term <fo:inline font-family="monospace">Extra</fo:inline> as argument.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{stop, [Mod]}
  Mod = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops all processes using a module <fo:inline font-family="monospace">Mod</fo:inline> by calling
      <fo:inline font-style="italic"><fo:inline font-family="monospace">supervisor:terminate_child/2</fo:inline></fo:inline>. 
      This instruction is useful
      when the simplest way to change code is to stop and restart the
      processes that run the code.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{start, [Mod]}
  Mod = atom()</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts all stopped processes using a module <fo:inline font-family="monospace">Mod</fo:inline> by calling
      <fo:inline font-style="italic"><fo:inline font-family="monospace">supervisor:restart_child/2</fo:inline></fo:inline>.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{sync_nodes, Id, [Node]}
{sync_nodes, Id, {M, F, A}}
  Id = term()
  Node = node()
  M = F = atom()
  A = [term()]</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">apply(M, F, A)</fo:inline> must return a list of nodes.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This instruction synchronizes the release installation with other
      nodes. Each <fo:inline font-family="monospace">Node</fo:inline> must evaluate this command with the same
      <fo:inline font-family="monospace">Id</fo:inline>. The local node waits for all other nodes to evaluate
      the instruction before execution continues. If a node goes
      down, it is considered to be an unrecoverable error, and
      the local node is restarted from the old release. There is no
      time-out for this instruction, which means that it can hang
      forever.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{apply, {M, F, A}}
  M = F = atom()
  A = [term()]</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Evaluates <fo:inline font-family="monospace">apply(M, F, A)</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the instruction appears before instruction
      <fo:inline font-family="monospace">point_of_no_return</fo:inline>, a failure is caught.
      <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler:install_release/1</fo:inline></fo:inline> 
      then returns <fo:inline font-family="monospace">{error,{'EXIT',Reason}}</fo:inline>, unless <fo:inline font-family="monospace">{error,Error}</fo:inline> 
      is thrown or returned. Then it returns <fo:inline font-family="monospace">{error,Error}</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the instruction appears after instruction
      <fo:inline font-family="monospace">point_of_no_return</fo:inline> and the function call fails, the
      system is restarted.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
restart_new_emulator</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This instruction is used when the application ERTS,
      Kernel, STDLIB, or SASL is
      upgraded. It shuts down the current emulator and starts a new
      one. All processes are terminated gracefully, and the new
      version of ERTS, Kernel, STDLIB, and
      SASL are used when the emulator restarts.
      Only one <fo:inline font-family="monospace">restart_new_emulator</fo:inline> instruction is allowed
      in the <fo:inline font-family="monospace">relup</fo:inline> file, and it must be placed first.
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools:make_relup/3,4</fo:inline></fo:inline>
      ensures this when the <fo:inline font-family="monospace">relup</fo:inline> file is generated. The rest of the
      instructions in the <fo:inline font-family="monospace">relup</fo:inline> file is executed after the
      restart as a part of the boot script.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An info report is written when the upgrade is completed.
      To programmatically determine if the upgrade is complete,
      call <fo:inline font-style="italic">
      <fo:inline font-family="monospace">release_handler:which_releases/0,1</fo:inline></fo:inline> and check if the
      expected release has status <fo:inline font-family="monospace">current</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The new release must still be made permanent after the upgrade
      is completed, otherwise the old emulator is started if there is
      an emulator restart.</fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">As stated earlier, instruction <fo:inline font-family="monospace">restart_new_emulator</fo:inline>
        causes the emulator to be restarted with new versions of
        ERTS&gt;, Kernel, STDLIB, and SASL.
        However, all other applications do at startup run their old
        versions in this new emulator. This is usually no problem,
        but every now and then incompatible changes occur to the
        core applications, which can cause
        trouble in this setting. Such incompatible changes (when
        functions are removed) are normally preceded by a deprecation
        over two major releases. To ensure that your application is not
        crashed by an incompatible change, always remove any call to
        deprecated functions as soon as possible.</fo:block>
    </fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
restart_emulator</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This instruction is similar to <fo:inline font-family="monospace">restart_new_emulator</fo:inline>,
      except it must be placed at the end of the <fo:inline font-family="monospace">relup</fo:inline> file.
      It is not related to an upgrade of the emulator or the core
      applications, but can be used by any application when a complete
      reboot of the system is required.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When generating the <fo:inline font-family="monospace">relup</fo:inline> file,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools:make_relup/3,4</fo:inline></fo:inline>
      ensures that there is only one <fo:inline font-family="monospace">restart_emulator</fo:inline>
      instruction and that it is the last instruction in the
      <fo:inline font-family="monospace">relup</fo:inline> file.</fo:block>
    
  

  <fo:block id="idp2216272" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">relup(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">supervisor(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools(3)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp2226544" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">rel</fo:marker>rel</fo:block>Name</fo:block>
  <fo:block/>
  rel
  Release resource file
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">release resource file</fo:inline> specifies which applications
      are included in a release (system) based on Erlang/OTP.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This file is used by the functions in 
    <fo:inline font-style="italic"><fo:inline font-family="monospace">systools</fo:inline></fo:inline> 
    when generating start scripts (<fo:inline font-family="monospace">.script</fo:inline>, <fo:inline font-family="monospace">.boot</fo:inline>) and 
    release upgrade files (<fo:inline font-family="monospace">relup</fo:inline>).</fo:block>
  

  <fo:block id="idp2231856" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">File Syntax</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The release resource file is to be called <fo:inline font-family="monospace">Name.rel</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">.rel</fo:inline> file contains one single Erlang term, which is
      called a <fo:inline font-weight="bold">release specification</fo:inline>. The file has the
      following syntax:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{release, {RelName,Vsn}, {erts, EVsn},
  [{Application, AppVsn} |
   {Application, AppVsn, Type} |
   {Application, AppVsn, IncApps} |
   {Application, AppVsn, Type, IncApps}]}.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">RelName = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Release name.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Vsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Release version.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">EVsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">ERTS version the release is intended for.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Application = atom()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Name of an application included in the release.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">AppVsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Version of an application included in the release.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Type = permanent | transient | temporary | load | none</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start type of an application included in the release.</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">Type = permanent | transient | temporary</fo:inline>, the
          application is loaded and started in the corresponding way, see
          <fo:inline font-style="italic"><fo:inline font-family="monospace">application(3)</fo:inline></fo:inline>.</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">Type = load</fo:inline>, the application is only loaded.</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">Type = none</fo:inline>, the application is not loaded and not
          started, although the code for its modules is loaded.</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">permanent</fo:inline></fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">IncApps = [atom()]</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A list of applications that are included by an application
          included in the release. The list must be a subset of the
          included applications
          specified in the application resource file
          (<fo:inline font-family="monospace">Application.app</fo:inline>) and overrides this value. Defaults
          to the same value as in the application resource file.</fo:block></fo:block></fo:block-container>
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The list of applications must contain the Kernel and
        STDLIB applications.</fo:block>
    </fo:block>
  

  <fo:block id="idp2250832" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">application(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">relup(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools(3)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp2260256" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">relup</fo:marker>relup</fo:block>Name</fo:block>
  <fo:block/>
  relup
  Release upgrade file
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">release upgrade file</fo:inline> describes how a release is
      upgraded in a running system.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This file is automatically generated by
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools:make_relup/3,4</fo:inline></fo:inline>, 
      using a release resource file
      (<fo:inline font-family="monospace">.rel</fo:inline>), application resource files (<fo:inline font-family="monospace">.app</fo:inline>), and
      application upgrade files (<fo:inline font-family="monospace">.appup</fo:inline>) as input.</fo:block>
  

  <fo:block id="idp2265584" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">File Syntax</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In a target system, the release upgrade file is to be located in
      directory <fo:inline font-family="monospace">$ROOT/releases/Vsn</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">relup</fo:inline> file contains one single Erlang term, which
      defines the instructions used to upgrade the release. The file has
      the following syntax:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{Vsn,
  [{UpFromVsn, Descr, Instructions}, ...],
  [{DownToVsn, Descr, Instructions}, ...]}.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Vsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Current release version.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">UpFromVsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Earlier version of the release to upgrade from.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Descr = term()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A user-defined parameter passed
          from the function 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">systools:make_relup/3,4</fo:inline></fo:inline>.
	  It is used in the return value of
          <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler:install_release/1,2</fo:inline></fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Instructions</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A list of low-level release upgrade instructions, see
          <fo:inline font-style="italic"><fo:inline font-family="monospace">appup(4)</fo:inline></fo:inline>.
          It consists of the release upgrade instructions from
          the respective application upgrade files (high-level instructions
          are translated to low-level instructions), in the same order
          as in the start script.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">DownToVsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Earlier version of the release to downgrade to.</fo:block></fo:block></fo:block-container>
    </fo:block>
  

  <fo:block id="idp2278480" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">app(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">appup(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">rel(4)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">release_handler(3)</fo:inline></fo:inline>,
      <fo:inline font-style="italic"><fo:inline font-family="monospace">systools(3)</fo:inline></fo:inline></fo:block>
  
<fo:block page-break-before="always" id="idp2291712" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">script</fo:marker>script</fo:block>Name</fo:block>
  <fo:block/>
  script
  Boot script
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">boot script</fo:inline> describes how the Erlang runtime system
      is started. It contains instructions on which code to load and
      which processes and applications to start.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Command <fo:inline font-family="monospace">erl -boot Name</fo:inline> starts the system with a boot
      file called <fo:inline font-family="monospace">Name.boot</fo:inline>, which is generated from the
      <fo:inline font-family="monospace">Name.script</fo:inline> file, using 
    <fo:inline font-style="italic"><fo:inline font-family="monospace">systools:script2boot/1</fo:inline></fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">.script</fo:inline> file is generated by <fo:inline font-family="monospace">systools</fo:inline> from a
      <fo:inline font-family="monospace">.rel</fo:inline> file and from <fo:inline font-family="monospace">.app</fo:inline> files.</fo:block>
  

  <fo:block id="idp2299312" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">File Syntax</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The boot script is stored in a file with extension
      <fo:inline font-family="monospace">.script</fo:inline>. The file has the following syntax:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{script, {Name, Vsn},
 [
  {progress, loading},
  {preLoaded, [Mod1, Mod2, ...]},
  {path, [Dir1,"$ROOT/Dir",...]}.
  {primLoad, [Mod1, Mod2, ...]},
  ...
  {kernel_load_completed},
  {progress, loaded},
  {kernelProcess, Name, {Mod, Func, Args}},
  ...
  {apply, {Mod, Func, Args}},
  ...
  {progress, started}]}.</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Name = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the system name.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">Vsn = string()</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the system version.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{progress, Term}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the "progress" of the initialization
	  program. The
          <fo:inline font-style="italic"><fo:inline font-family="monospace">init:get_status/0</fo:inline></fo:inline>
	  function returns the current value of the progress, which is
      <fo:inline font-family="monospace">{InternalStatus,Term}</fo:inline>.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{path, [Dir]}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Dir</fo:inline> is a string. This
          argument sets the load path of the system to <fo:inline font-family="monospace">[Dir]</fo:inline>. The
          load path used to load modules is obtained from the initial
          load path, which is given in the script file, together with
          any path flags that were supplied in the command-line
          arguments. The command-line arguments modify the path as
          follows:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">-pa Dir1 Dir2 ... DirN</fo:inline> adds the directories
          <fo:inline font-family="monospace">DirN, DirN-1, ..., Dir2, Dir1</fo:inline> to the front of the initial
           load path.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">-pz Dir1 Dir2 ... DirN</fo:inline> adds the directories
          <fo:inline font-family="monospace">Dir1, Dir2, ..., DirN</fo:inline> to the end of the initial
           load path.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">-path Dir1 Dir2 ... DirN</fo:inline> defines a set of
              directories <fo:inline font-family="monospace">Dir1, Dir2, ..., DirN</fo:inline>, which replace
              the search path given in the script file. Directory names
              in the path are interpreted as follows:</fo:block>
            <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
              <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Directory names starting with <fo:inline font-family="monospace">/</fo:inline> are assumed
               to be absolute path names.</fo:block></fo:list-item-body></fo:list-item>
              <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Directory names not starting with <fo:inline font-family="monospace">/</fo:inline> are
               assumed to be relative the current working directory.</fo:block></fo:list-item-body></fo:list-item>
              <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The special <fo:inline font-family="monospace">$ROOT</fo:inline> variable can only be used
               in the script, not as a command-line argument. The
               given directory is relative the Erlang installation
               directory.</fo:block></fo:list-item-body></fo:list-item>
            </fo:list-block>
          </fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
	</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{primLoad, [Mod]}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Loads the modules <fo:inline font-family="monospace">[Mod]</fo:inline>
        from the directories specified in <fo:inline font-family="monospace">Path</fo:inline>. The script
        interpreter fetches the appropriate module by calling
        <fo:inline font-style="italic">
	  <fo:inline font-family="monospace">erl_prim_loader:get_file(Mod)</fo:inline></fo:inline>. A fatal error
        that terminates the system occurs if the module cannot be
        located.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{kernel_load_completed}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Indicates that all modules
        that <fo:inline font-weight="bold">must</fo:inline> be loaded <fo:inline font-weight="bold">before</fo:inline> any processes
        are started are loaded. In interactive mode, all
        <fo:inline font-family="monospace">{primLoad,[Mod]}</fo:inline> commands interpreted after this
        command are ignored, and these modules are loaded on demand.
        In embedded mode, <fo:inline font-family="monospace">kernel_load_completed</fo:inline> is ignored, and
        all modules are loaded during system start.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{kernelProcess, Name, {Mod, Func, Args}}</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts the
        "kernel process" <fo:inline font-family="monospace">Name</fo:inline>
        by evaluating <fo:inline font-family="monospace">apply(Mod, Func, Args)</fo:inline>. The start function is
        to return <fo:inline font-family="monospace">{ok, Pid}</fo:inline> or <fo:inline font-family="monospace">ignore</fo:inline>. The <fo:inline font-family="monospace">init</fo:inline>
        process monitors the behavior of <fo:inline font-family="monospace">Pid</fo:inline> and terminates
        the system if <fo:inline font-family="monospace">Pid</fo:inline> dies. Kernel processes are key
        components of the runtime system. Users do not normally add
        new kernel processes.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{apply, {Mod, Func, Args}}</fo:inline>.</fo:block>
        <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The init process
        evaluates <fo:inline font-family="monospace">apply(Mod, Func, Args)</fo:inline>. The system
        terminates if this results in an error. The boot procedure
        hangs if this function never returns.</fo:block></fo:block></fo:block-container>
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In an interactive system, the code loader provides
        demand-driven code loading, but in an embedded system
        the code loader loads all code immediately. The same
        version of <fo:inline font-style="italic"><fo:inline font-family="monospace">code</fo:inline></fo:inline>
	is used in both cases. The code server calls
	<fo:inline font-style="italic"><fo:inline font-family="monospace">init:get_argument(mode)</fo:inline></fo:inline>
	to determine if it is to run in demand mode or non-demand
        driven mode.</fo:block>
    </fo:block>
  

  <fo:block id="idp2334400" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">See Also</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic"><fo:inline font-family="monospace">systools(3)</fo:inline></fo:inline></fo:block>
  
</fo:flow>
  </fo:page-sequence>
</fo:root>
