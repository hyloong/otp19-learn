<module name="wxIconBundle">
<type>
  <name>wxIconBundle</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxIconBundle">wxIconBundle()</marker> = <seealso marker="wx#type-wx_object">wx:wx_object()</seealso></typehead></typedecl>
</type>
<spec>
  <name>addIcon</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>addIcon(This, Icon) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></string></subtype>
        <subtype><typename>Icon</typename><string>Icon = <seealso marker="wxIcon#type-wxIcon">wxIcon:wxIcon()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Icon</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>addIcon</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>addIcon(This, File, Type) -&gt; ok</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></string></subtype>
        <subtype><typename>File</typename><string>File = <seealso marker="unicode#type-chardata">unicode:chardata()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = integer()</string></subtype>
      </guard></clause>
  </contract>
  <anno>File</anno>
  <anno>This</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getIcon</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getIcon(This) -&gt; <seealso marker="wxIcon#type-wxIcon">wxIcon:wxIcon()</seealso></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getIcon</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getIcon(This, Options :: [Option]) -&gt; <seealso marker="wxIcon#type-wxIcon">wxIcon:wxIcon()</seealso></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></string></subtype>
        <subtype><typename>Option</typename><string>Option = {size, integer()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getIcon</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getIcon(This, Size) -&gt; <seealso marker="wxIcon#type-wxIcon">wxIcon:wxIcon()</seealso></head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></string></subtype>
        <subtype><typename>Size</typename><string>Size = {W :: integer(), H :: integer()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>H</anno>
  <anno>Size</anno>
  <anno>This</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>new(Ic) -&gt; <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></head>
      <guard>
        <subtype><typename>Ic</typename><string>Ic = <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso> | <seealso marker="wxIcon#type-wxIcon">wxIcon:wxIcon()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Ic</anno>
</spec>
<spec>
  <name>new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>new(File, Type) -&gt; <seealso marker="#type-wxIconBundle">wxIconBundle()</seealso></head>
      <guard>
        <subtype><typename>File</typename><string>File = <seealso marker="unicode#type-chardata">unicode:chardata()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = integer()</string></subtype>
      </guard></clause>
  </contract>
  <anno>File</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:30:19.</timestamp>
</module>