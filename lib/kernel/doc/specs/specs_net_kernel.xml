<module name="net_kernel">
<spec>
  <name>allow</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>allow(Nodes) -&gt; ok | error</head>
      <guard>
        <subtype><typename>Nodes</typename><string>Nodes = [node()]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Nodes</anno>
</spec>
<spec>
  <name>aux_ticker</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>code_change</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>connect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>connect_node</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>connect_node(Node) -&gt; boolean() | ignored</head>
      <guard>
        <subtype><typename>Node</typename><string>Node = node()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Node</anno>
</spec>
<spec>
  <name>connecttime</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>dflag_unicode_io</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>dflag_unicode_io(X1 :: pid()) -&gt; boolean()</head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>disconnect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>do_spawn</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>epmd_module</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>get_net_ticktime</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_net_ticktime() -&gt; Res</head>
      <guard>
        <subtype><typename>Res</typename><string>Res = NetTicktime | {ongoing_change_to, NetTicktime} | ignored</string></subtype>
        <subtype><typename>NetTicktime</typename><string>NetTicktime = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>NetTicktime</anno>
  <anno>Res</anno>
</spec>
<spec>
  <name>getopts</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getopts(Node, Options) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, OptionValues} | {error, Reason} | ignored</head>
      <guard>
        <subtype><typename>Node</typename><string>Node = node()</string></subtype>
        <subtype><typename>Options</typename><string>Options = [<seealso marker="inet#type-socket_getopt">inet:socket_getopt()</seealso>]</string></subtype>
        <subtype><typename>OptionValues</typename><string>OptionValues = [<seealso marker="inet#type-socket_setopt">inet:socket_setopt()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | noconnection</string></subtype>
      </guard></clause>
  </contract>
  <anno>Node</anno>
  <anno>OptionValues</anno>
  <anno>Options</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>handle_call</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>handle_cast</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>handle_info</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>hidden_connect</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>hidden_connect_node</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>i</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>i</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>init</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>kernel_apply</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>longnames</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>monitor_nodes</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>monitor_nodes(Flag) -&gt; ok | Error</head>
      <guard>
        <subtype><typename>Flag</typename><string>Flag = boolean()</string></subtype>
        <subtype><typename>Error</typename><string>Error = error | {error, term()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Error</anno>
  <anno>Flag</anno>
</spec>
<spec>
  <name>monitor_nodes</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>monitor_nodes(Flag, Options) -&gt; ok | Error</head>
      <guard>
        <subtype><typename>Flag</typename><string>Flag = boolean()</string></subtype>
        <subtype><typename>Options</typename><string>Options = [Option]</string></subtype>
        <subtype><typename>Option</typename><string>Option = {node_type, NodeType} | nodedown_reason</string></subtype>
        <subtype><typename>NodeType</typename><string>NodeType = visible | hidden | all</string></subtype>
        <subtype><typename>Error</typename><string>Error = error | {error, term()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Error</anno>
  <anno>Flag</anno>
  <anno>NodeType</anno>
  <anno>Option</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>node_info</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>node_info</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>nodes_info</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>passive_cnct</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>passive_connect_monitor</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>protocol_childspecs</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>publish_on_node</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>set_net_ticktime</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>set_net_ticktime(NetTicktime) -&gt; Res</head>
      <guard>
        <subtype><typename>NetTicktime</typename><string>NetTicktime = integer() &gt;= 1</string></subtype>
        <subtype><typename>Res</typename><string>Res = <br/><nbsp/><nbsp/><nbsp/><nbsp/>unchanged |<br/><nbsp/><nbsp/><nbsp/><nbsp/>change_initiated |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{ongoing_change_to, NewNetTicktime}</string></subtype>
        <subtype><typename>NewNetTicktime</typename><string>NewNetTicktime = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>NetTicktime</anno>
  <anno>NewNetTicktime</anno>
  <anno>Res</anno>
</spec>
<spec>
  <name>set_net_ticktime</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>set_net_ticktime(NetTicktime, TransitionPeriod) -&gt; Res</head>
      <guard>
        <subtype><typename>NetTicktime</typename><string>NetTicktime = integer() &gt;= 1</string></subtype>
        <subtype><typename>TransitionPeriod</typename><string>TransitionPeriod = integer() &gt;= 0</string></subtype>
        <subtype><typename>Res</typename><string>Res = <br/><nbsp/><nbsp/><nbsp/><nbsp/>unchanged |<br/><nbsp/><nbsp/><nbsp/><nbsp/>change_initiated |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{ongoing_change_to, NewNetTicktime}</string></subtype>
        <subtype><typename>NewNetTicktime</typename><string>NewNetTicktime = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>NetTicktime</anno>
  <anno>NewNetTicktime</anno>
  <anno>Res</anno>
  <anno>TransitionPeriod</anno>
</spec>
<spec>
  <name>setopts</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>setopts(Node, Options) -&gt; ok | {error, Reason} | ignored</head>
      <guard>
        <subtype><typename>Node</typename><string>Node = node() | new</string></subtype>
        <subtype><typename>Options</typename><string>Options = [<seealso marker="inet#type-socket_setopt">inet:socket_setopt()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | noconnection</string></subtype>
      </guard></clause>
  </contract>
  <anno>Node</anno>
  <anno>Options</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>spawn_func</name>
  <arity>6</arity>
  <contract/>
</spec>
<spec>
  <name>start</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>start_link</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>stop</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>stop() -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Reason</typename><string>Reason = not_allowed | not_found</string></subtype>
      </guard></clause>
  </contract>
  <anno>Reason</anno>
</spec>
<spec>
  <name>terminate</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>ticker</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>ticker_loop</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>update_publish_nodes</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>verbose</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:44.</timestamp>
</module>