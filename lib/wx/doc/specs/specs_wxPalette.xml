<module name="wxPalette">
<type>
  <name>wxPalette</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxPalette">wxPalette()</marker> = <seealso marker="wx#type-wx_object">wx:wx_object()</seealso></typehead></typedecl>
</type>
<spec>
  <name>create</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>create(This, Red, Green, Blue) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxPalette">wxPalette()</seealso></string></subtype>
        <subtype><typename>Red</typename><string>Red = Green = Blue = binary()</string></subtype>
        <subtype><typename>Green</typename><string></string></subtype>
        <subtype><typename>Blue</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>destroy</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>destroy(This :: <seealso marker="#type-wxPalette">wxPalette()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getColoursCount</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getColoursCount(This) -&gt; integer()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxPalette">wxPalette()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getPixel</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>getPixel(This, Red, Green, Blue) -&gt; integer()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxPalette">wxPalette()</seealso></string></subtype>
        <subtype><typename>Red</typename><string>Red = Green = Blue = integer()</string></subtype>
        <subtype><typename>Green</typename><string></string></subtype>
        <subtype><typename>Blue</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getRGB</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getRGB(This, Pixel) -&gt; Result</head>
      <guard>
        <subtype><typename>Result</typename><string>Result = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{Res :: boolean(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Red :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Green :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Blue :: integer()}</string></subtype>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxPalette">wxPalette()</seealso></string></subtype>
        <subtype><typename>Pixel</typename><string>Pixel = integer()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Pixel</anno>
  <anno>Red</anno>
  <anno>Res</anno>
  <anno>Result</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>isOk</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isOk(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxPalette">wxPalette()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seealso marker="#type-wxPalette">wxPalette()</seealso></head></clause>
  </contract>
</spec>
<spec>
  <name>new</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>new(Red, Green, Blue) -&gt; <seealso marker="#type-wxPalette">wxPalette()</seealso></head>
      <guard>
        <subtype><typename>Red</typename><string>Red = Green = Blue = binary()</string></subtype>
        <subtype><typename>Green</typename><string></string></subtype>
        <subtype><typename>Blue</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Blue</anno>
  <anno>Green</anno>
  <anno>Red</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:30:34.</timestamp>
</module>