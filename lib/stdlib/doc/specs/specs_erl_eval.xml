<module name="erl_eval">
<type>
  <name>binding_struct</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-binding_struct">binding_struct()</marker> = <seealso marker="orddict#type-orddict">orddict:orddict()</seealso></typehead></typedecl>
</type>
<type>
  <name>bindings</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-bindings">bindings()</marker> = [{<seealso marker="#type-name">name()</seealso>, <seealso marker="#type-value">value()</seealso>}]</typehead></typedecl>
</type>
<type>
  <name>clauses</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-clauses">clauses()</marker> = [<seealso marker="erl_parse#type-abstract_clause">erl_parse:abstract_clause()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>expression</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-expression">expression()</marker> = <seealso marker="erl_parse#type-abstract_expr">erl_parse:abstract_expr()</seealso></typehead></typedecl>
</type>
<type>
  <name>expression_list</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-expression_list">expression_list()</marker> = [<seealso marker="#type-expression">expression()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>expressions</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-expressions">expressions()</marker> = [<seealso marker="erl_parse#type-abstract_expr">erl_parse:abstract_expr()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>func_spec</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-func_spec">func_spec()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{Module :: module(), Function :: atom()} | function()</typehead></typedecl>
  <anno>Function</anno>
  <anno>Module</anno>
</type>
<type>
  <name>lfun_eval_handler</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-lfun_eval_handler">lfun_eval_handler()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>fun((Name :: atom(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Arguments :: <seealso marker="#type-expression_list">expression_list()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindings :: <seealso marker="#type-binding_struct">binding_struct()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{value,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: <seealso marker="#type-value">value()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NewBindings :: <seealso marker="#type-binding_struct">binding_struct()</seealso>})</typehead></typedecl>
  <anno>Arguments</anno>
  <anno>Bindings</anno>
  <anno>Name</anno>
  <anno>NewBindings</anno>
  <anno>Value</anno>
</type>
<type>
  <name>lfun_value_handler</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-lfun_value_handler">lfun_value_handler()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>fun((Name :: atom(), Arguments :: [term()]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: <seealso marker="#type-value">value()</seealso>)</typehead></typedecl>
  <anno>Arguments</anno>
  <anno>Name</anno>
  <anno>Value</anno>
</type>
<type>
  <name>local_function_handler</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-local_function_handler">local_function_handler()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{value, <seealso marker="#type-lfun_value_handler">lfun_value_handler()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{eval, <seealso marker="#type-lfun_eval_handler">lfun_eval_handler()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>none</typehead></typedecl>
</type>
<type>
  <name>name</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-name">name()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>nlfun_handler</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-nlfun_handler">nlfun_handler()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>fun((FuncSpec :: <seealso marker="#type-func_spec">func_spec()</seealso>, Arguments :: [term()]) -&gt; term())</typehead></typedecl>
  <anno>Arguments</anno>
  <anno>FuncSpec</anno>
</type>
<type>
  <name>non_local_function_handler</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-non_local_function_handler">non_local_function_handler()</marker> = {value, <seealso marker="#type-nlfun_handler">nlfun_handler()</seealso>} | none</typehead></typedecl>
</type>
<type>
  <name>value</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-value">value()</marker> = term()</typehead></typedecl>
</type>
<spec>
  <name>add_binding</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>add_binding(Name, Value, BindingStruct) -&gt; <seealso marker="#type-binding_struct">binding_struct()</seealso></head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-name">name()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>BindingStruct</typename><string>BindingStruct = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>BindingStruct</anno>
  <anno>Name</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>binding</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>binding(Name, BindingStruct) -&gt; {value, <seealso marker="#type-value">value()</seealso>} | unbound</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-name">name()</seealso></string></subtype>
        <subtype><typename>BindingStruct</typename><string>BindingStruct = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>BindingStruct</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>bindings</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>bindings(BindingStruct :: <seealso marker="#type-binding_struct">binding_struct()</seealso>) -&gt; <seealso marker="#type-bindings">bindings()</seealso></head></clause>
  </contract>
  <anno>BindingStruct</anno>
</spec>
<spec>
  <name>check_command</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>del_binding</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>del_binding(Name, BindingStruct) -&gt; <seealso marker="#type-binding_struct">binding_struct()</seealso></head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-name">name()</seealso></string></subtype>
        <subtype><typename>BindingStruct</typename><string>BindingStruct = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>BindingStruct</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>expr</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>expr(Expression, Bindings) -&gt; {value, Value, NewBindings}</head>
      <guard>
        <subtype><typename>Expression</typename><string>Expression = <seealso marker="#type-expression">expression()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expression</anno>
  <anno>NewBindings</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>expr</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>expr(Expression, Bindings, LocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{value, Value, NewBindings}</head>
      <guard>
        <subtype><typename>Expression</typename><string>Expression = <seealso marker="#type-expression">expression()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expression</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>expr</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>expr(Expression,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindings,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LocalFunctionHandler,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NonLocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{value, Value, NewBindings}</head>
      <guard>
        <subtype><typename>Expression</typename><string>Expression = <seealso marker="#type-expression">expression()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>NonLocalFunctionHandler</typename><string>NonLocalFunctionHandler = <seealso marker="#type-non_local_function_handler">non_local_function_handler()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expression</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>NonLocalFunctionHandler</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>expr</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>expr(Expression,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindings,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LocalFunctionHandler,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NonLocalFunctionHandler,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ReturnFormat) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{value, Value, NewBindings} | Value</head>
      <guard>
        <subtype><typename>Expression</typename><string>Expression = <seealso marker="#type-expression">expression()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>NonLocalFunctionHandler</typename><string>NonLocalFunctionHandler = <seealso marker="#type-non_local_function_handler">non_local_function_handler()</seealso></string></subtype>
        <subtype><typename>ReturnFormat</typename><string>ReturnFormat = none | value</string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expression</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>NonLocalFunctionHandler</anno>
  <anno>ReturnFormat</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>expr_list</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>expr_list(ExpressionList, Bindings) -&gt; {ValueList, NewBindings}</head>
      <guard>
        <subtype><typename>ExpressionList</typename><string>ExpressionList = <seealso marker="#type-expression_list">expression_list()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>ValueList</typename><string>ValueList = [<seealso marker="#type-value">value()</seealso>]</string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>ExpressionList</anno>
  <anno>NewBindings</anno>
  <anno>ValueList</anno>
</spec>
<spec>
  <name>expr_list</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>expr_list(ExpressionList, Bindings, LocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ValueList, NewBindings}</head>
      <guard>
        <subtype><typename>ExpressionList</typename><string>ExpressionList = <seealso marker="#type-expression_list">expression_list()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>ValueList</typename><string>ValueList = [<seealso marker="#type-value">value()</seealso>]</string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>ExpressionList</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>ValueList</anno>
</spec>
<spec>
  <name>expr_list</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>expr_list(ExpressionList,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindings,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LocalFunctionHandler,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NonLocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ValueList, NewBindings}</head>
      <guard>
        <subtype><typename>ExpressionList</typename><string>ExpressionList = <seealso marker="#type-expression_list">expression_list()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>NonLocalFunctionHandler</typename><string>NonLocalFunctionHandler = <seealso marker="#type-non_local_function_handler">non_local_function_handler()</seealso></string></subtype>
        <subtype><typename>ValueList</typename><string>ValueList = [<seealso marker="#type-value">value()</seealso>]</string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>ExpressionList</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>NonLocalFunctionHandler</anno>
  <anno>ValueList</anno>
</spec>
<spec>
  <name>exprs</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>exprs(Expressions, Bindings) -&gt; {value, Value, NewBindings}</head>
      <guard>
        <subtype><typename>Expressions</typename><string>Expressions = <seealso marker="#type-expressions">expressions()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expressions</anno>
  <anno>NewBindings</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>exprs</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>exprs(Expressions, Bindings, LocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{value, Value, NewBindings}</head>
      <guard>
        <subtype><typename>Expressions</typename><string>Expressions = <seealso marker="#type-expressions">expressions()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expressions</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>exprs</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>exprs(Expressions,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Bindings,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LocalFunctionHandler,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NonLocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{value, Value, NewBindings}</head>
      <guard>
        <subtype><typename>Expressions</typename><string>Expressions = <seealso marker="#type-expressions">expressions()</seealso></string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>NonLocalFunctionHandler</typename><string>NonLocalFunctionHandler = <seealso marker="#type-non_local_function_handler">non_local_function_handler()</seealso></string></subtype>
        <subtype><typename>Value</typename><string>Value = <seealso marker="#type-value">value()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Expressions</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>NonLocalFunctionHandler</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>fun_data</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>is_constant_expr</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>match_clause</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>match_clause(Clauses, ValueList, Bindings, LocalFunctionHandler) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Body, NewBindings} | nomatch</head>
      <guard>
        <subtype><typename>Clauses</typename><string>Clauses = <seealso marker="#type-clauses">clauses()</seealso></string></subtype>
        <subtype><typename>ValueList</typename><string>ValueList = [<seealso marker="#type-value">value()</seealso>]</string></subtype>
        <subtype><typename>Bindings</typename><string>Bindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
        <subtype><typename>LocalFunctionHandler</typename><string>LocalFunctionHandler = <seealso marker="#type-local_function_handler">local_function_handler()</seealso></string></subtype>
        <subtype><typename>Body</typename><string>Body = <seealso marker="#type-expression_list">expression_list()</seealso></string></subtype>
        <subtype><typename>NewBindings</typename><string>NewBindings = <seealso marker="#type-binding_struct">binding_struct()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Bindings</anno>
  <anno>Body</anno>
  <anno>Clauses</anno>
  <anno>LocalFunctionHandler</anno>
  <anno>NewBindings</anno>
  <anno>ValueList</anno>
</spec>
<spec>
  <name>new_bindings</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new_bindings() -&gt; <seealso marker="#type-binding_struct">binding_struct()</seealso></head></clause>
  </contract>
</spec>
<spec>
  <name>partial_eval</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:14.</timestamp>
</module>