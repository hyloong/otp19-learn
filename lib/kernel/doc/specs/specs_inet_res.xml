<module name="inet_res">
<type>
  <name>dns_class</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dns_class">dns_class()</marker> = in | chaos | hs | any</typehead></typedecl>
</type>
<type>
  <name>dns_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dns_data">dns_data()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-dns_name">dns_name()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="inet#type-ip4_address">inet:ip4_address()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="inet#type-ip6_address">inet:ip6_address()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{MName :: <seealso marker="#type-dns_name">dns_name()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>RName :: <seealso marker="#type-dns_name">dns_name()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Serial :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Refresh :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Retry :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Expiry :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Minimum :: integer()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="inet#type-ip4_address">inet:ip4_address()</seealso>, Proto :: integer(), BitMap :: binary()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{CpuString :: string(), OsString :: string()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{RM :: <seealso marker="#type-dns_name">dns_name()</seealso>, EM :: <seealso marker="#type-dns_name">dns_name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Prio :: integer(), <seealso marker="#type-dns_name">dns_name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Prio :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Weight :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Port :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-dns_name">dns_name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Order :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Preference :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Flags :: string(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Services :: string(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Regexp :: string(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-dns_name">dns_name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>[string()] |<br/><nbsp/><nbsp/><nbsp/><nbsp/>binary()</typehead></typedecl>
  <anno>BitMap</anno>
  <anno>CpuString</anno>
  <anno>EM</anno>
  <anno>Expiry</anno>
  <anno>Flags</anno>
  <anno>MName</anno>
  <anno>Minimum</anno>
  <anno>Order</anno>
  <anno>OsString</anno>
  <anno>Port</anno>
  <anno>Preference</anno>
  <anno>Prio</anno>
  <anno>Proto</anno>
  <anno>RM</anno>
  <anno>RName</anno>
  <anno>Refresh</anno>
  <anno>Regexp</anno>
  <anno>Retry</anno>
  <anno>Serial</anno>
  <anno>Services</anno>
  <anno>Weight</anno>
</type>
<type>
  <name>dns_msg</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dns_msg">dns_msg()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>dns_name</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dns_name">dns_name()</marker> = string()</typehead></typedecl>
</type>
<type>
  <name>nameserver</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-nameserver">nameserver()</marker> = {<seealso marker="inet#type-ip_address">inet:ip_address()</seealso>, Port :: 1..65535}</typehead></typedecl>
  <anno>Port</anno>
</type>
<type>
  <name>res_error</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-res_error">res_error()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>formerr |<br/><nbsp/><nbsp/><nbsp/><nbsp/>qfmterror |<br/><nbsp/><nbsp/><nbsp/><nbsp/>servfail |<br/><nbsp/><nbsp/><nbsp/><nbsp/>nxdomain |<br/><nbsp/><nbsp/><nbsp/><nbsp/>notimp |<br/><nbsp/><nbsp/><nbsp/><nbsp/>refused |<br/><nbsp/><nbsp/><nbsp/><nbsp/>badvers |<br/><nbsp/><nbsp/><nbsp/><nbsp/>timeout</typehead></typedecl>
</type>
<type>
  <name>res_option</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-res_option">res_option()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{alt_nameservers, [<seealso marker="#type-nameserver">nameserver()</seealso>]} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{edns, 0 | false} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{inet6, boolean()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{nameservers, [<seealso marker="#type-nameserver">nameserver()</seealso>]} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{recurse, boolean()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{retry, integer()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{timeout, integer()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{udp_payload_size, integer()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{usevc, boolean()}</typehead></typedecl>
</type>
<type>
  <name>rr_type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-rr_type">rr_type()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>a |<br/><nbsp/><nbsp/><nbsp/><nbsp/>aaaa |<br/><nbsp/><nbsp/><nbsp/><nbsp/>cname |<br/><nbsp/><nbsp/><nbsp/><nbsp/>gid |<br/><nbsp/><nbsp/><nbsp/><nbsp/>hinfo |<br/><nbsp/><nbsp/><nbsp/><nbsp/>ns |<br/><nbsp/><nbsp/><nbsp/><nbsp/>mb |<br/><nbsp/><nbsp/><nbsp/><nbsp/>md |<br/><nbsp/><nbsp/><nbsp/><nbsp/>mg |<br/><nbsp/><nbsp/><nbsp/><nbsp/>mf |<br/><nbsp/><nbsp/><nbsp/><nbsp/>minfo |<br/><nbsp/><nbsp/><nbsp/><nbsp/>mx |<br/><nbsp/><nbsp/><nbsp/><nbsp/>naptr |<br/><nbsp/><nbsp/><nbsp/><nbsp/>null |<br/><nbsp/><nbsp/><nbsp/><nbsp/>ptr |<br/><nbsp/><nbsp/><nbsp/><nbsp/>soa |<br/><nbsp/><nbsp/><nbsp/><nbsp/>spf |<br/><nbsp/><nbsp/><nbsp/><nbsp/>srv |<br/><nbsp/><nbsp/><nbsp/><nbsp/>txt |<br/><nbsp/><nbsp/><nbsp/><nbsp/>uid |<br/><nbsp/><nbsp/><nbsp/><nbsp/>uinfo |<br/><nbsp/><nbsp/><nbsp/><nbsp/>unspec |<br/><nbsp/><nbsp/><nbsp/><nbsp/>wks</typehead></typedecl>
</type>
<spec>
  <name>dns_msg</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getbyname</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>getbyname(Name, Type) -&gt; {ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Hostent</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getbyname</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>getbyname(Name, Type, Timeout) -&gt; {ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Hostent</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Timeout</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>getbyname_tm</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>gethostbyaddr</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>gethostbyaddr(Address) -&gt; {ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Address</typename><string>Address = <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Address</anno>
  <anno>Hostent</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>gethostbyaddr</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>gethostbyaddr(Address, Timeout) -&gt; {ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Address</typename><string>Address = <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Address</anno>
  <anno>Hostent</anno>
  <anno>Reason</anno>
  <anno>Timeout</anno>
</spec>
<spec>
  <name>gethostbyaddr_tm</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>gethostbyname</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>gethostbyname(Name) -&gt; {ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso></string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Hostent</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>gethostbyname</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>gethostbyname(Name, Family) -&gt; {ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso></string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Family</typename><string>Family = <seealso marker="inet#type-address_family">inet:address_family()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Family</anno>
  <anno>Hostent</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>gethostbyname</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>gethostbyname(Name, Family, Timeout) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, Hostent} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso></string></subtype>
        <subtype><typename>Hostent</typename><string>Hostent = <seealso marker="inet#type-hostent">inet:hostent()</seealso></string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
        <subtype><typename>Family</typename><string>Family = <seealso marker="inet#type-address_family">inet:address_family()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Family</anno>
  <anno>Hostent</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Timeout</anno>
</spec>
<spec>
  <name>gethostbyname_tm</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>lookup</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>lookup(Name, Class, Type) -&gt; [<seealso marker="#type-dns_data">dns_data()</seealso>]</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>lookup</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>lookup(Name, Class, Type, Opts) -&gt; [<seealso marker="#type-dns_data">dns_data()</seealso>]</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Opts</typename><string>Opts = [<seealso marker="#type-res_option">res_option()</seealso> | verbose]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Opts</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>lookup</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>lookup(Name, Class, Type, Opts, Timeout) -&gt; [<seealso marker="#type-dns_data">dns_data()</seealso>]</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Opts</typename><string>Opts = [<seealso marker="#type-res_option">res_option()</seealso> | verbose]</string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Opts</anno>
  <anno>Timeout</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>nnslookup</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>nnslookup(Name, Class, Type, Nameservers) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Nameservers</typename><string>Nameservers = [<seealso marker="#type-nameserver">nameserver()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Nameservers</anno>
  <anno>Reason</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>nnslookup</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>nnslookup(Name, Class, Type, Nameservers, Timeout) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
        <subtype><typename>Nameservers</typename><string>Nameservers = [<seealso marker="#type-nameserver">nameserver()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Nameservers</anno>
  <anno>Reason</anno>
  <anno>Timeout</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>nslookup</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>nslookup(Name, Class, Type) -&gt; {ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>nslookup</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>nslookup(Name, Class, Type, Timeout) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Timeout</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>nslookup</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>nslookup(Name, Class, Type, Nameservers) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Nameservers</typename><string>Nameservers = [<seealso marker="#type-nameserver">nameserver()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Name</anno>
  <anno>Nameservers</anno>
  <anno>Reason</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>resolve</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>resolve(Name, Class, Type) -&gt; {ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | Error</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Error</typename><string>Error = {error, Reason} | {error, {Reason, <seealso marker="#type-dns_msg">dns_msg()</seealso>}}</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Error</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>resolve</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>resolve(Name, Class, Type, Opts) -&gt; {ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | Error</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Opts</typename><string>Opts = [Opt]</string></subtype>
        <subtype><typename>Opt</typename><string>Opt = <seealso marker="#type-res_option">res_option()</seealso> | verbose | atom()</string></subtype>
        <subtype><typename>Error</typename><string>Error = {error, Reason} | {error, {Reason, <seealso marker="#type-dns_msg">dns_msg()</seealso>}}</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Error</anno>
  <anno>Name</anno>
  <anno>Opt</anno>
  <anno>Opts</anno>
  <anno>Reason</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>resolve</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>resolve(Name, Class, Type, Opts, Timeout) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-dns_msg">dns_msg()</seealso>} | Error</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-dns_name">dns_name()</seealso> | <seealso marker="inet#type-ip_address">inet:ip_address()</seealso></string></subtype>
        <subtype><typename>Class</typename><string>Class = <seealso marker="#type-dns_class">dns_class()</seealso></string></subtype>
        <subtype><typename>Type</typename><string>Type = <seealso marker="#type-rr_type">rr_type()</seealso></string></subtype>
        <subtype><typename>Opts</typename><string>Opts = [Opt]</string></subtype>
        <subtype><typename>Opt</typename><string>Opt = <seealso marker="#type-res_option">res_option()</seealso> | verbose | atom()</string></subtype>
        <subtype><typename>Timeout</typename><string>Timeout = timeout()</string></subtype>
        <subtype><typename>Error</typename><string>Error = {error, Reason} | {error, {Reason, <seealso marker="#type-dns_msg">dns_msg()</seealso>}}</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = <seealso marker="inet#type-posix">inet:posix()</seealso> | <seealso marker="#type-res_error">res_error()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Class</anno>
  <anno>Error</anno>
  <anno>Name</anno>
  <anno>Opt</anno>
  <anno>Opts</anno>
  <anno>Reason</anno>
  <anno>Timeout</anno>
  <anno>Type</anno>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:43.</timestamp>
</module>