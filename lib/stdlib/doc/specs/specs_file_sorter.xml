<module name="file_sorter">
<type>
  <name>file_name</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_name">file_name()</marker> = <seealso marker="file#type-name">file:name()</seealso></typehead></typedecl>
</type>
<type>
  <name>file_names</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_names">file_names()</marker> = [<seealso marker="file#type-name">file:name()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>format</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-format">format()</marker> = binary_term | term | binary | <seealso marker="#type-format_fun">format_fun()</seealso></typehead></typedecl>
</type>
<type>
  <name>format_fun</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-format_fun">format_fun()</marker> = fun((binary()) -&gt; term())</typehead></typedecl>
</type>
<type>
  <name>header_length</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-header_length">header_length()</marker> = integer() &gt;= 1</typehead></typedecl>
</type>
<type>
  <name>i_command</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-i_command">i_command()</marker> = read | close</typehead></typedecl>
</type>
<type>
  <name>i_reply</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-i_reply">i_reply()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>end_of_input |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{end_of_input, <seealso marker="#type-value">value()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-object">object()</seealso>], <seealso marker="#type-infun">infun()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-input_reply">input_reply()</seealso></typehead></typedecl>
</type>
<type>
  <name>infun</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-infun">infun()</marker> = fun((<seealso marker="#type-i_command">i_command()</seealso>) -&gt; <seealso marker="#type-i_reply">i_reply()</seealso>)</typehead></typedecl>
</type>
<type>
  <name>input</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-input">input()</marker> = <seealso marker="#type-file_names">file_names()</seealso> | <seealso marker="#type-infun">infun()</seealso></typehead></typedecl>
</type>
<type>
  <name>input_reply</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-input_reply">input_reply()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>key_pos</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-key_pos">key_pos()</marker> = integer() &gt;= 1 | [integer() &gt;= 1]</typehead></typedecl>
</type>
<type>
  <name>no_files</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-no_files">no_files()</marker> = integer() &gt;= 1</typehead></typedecl>
</type>
<type>
  <name>o_command</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-o_command">o_command()</marker> = {value, <seealso marker="#type-value">value()</seealso>} | [<seealso marker="#type-object">object()</seealso>] | close</typehead></typedecl>
</type>
<type>
  <name>o_reply</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-o_reply">o_reply()</marker> = <seealso marker="#type-outfun">outfun()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></typehead></typedecl>
</type>
<type>
  <name>object</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-object">object()</marker> = term() | binary()</typehead></typedecl>
</type>
<type>
  <name>option</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-option">option()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{compressed, boolean()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{header, <seealso marker="#type-header_length">header_length()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{format, <seealso marker="#type-format">format()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{no_files, <seealso marker="#type-no_files">no_files()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{order, <seealso marker="#type-order">order()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{size, <seealso marker="#type-size">size()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{tmpdir, <seealso marker="#type-tmp_directory">tmp_directory()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{unique, boolean()}</typehead></typedecl>
</type>
<type>
  <name>options</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-options">options()</marker> = [<seealso marker="#type-option">option()</seealso>] | <seealso marker="#type-option">option()</seealso></typehead></typedecl>
</type>
<type>
  <name>order</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-order">order()</marker> = ascending | descending | <seealso marker="#type-order_fun">order_fun()</seealso></typehead></typedecl>
</type>
<type>
  <name>order_fun</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-order_fun">order_fun()</marker> = fun((term(), term()) -&gt; boolean())</typehead></typedecl>
</type>
<type>
  <name>outfun</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-outfun">outfun()</marker> = fun((<seealso marker="#type-o_command">o_command()</seealso>) -&gt; <seealso marker="#type-o_reply">o_reply()</seealso>)</typehead></typedecl>
</type>
<type>
  <name>output</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-output">output()</marker> = <seealso marker="#type-file_name">file_name()</seealso> | <seealso marker="#type-outfun">outfun()</seealso></typehead></typedecl>
</type>
<type>
  <name>output_reply</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-output_reply">output_reply()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>reason</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-reason">reason()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>bad_object |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{bad_object, <seealso marker="#type-file_name">file_name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{bad_term, <seealso marker="#type-file_name">file_name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{file_error,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-file_name">file_name()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="file#type-posix">file:posix()</seealso> | badarg | system_limit} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{premature_eof, <seealso marker="#type-file_name">file_name()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>size</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-size">size()</marker> = integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>tmp_directory</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-tmp_directory">tmp_directory()</marker> = [] | <seealso marker="file#type-name">file:name()</seealso></typehead></typedecl>
</type>
<type>
  <name>value</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-value">value()</marker> = term()</typehead></typedecl>
</type>
<spec>
  <name>check</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>check(FileName) -&gt; Reply</head>
      <guard>
        <subtype><typename>FileName</typename><string>FileName = <seealso marker="#type-file_name">file_name()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = {ok, [Result]} | {error, <seealso marker="#type-reason">reason()</seealso>}</string></subtype>
        <subtype><typename>Result</typename><string>Result = {FileName, TermPosition, term()}</string></subtype>
        <subtype><typename>TermPosition</typename><string>TermPosition = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>Reply</anno>
  <anno>Result</anno>
  <anno>TermPosition</anno>
</spec>
<spec>
  <name>check</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>check(FileNames, Options) -&gt; Reply</head>
      <guard>
        <subtype><typename>FileNames</typename><string>FileNames = <seealso marker="#type-file_names">file_names()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = {ok, [Result]} | {error, <seealso marker="#type-reason">reason()</seealso>}</string></subtype>
        <subtype><typename>Result</typename><string>Result = {FileName, TermPosition, term()}</string></subtype>
        <subtype><typename>FileName</typename><string>FileName = <seealso marker="#type-file_name">file_name()</seealso></string></subtype>
        <subtype><typename>TermPosition</typename><string>TermPosition = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>FileNames</anno>
  <anno>Options</anno>
  <anno>Reply</anno>
  <anno>Result</anno>
  <anno>TermPosition</anno>
</spec>
<spec>
  <name>keycheck</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>keycheck(KeyPos, FileName) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>FileName</typename><string>FileName = <seealso marker="#type-file_name">file_name()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = {ok, [Result]} | {error, <seealso marker="#type-reason">reason()</seealso>}</string></subtype>
        <subtype><typename>Result</typename><string>Result = {FileName, TermPosition, term()}</string></subtype>
        <subtype><typename>TermPosition</typename><string>TermPosition = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>KeyPos</anno>
  <anno>Reply</anno>
  <anno>Result</anno>
  <anno>TermPosition</anno>
</spec>
<spec>
  <name>keycheck</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>keycheck(KeyPos, FileNames, Options) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>FileNames</typename><string>FileNames = <seealso marker="#type-file_names">file_names()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = {ok, [Result]} | {error, <seealso marker="#type-reason">reason()</seealso>}</string></subtype>
        <subtype><typename>Result</typename><string>Result = {FileName, TermPosition, term()}</string></subtype>
        <subtype><typename>FileName</typename><string>FileName = <seealso marker="#type-file_name">file_name()</seealso></string></subtype>
        <subtype><typename>TermPosition</typename><string>TermPosition = integer() &gt;= 1</string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>FileNames</anno>
  <anno>KeyPos</anno>
  <anno>Options</anno>
  <anno>Reply</anno>
  <anno>Result</anno>
  <anno>TermPosition</anno>
</spec>
<spec>
  <name>keymerge</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>keymerge(KeyPos, FileNames, Output) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>FileNames</typename><string>FileNames = <seealso marker="#type-file_names">file_names()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>FileNames</anno>
  <anno>KeyPos</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>keymerge</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>keymerge(KeyPos, FileNames, Output, Options) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>FileNames</typename><string>FileNames = <seealso marker="#type-file_names">file_names()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>FileNames</anno>
  <anno>KeyPos</anno>
  <anno>Options</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>keysort</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>keysort(KeyPos, FileName) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>FileName</typename><string>FileName = <seealso marker="#type-file_name">file_name()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-input_reply">input_reply()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>KeyPos</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>keysort</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>keysort(KeyPos, Input, Output) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>Input</typename><string>Input = <seealso marker="#type-input">input()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-input_reply">input_reply()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Input</anno>
  <anno>KeyPos</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>keysort</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>keysort(KeyPos, Input, Output, Options) -&gt; Reply</head>
      <guard>
        <subtype><typename>KeyPos</typename><string>KeyPos = <seealso marker="#type-key_pos">key_pos()</seealso></string></subtype>
        <subtype><typename>Input</typename><string>Input = <seealso marker="#type-input">input()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-input_reply">input_reply()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Input</anno>
  <anno>KeyPos</anno>
  <anno>Options</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>merge</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>merge(FileNames, Output) -&gt; Reply</head>
      <guard>
        <subtype><typename>FileNames</typename><string>FileNames = <seealso marker="#type-file_names">file_names()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>FileNames</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>merge</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>merge(FileNames, Output, Options) -&gt; Reply</head>
      <guard>
        <subtype><typename>FileNames</typename><string>FileNames = <seealso marker="#type-file_names">file_names()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>FileNames</anno>
  <anno>Options</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>sort</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>sort(FileName) -&gt; Reply</head>
      <guard>
        <subtype><typename>FileName</typename><string>FileName = <seealso marker="#type-file_name">file_name()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-input_reply">input_reply()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>FileName</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>sort</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>sort(Input, Output) -&gt; Reply</head>
      <guard>
        <subtype><typename>Input</typename><string>Input = <seealso marker="#type-input">input()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-input_reply">input_reply()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Input</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<spec>
  <name>sort</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>sort(Input, Output, Options) -&gt; Reply</head>
      <guard>
        <subtype><typename>Input</typename><string>Input = <seealso marker="#type-input">input()</seealso></string></subtype>
        <subtype><typename>Output</typename><string>Output = <seealso marker="#type-output">output()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Reply</typename><string>Reply = ok | {error, <seealso marker="#type-reason">reason()</seealso>} | <seealso marker="#type-input_reply">input_reply()</seealso> | <seealso marker="#type-output_reply">output_reply()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Input</anno>
  <anno>Options</anno>
  <anno>Output</anno>
  <anno>Reply</anno>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:17.</timestamp>
</module>