<module name="prettypr">
<type>
  <name>deep_string</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-deep_string">deep_string()</marker> = [char() | deep_string()]</typehead></typedecl>
</type>
<type>
  <name>document</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-document">document()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>null |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#text{s = deep_string()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#nest{n = integer(), d = <seealso marker="#type-document">document()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#beside{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#above{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#sep{ds = [<seealso marker="#type-document">document()</seealso>], i = integer(), p = boolean()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#float{d = <seealso marker="#type-document">document()</seealso>, h = integer(), v = integer()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#union{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>#fit{d = <seealso marker="#type-document">document()</seealso>}</typehead></typedecl>
</type>
<spec>
  <name>above</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>above(D1 :: <seealso marker="#type-document">document()</seealso>, D2 :: <seealso marker="#type-document">document()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#above{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>}</head></clause>
  </contract>
  <anno>D1</anno>
  <anno>D2</anno>
</spec>
<spec>
  <name>beside</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>beside(D1 :: <seealso marker="#type-document">document()</seealso>, D2 :: <seealso marker="#type-document">document()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#beside{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>}</head></clause>
  </contract>
  <anno>D1</anno>
  <anno>D2</anno>
</spec>
<spec>
  <name>best</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>best(D :: <seealso marker="#type-document">document()</seealso>, W :: integer(), R :: integer()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>empty | <seealso marker="#type-document">document()</seealso></head></clause>
  </contract>
  <anno>D</anno>
  <anno>R</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>break</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>break(D :: <seealso marker="#type-document">document()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#above{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>}</head></clause>
  </contract>
  <anno>D</anno>
</spec>
<spec>
  <name>empty</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>empty() -&gt; null</head></clause>
  </contract>
</spec>
<spec>
  <name>floating</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>floating(D :: <seealso marker="#type-document">document()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#float{d = <seealso marker="#type-document">document()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>h = integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>v = integer()}</head></clause>
  </contract>
  <anno>D</anno>
</spec>
<spec>
  <name>floating</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>floating(D :: <seealso marker="#type-document">document()</seealso>, H :: integer(), V :: integer()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#float{d = <seealso marker="#type-document">document()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>h = integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>v = integer()}</head></clause>
  </contract>
  <anno>D</anno>
  <anno>H</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>follow</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>follow(D1 :: <seealso marker="#type-document">document()</seealso>, D2 :: <seealso marker="#type-document">document()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#beside{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>}</head></clause>
  </contract>
  <anno>D1</anno>
  <anno>D2</anno>
</spec>
<spec>
  <name>follow</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>follow(D1 :: <seealso marker="#type-document">document()</seealso>, D2 :: <seealso marker="#type-document">document()</seealso>, N :: integer()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#beside{d1 = <seealso marker="#type-document">document()</seealso>, d2 = <seealso marker="#type-document">document()</seealso>}</head></clause>
  </contract>
  <anno>D1</anno>
  <anno>D2</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>format</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>format(D :: <seealso marker="#type-document">document()</seealso>) -&gt; string()</head></clause>
  </contract>
  <anno>D</anno>
</spec>
<spec>
  <name>format</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>format(D :: <seealso marker="#type-document">document()</seealso>, W :: integer()) -&gt; string()</head></clause>
  </contract>
  <anno>D</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>format</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>format(D :: <seealso marker="#type-document">document()</seealso>, W :: integer(), R :: integer()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>string()</head></clause>
  </contract>
  <anno>D</anno>
  <anno>R</anno>
  <anno>W</anno>
</spec>
<spec>
  <name>nest</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>nest(N :: integer(), D :: <seealso marker="#type-document">document()</seealso>) -&gt; <seealso marker="#type-document">document()</seealso></head></clause>
  </contract>
  <anno>D</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>null_text</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>null_text(S :: string()) -&gt; #text{s = deep_string()}</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>par</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>par(Ds :: [<seealso marker="#type-document">document()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#sep{ds = [<seealso marker="#type-document">document()</seealso>], i = integer(), p = boolean()}</head></clause>
  </contract>
  <anno>Ds</anno>
</spec>
<spec>
  <name>par</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>par(Ds :: [<seealso marker="#type-document">document()</seealso>], N :: integer()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#sep{ds = [<seealso marker="#type-document">document()</seealso>], i = integer(), p = boolean()}</head></clause>
  </contract>
  <anno>Ds</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>sep</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>sep(Ds :: [<seealso marker="#type-document">document()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#sep{ds = [<seealso marker="#type-document">document()</seealso>], i = integer(), p = boolean()}</head></clause>
  </contract>
  <anno>Ds</anno>
</spec>
<spec>
  <name>text</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>text(S :: string()) -&gt; #text{s = deep_string()}</head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>text_par</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>text_par(S :: string()) -&gt; <seealso marker="#type-document">document()</seealso></head></clause>
  </contract>
  <anno>S</anno>
</spec>
<spec>
  <name>text_par</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>text_par(S :: string(), N :: integer()) -&gt; <seealso marker="#type-document">document()</seealso></head></clause>
  </contract>
  <anno>N</anno>
  <anno>S</anno>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:31:56.</timestamp>
</module>