<module name="heart">
<type>
  <name>heart_option</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-heart_option">heart_option()</marker> = check_schedulers</typehead></typedecl>
</type>
<spec>
  <name>clear_callback</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>clear_callback() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>clear_cmd</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>clear_cmd() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>cycle</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>cycle() -&gt; ok | {error, term()}</head></clause>
  </contract>
</spec>
<spec>
  <name>get_callback</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_callback() -&gt; {ok, {Module, Function}} | none</head>
      <guard>
        <subtype><typename>Module</typename><string>Module = Function = atom()</string></subtype>
        <subtype><typename>Function</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Function</anno>
  <anno>Module</anno>
</spec>
<spec>
  <name>get_cmd</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_cmd() -&gt; {ok, Cmd}</head>
      <guard>
        <subtype><typename>Cmd</typename><string>Cmd = string()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Cmd</anno>
</spec>
<spec>
  <name>get_options</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_options() -&gt; {ok, Options} | none</head>
      <guard>
        <subtype><typename>Options</typename><string>Options = [atom()]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Options</anno>
</spec>
<spec>
  <name>init</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>init(Starter :: pid(), Parent :: pid()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{no_heart, pid()} | {start_error, pid()}</head></clause>
  </contract>
  <anno>Parent</anno>
  <anno>Starter</anno>
</spec>
<spec>
  <name>set_callback</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>set_callback(Module, Function) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok | {error, {bad_callback, {Module, Function}}}</head>
      <guard>
        <subtype><typename>Module</typename><string>Module = Function = atom()</string></subtype>
        <subtype><typename>Function</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Function</anno>
  <anno>Module</anno>
</spec>
<spec>
  <name>set_cmd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>set_cmd(Cmd) -&gt; ok | {error, {bad_cmd, Cmd}}</head>
      <guard>
        <subtype><typename>Cmd</typename><string>Cmd = string()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Cmd</anno>
</spec>
<spec>
  <name>set_options</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>set_options(Options) -&gt; ok | {error, {bad_options, Options}}</head>
      <guard>
        <subtype><typename>Options</typename><string>Options = [<seealso marker="#type-heart_option">heart_option()</seealso>]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Options</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>start() -&gt; ignore | {error, term()} | {ok, pid()}</head></clause>
  </contract>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:42.</timestamp>
</module>