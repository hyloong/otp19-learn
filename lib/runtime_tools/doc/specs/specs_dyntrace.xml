<module name="dyntrace">
<type>
  <name>integer_maybe</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-integer_maybe">integer_maybe()</marker> = integer() | atom()</typehead></typedecl>
</type>
<type>
  <name>iolist_maybe</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-iolist_maybe">iolist_maybe()</marker> = iolist() | atom()</typehead></typedecl>
</type>
<type>
  <name>n_probe_label</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-n_probe_label">n_probe_label()</marker> = 0..1023</typehead></typedecl>
</type>
<type>
  <name>probe_arg</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-probe_arg">probe_arg()</marker> = integer() | iolist()</typehead></typedecl>
</type>
<spec>
  <name>available</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>available() -&gt; true | false</head></clause>
  </contract>
</spec>
<spec>
  <name>enabled</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_call</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_garbage_collection</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_ports</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_procs</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_receive</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_running_ports</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_running_procs</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>enabled_send</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>get_tag</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_tag() -&gt; binary() | undefined</head></clause>
  </contract>
</spec>
<spec>
  <name>get_tag_data</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_tag_data() -&gt; binary() | undefined</head></clause>
  </contract>
</spec>
<spec>
  <name>p</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>p() -&gt; true | false | error | badarg</head></clause>
  </contract>
</spec>
<spec>
  <name>p</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt; true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
</spec>
<spec>
  <name>p</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>, I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
</spec>
<spec>
  <name>p</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>, I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>, I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
</spec>
<spec>
  <name>p</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
</spec>
<spec>
  <name>p</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>S1</anno>
</spec>
<spec>
  <name>p</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>S1</anno>
  <anno>S2</anno>
</spec>
<spec>
  <name>p</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>S1</anno>
  <anno>S2</anno>
  <anno>S3</anno>
</spec>
<spec>
  <name>p</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>p(I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/>S4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>S1</anno>
  <anno>S2</anno>
  <anno>S3</anno>
  <anno>S4</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>) -&gt; true | false | error | badarg</head></clause>
  </contract>
  <anno>ProbeLabel</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>, I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>ProbeLabel</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>ProbeLabel</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>ProbeLabel</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>ProbeLabel</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>ProbeLabel</anno>
  <anno>S1</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>ProbeLabel</anno>
  <anno>S1</anno>
  <anno>S2</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>ProbeLabel</anno>
  <anno>S1</anno>
  <anno>S2</anno>
  <anno>S3</anno>
</spec>
<spec>
  <name>pn</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>pn(ProbeLabel :: <seealso marker="#type-n_probe_label">n_probe_label()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>I4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S1 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S2 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S3 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>,<br/><nbsp/><nbsp/><nbsp/>S4 :: <seealso marker="#type-probe_arg">probe_arg()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>I1</anno>
  <anno>I2</anno>
  <anno>I3</anno>
  <anno>I4</anno>
  <anno>ProbeLabel</anno>
  <anno>S1</anno>
  <anno>S2</anno>
  <anno>S3</anno>
  <anno>S4</anno>
</spec>
<spec>
  <name>put_tag</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>put_tag(Data :: undefined | iodata()) -&gt; binary() | undefined</head></clause>
  </contract>
  <anno>Data</anno>
</spec>
<spec>
  <name>restore_tag</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>restore_tag(T :: true | {integer() &gt;= 0, binary() | []}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true</head></clause>
  </contract>
  <anno>T</anno>
</spec>
<spec>
  <name>spread_tag</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>spread_tag(B :: boolean()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | {integer() &gt;= 0, binary() | []}</head></clause>
  </contract>
  <anno>B</anno>
</spec>
<spec>
  <name>trace</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_call</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_garbage_collection</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_ports</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_procs</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_receive</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_running_ports</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_running_procs</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>trace_send</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>user_trace_i4s4</name>
  <arity>9</arity>
  <contract>
    <clause>
      <head>user_trace_i4s4(X1 :: binary() | undefined,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: <seealso marker="#type-integer_maybe">integer_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X3 :: <seealso marker="#type-integer_maybe">integer_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X4 :: <seealso marker="#type-integer_maybe">integer_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X5 :: <seealso marker="#type-integer_maybe">integer_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X6 :: <seealso marker="#type-iolist_maybe">iolist_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X7 :: <seealso marker="#type-iolist_maybe">iolist_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X8 :: <seealso marker="#type-iolist_maybe">iolist_maybe()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X9 :: <seealso marker="#type-iolist_maybe">iolist_maybe()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>X1</anno>
  <anno>X2</anno>
  <anno>X3</anno>
  <anno>X4</anno>
  <anno>X5</anno>
  <anno>X6</anno>
  <anno>X7</anno>
  <anno>X8</anno>
  <anno>X9</anno>
</spec>
<spec>
  <name>user_trace_s1</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>user_trace_s1(Message :: iolist()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false | error | badarg</head></clause>
  </contract>
  <anno>Message</anno>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:56.</timestamp>
</module>