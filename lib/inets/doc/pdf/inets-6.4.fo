<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
    <fo:simple-page-master master-name="cover" margin="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin="0mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="left-page" margin-top="25mm" margin-bottom="15mm" margin-left="20mm" margin-right="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="left-header" extent="10mm"/>
      <fo:region-after region-name="left-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="right-page" margin-top="25mm" margin-bottom="15mm" margin-left="25mm" margin-right="20mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="right-header" extent="10mm"/>
      <fo:region-after region-name="right-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:page-sequence-master master-name="document">
      <fo:repeatable-page-master-alternatives>
        <fo:conditional-page-master-reference master-reference="left-page" odd-or-even="even"/>
        <fo:conditional-page-master-reference master-reference="right-page" odd-or-even="odd"/>
      </fo:repeatable-page-master-alternatives>
    </fo:page-sequence-master>
  </fo:layout-master-set>
  <fo:bookmark-tree>
    <fo:bookmark internal-destination="cover-page" starting-state="show">
      <fo:bookmark-title>inets</fo:bookmark-title>
      <fo:bookmark internal-destination="idp801792" starting-state="hide">
        <fo:bookmark-title>Inets User's Guide</fo:bookmark-title>
        <fo:bookmark internal-destination="idp790144" starting-state="hide">
          <fo:bookmark-title>Introduction</fo:bookmark-title>
          <fo:bookmark internal-destination="idp786144" starting-state="hide">
            <fo:bookmark-title>Purpose</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp781632" starting-state="hide">
            <fo:bookmark-title>Prerequisites</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp775056" starting-state="hide">
          <fo:bookmark-title>Inets</fo:bookmark-title>
          <fo:bookmark internal-destination="idp772944" starting-state="hide">
            <fo:bookmark-title>Service Concept</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp765136" starting-state="hide">
          <fo:bookmark-title>FTP Client</fo:bookmark-title>
          <fo:bookmark internal-destination="idp761728" starting-state="hide">
            <fo:bookmark-title>Getting Started</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp751184" starting-state="hide">
          <fo:bookmark-title>HTTP Client</fo:bookmark-title>
          <fo:bookmark internal-destination="idp747488" starting-state="hide">
            <fo:bookmark-title>Configuration</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp740448" starting-state="hide">
            <fo:bookmark-title>Getting Started</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp721088" starting-state="hide">
          <fo:bookmark-title>HTTP server</fo:bookmark-title>
          <fo:bookmark internal-destination="idp720320" starting-state="hide">
            <fo:bookmark-title>Configuration</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp688976" starting-state="hide">
            <fo:bookmark-title>Getting Started</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp674048" starting-state="hide">
            <fo:bookmark-title>Htaccess - User Configurable Authentication</fo:bookmark-title>
            <fo:bookmark internal-destination="idp668528" starting-state="hide">
              <fo:bookmark-title>Access Files Directives</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp590176" starting-state="hide">
            <fo:bookmark-title>Dynamic Web Pages</fo:bookmark-title>
            <fo:bookmark internal-destination="idp572608" starting-state="hide">
              <fo:bookmark-title>CGI Version 1.1, RFC 3875</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp566368" starting-state="hide">
              <fo:bookmark-title>ESI</fo:bookmark-title>
              <fo:bookmark internal-destination="idp565568" starting-state="hide">
                <fo:bookmark-title>ERL Scheme</fo:bookmark-title>
              </fo:bookmark>
              <fo:bookmark internal-destination="idp560896" starting-state="hide">
                <fo:bookmark-title>EVAL Scheme</fo:bookmark-title>
              </fo:bookmark>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp551184" starting-state="hide">
            <fo:bookmark-title>Logging</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp117376" starting-state="hide">
            <fo:bookmark-title>Erlang Web Server API</fo:bookmark-title>
            <fo:bookmark internal-destination="idp274304" starting-state="hide">
              <fo:bookmark-title>API Description</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp346576" starting-state="hide">
            <fo:bookmark-title>Inets Web Server Modules</fo:bookmark-title>
            <fo:bookmark internal-destination="idp469424" starting-state="hide">
              <fo:bookmark-title>mod_action - Filetype/Method-Based Script Execution</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp550720" starting-state="hide">
              <fo:bookmark-title>mod_alias - URL Aliasing</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp282224" starting-state="hide">
              <fo:bookmark-title>mod_auth - User Authentication</fo:bookmark-title>
              <fo:bookmark internal-destination="idp493376" starting-state="hide">
                <fo:bookmark-title>Mnesia As Authentication Database</fo:bookmark-title>
              </fo:bookmark>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp26768" starting-state="hide">
              <fo:bookmark-title>mod_cgi - CGI Scripts</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idm18848" starting-state="hide">
              <fo:bookmark-title>mod_dir - Directories</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp541920" starting-state="hide">
              <fo:bookmark-title>mod_disk_log - Logging Using Disk_Log.</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp285984" starting-state="hide">
              <fo:bookmark-title>mod_esi - Erlang Server Interface</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp285264" starting-state="hide">
              <fo:bookmark-title>mod_get - Regular GET Requests</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp693312" starting-state="hide">
              <fo:bookmark-title>mod_head - Regular HEAD Requests</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp696992" starting-state="hide">
              <fo:bookmark-title>mod_htaccess - User Configurable Access</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp702304" starting-state="hide">
              <fo:bookmark-title>mod_log - Logging Using Text Files.</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp625056" starting-state="hide">
              <fo:bookmark-title>mod_range - Requests with Range Headers</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp629136" starting-state="hide">
              <fo:bookmark-title>mod_response_control - Requests with If* Headers</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp638640" starting-state="hide">
              <fo:bookmark-title>mod_security - Security Filter</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp642000" starting-state="hide">
              <fo:bookmark-title>mod_trace - TRACE Request</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
      <fo:bookmark internal-destination="idp98496" starting-state="hide">
        <fo:bookmark-title>Reference Manual</fo:bookmark-title>
        <fo:bookmark internal-destination="idp1960496" starting-state="hide">
          <fo:bookmark-title>inets</fo:bookmark-title>
          <fo:bookmark internal-destination="idp288224" starting-state="hide">
            <fo:bookmark-title>services/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1625504" starting-state="hide">
            <fo:bookmark-title>services_info/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp890368" starting-state="hide">
            <fo:bookmark-title>service_names/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1059088" starting-state="hide">
            <fo:bookmark-title>start/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1058336" starting-state="hide">
            <fo:bookmark-title>start/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1064512" starting-state="hide">
            <fo:bookmark-title>start/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2068480" starting-state="hide">
            <fo:bookmark-title>start/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1612112" starting-state="hide">
            <fo:bookmark-title>stop/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp960352" starting-state="hide">
            <fo:bookmark-title>stop/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp1897184" starting-state="hide">
          <fo:bookmark-title>ftp</fo:bookmark-title>
          <fo:bookmark internal-destination="idp2600800" starting-state="hide">
            <fo:bookmark-title>account/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2606608" starting-state="hide">
            <fo:bookmark-title>append/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2607072" starting-state="hide">
            <fo:bookmark-title>append/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2614048" starting-state="hide">
            <fo:bookmark-title>append_bin/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2620176" starting-state="hide">
            <fo:bookmark-title>append_chunk/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2626816" starting-state="hide">
            <fo:bookmark-title>append_chunk_start/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2632512" starting-state="hide">
            <fo:bookmark-title>append_chunk_end/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2637344" starting-state="hide">
            <fo:bookmark-title>cd/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2642496" starting-state="hide">
            <fo:bookmark-title>close/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2646944" starting-state="hide">
            <fo:bookmark-title>delete/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2652064" starting-state="hide">
            <fo:bookmark-title>formaterror/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2656336" starting-state="hide">
            <fo:bookmark-title>lcd/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2661440" starting-state="hide">
            <fo:bookmark-title>lpwd/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2666320" starting-state="hide">
            <fo:bookmark-title>ls/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2666768" starting-state="hide">
            <fo:bookmark-title>ls/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2675344" starting-state="hide">
            <fo:bookmark-title>mkdir/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2681568" starting-state="hide">
            <fo:bookmark-title>nlist/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2682016" starting-state="hide">
            <fo:bookmark-title>nlist/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2691136" starting-state="hide">
            <fo:bookmark-title>open/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2691616" starting-state="hide">
            <fo:bookmark-title>open/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2710864" starting-state="hide">
            <fo:bookmark-title>pwd/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2716256" starting-state="hide">
            <fo:bookmark-title>recv/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2716720" starting-state="hide">
            <fo:bookmark-title>recv/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2725680" starting-state="hide">
            <fo:bookmark-title>recv_bin/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2731328" starting-state="hide">
            <fo:bookmark-title>recv_chunk_start/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2736512" starting-state="hide">
            <fo:bookmark-title>recv_chunk/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2745104" starting-state="hide">
            <fo:bookmark-title>rename/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2750688" starting-state="hide">
            <fo:bookmark-title>rmdir/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2756912" starting-state="hide">
            <fo:bookmark-title>send/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2757360" starting-state="hide">
            <fo:bookmark-title>send/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2763936" starting-state="hide">
            <fo:bookmark-title>send_bin/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2769984" starting-state="hide">
            <fo:bookmark-title>send_chunk/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2776624" starting-state="hide">
            <fo:bookmark-title>send_chunk_start/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2781792" starting-state="hide">
            <fo:bookmark-title>send_chunk_end/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2786592" starting-state="hide">
            <fo:bookmark-title>type/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2794352" starting-state="hide">
            <fo:bookmark-title>user/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2799904" starting-state="hide">
            <fo:bookmark-title>user/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2805952" starting-state="hide">
            <fo:bookmark-title>quote/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2844720" starting-state="hide">
          <fo:bookmark-title>tftp</fo:bookmark-title>
          <fo:bookmark internal-destination="idp2918608" starting-state="hide">
            <fo:bookmark-title>change_config/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2923200" starting-state="hide">
            <fo:bookmark-title>change_config/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2927792" starting-state="hide">
            <fo:bookmark-title>change_config/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2932416" starting-state="hide">
            <fo:bookmark-title>info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2936512" starting-state="hide">
            <fo:bookmark-title>info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2940608" starting-state="hide">
            <fo:bookmark-title>info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2944320" starting-state="hide">
            <fo:bookmark-title>read_file/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2956128" starting-state="hide">
            <fo:bookmark-title>start/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2960384" starting-state="hide">
            <fo:bookmark-title>write_file/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2987104" starting-state="hide">
            <fo:bookmark-title>Module:abort/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2992928" starting-state="hide">
            <fo:bookmark-title>Module:open/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3006944" starting-state="hide">
            <fo:bookmark-title>Module:prepare/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3020992" starting-state="hide">
            <fo:bookmark-title>Module:read/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3028304" starting-state="hide">
            <fo:bookmark-title>Module:write/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3039472" starting-state="hide">
            <fo:bookmark-title>Logger:error_msg/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3044576" starting-state="hide">
            <fo:bookmark-title>Logger:info_msg/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3049104" starting-state="hide">
            <fo:bookmark-title>Logger:warning_msg/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3060496" starting-state="hide">
          <fo:bookmark-title>httpc</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3110992" starting-state="hide">
            <fo:bookmark-title>cancel_request/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3111456" starting-state="hide">
            <fo:bookmark-title>cancel_request/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3116288" starting-state="hide">
            <fo:bookmark-title>cookie_header/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3116736" starting-state="hide">
            <fo:bookmark-title>cookie_header/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3117232" starting-state="hide">
            <fo:bookmark-title>cookie_header/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3126400" starting-state="hide">
            <fo:bookmark-title>get_options/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3126896" starting-state="hide">
            <fo:bookmark-title>get_options/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3133184" starting-state="hide">
            <fo:bookmark-title>info/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3133632" starting-state="hide">
            <fo:bookmark-title>info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3137840" starting-state="hide">
            <fo:bookmark-title>reset_cookies/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3138304" starting-state="hide">
            <fo:bookmark-title>reset_cookies/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3142944" starting-state="hide">
            <fo:bookmark-title>request/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3143392" starting-state="hide">
            <fo:bookmark-title>request/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3149856" starting-state="hide">
            <fo:bookmark-title>request/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3150336" starting-state="hide">
            <fo:bookmark-title>request/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3232144" starting-state="hide">
            <fo:bookmark-title>set_options/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3232608" starting-state="hide">
            <fo:bookmark-title>set_options/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3272336" starting-state="hide">
            <fo:bookmark-title>store_cookies/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3272816" starting-state="hide">
            <fo:bookmark-title>store_cookies/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3279824" starting-state="hide">
            <fo:bookmark-title>stream_next/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3284976" starting-state="hide">
            <fo:bookmark-title>which_cookies/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3285440" starting-state="hide">
            <fo:bookmark-title>which_cookies/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3291520" starting-state="hide">
            <fo:bookmark-title>which_sessions/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3291984" starting-state="hide">
            <fo:bookmark-title>which_sessions/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3308960" starting-state="hide">
          <fo:bookmark-title>httpd</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3591104" starting-state="hide">
            <fo:bookmark-title>info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3591552" starting-state="hide">
            <fo:bookmark-title>info/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3598576" starting-state="hide">
            <fo:bookmark-title>info/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3599040" starting-state="hide">
            <fo:bookmark-title>info/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3599504" starting-state="hide">
            <fo:bookmark-title>info/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3600000" starting-state="hide">
            <fo:bookmark-title>info/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3607216" starting-state="hide">
            <fo:bookmark-title>reload_config/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3649504" starting-state="hide">
            <fo:bookmark-title>Module:do/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3672640" starting-state="hide">
            <fo:bookmark-title>Module:load/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3680192" starting-state="hide">
            <fo:bookmark-title>Module:remove/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3684928" starting-state="hide">
            <fo:bookmark-title>Module:store/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3691760" starting-state="hide">
            <fo:bookmark-title>parse_query/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3707712" starting-state="hide">
          <fo:bookmark-title>httpd_custom_api</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3710784" starting-state="hide">
            <fo:bookmark-title>response_default_headers/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3714592" starting-state="hide">
            <fo:bookmark-title>response_header/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3718416" starting-state="hide">
            <fo:bookmark-title>request_header/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3729024" starting-state="hide">
          <fo:bookmark-title>httpd_socket</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3733104" starting-state="hide">
            <fo:bookmark-title>deliver/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3742528" starting-state="hide">
            <fo:bookmark-title>peername/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3749840" starting-state="hide">
            <fo:bookmark-title>resolve/0</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3763376" starting-state="hide">
          <fo:bookmark-title>httpd_util</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3766480" starting-state="hide">
            <fo:bookmark-title>convert_request_date/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3772624" starting-state="hide">
            <fo:bookmark-title>create_etag/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3777520" starting-state="hide">
            <fo:bookmark-title>day/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3782464" starting-state="hide">
            <fo:bookmark-title>decode_hex/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3786624" starting-state="hide">
            <fo:bookmark-title>flatlength/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3791056" starting-state="hide">
            <fo:bookmark-title>hexlist_to_integer/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3795456" starting-state="hide">
            <fo:bookmark-title>integer_to_hexlist/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3799856" starting-state="hide">
            <fo:bookmark-title>lookup/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3800320" starting-state="hide">
            <fo:bookmark-title>lookup/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3811504" starting-state="hide">
            <fo:bookmark-title>lookup_mime/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3811968" starting-state="hide">
            <fo:bookmark-title>lookup_mime/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3818416" starting-state="hide">
            <fo:bookmark-title>lookup_mime_default/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3818880" starting-state="hide">
            <fo:bookmark-title>lookup_mime_default/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3825872" starting-state="hide">
            <fo:bookmark-title>message/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3842624" starting-state="hide">
            <fo:bookmark-title>month/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3847520" starting-state="hide">
            <fo:bookmark-title>multi_lookup/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3854160" starting-state="hide">
            <fo:bookmark-title>reason_phrase/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3860000" starting-state="hide">
            <fo:bookmark-title>rfc1123_date/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3860464" starting-state="hide">
            <fo:bookmark-title>rfc1123_date/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3865008" starting-state="hide">
            <fo:bookmark-title>split/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3873104" starting-state="hide">
            <fo:bookmark-title>split_script_path/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3879920" starting-state="hide">
            <fo:bookmark-title>split_path/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3895184" starting-state="hide">
            <fo:bookmark-title>strip/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3899264" starting-state="hide">
            <fo:bookmark-title>suffix/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3912656" starting-state="hide">
          <fo:bookmark-title>mod_alias</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3916112" starting-state="hide">
            <fo:bookmark-title>default_index/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3925008" starting-state="hide">
            <fo:bookmark-title>path/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3936128" starting-state="hide">
            <fo:bookmark-title>real_name/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3950688" starting-state="hide">
            <fo:bookmark-title>real_script_name/3</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3969968" starting-state="hide">
          <fo:bookmark-title>mod_auth</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3972480" starting-state="hide">
            <fo:bookmark-title>add_group_member/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3972992" starting-state="hide">
            <fo:bookmark-title>add_group_member/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3973504" starting-state="hide">
            <fo:bookmark-title>add_group_member/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3983072" starting-state="hide">
            <fo:bookmark-title>add_user/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3983552" starting-state="hide">
            <fo:bookmark-title>add_user/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3984064" starting-state="hide">
            <fo:bookmark-title>add_user/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3995424" starting-state="hide">
            <fo:bookmark-title>delete_group/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3995984" starting-state="hide">
            <fo:bookmark-title>delete_group/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4005440" starting-state="hide">
            <fo:bookmark-title>delete_group_member/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4005952" starting-state="hide">
            <fo:bookmark-title>delete_group_member/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4006464" starting-state="hide">
            <fo:bookmark-title>delete_group_member/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4016048" starting-state="hide">
            <fo:bookmark-title>delete_user/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4016528" starting-state="hide">
            <fo:bookmark-title>delete_user/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4017024" starting-state="hide">
            <fo:bookmark-title>delete_user/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4026544" starting-state="hide">
            <fo:bookmark-title>get_user/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4027040" starting-state="hide">
            <fo:bookmark-title>get_user/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4027536" starting-state="hide">
            <fo:bookmark-title>get_user/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4037024" starting-state="hide">
            <fo:bookmark-title>list_groups/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4037504" starting-state="hide">
            <fo:bookmark-title>list_groups/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4038000" starting-state="hide">
            <fo:bookmark-title>list_groups/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4047008" starting-state="hide">
            <fo:bookmark-title>list_group_members/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4047504" starting-state="hide">
            <fo:bookmark-title>list_group_members/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4048016" starting-state="hide">
            <fo:bookmark-title>list_group_members/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4057552" starting-state="hide">
            <fo:bookmark-title>list_users/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4058032" starting-state="hide">
            <fo:bookmark-title>list_users/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4058512" starting-state="hide">
            <fo:bookmark-title>list_users/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4067536" starting-state="hide">
            <fo:bookmark-title>update_password/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4068064" starting-state="hide">
            <fo:bookmark-title>update_password/6</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4084288" starting-state="hide">
          <fo:bookmark-title>mod_esi</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4105440" starting-state="hide">
            <fo:bookmark-title>deliver/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4115472" starting-state="hide">
            <fo:bookmark-title>Module:Function/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4127952" starting-state="hide">
            <fo:bookmark-title>Module:Function/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4139552" starting-state="hide">
          <fo:bookmark-title>mod_security</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4141984" starting-state="hide">
            <fo:bookmark-title>block_user/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4142480" starting-state="hide">
            <fo:bookmark-title>block_user/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4149696" starting-state="hide">
            <fo:bookmark-title>list_auth_users/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4150160" starting-state="hide">
            <fo:bookmark-title>list_auth_users/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4150640" starting-state="hide">
            <fo:bookmark-title>list_auth_users/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4151120" starting-state="hide">
            <fo:bookmark-title>list_auth_users/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4157984" starting-state="hide">
            <fo:bookmark-title>list_blocked_users/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4158448" starting-state="hide">
            <fo:bookmark-title>list_blocked_users/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4158928" starting-state="hide">
            <fo:bookmark-title>list_blocked_users/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4159408" starting-state="hide">
            <fo:bookmark-title>list_blocked_users/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4165328" starting-state="hide">
            <fo:bookmark-title>unblock_user/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4165808" starting-state="hide">
            <fo:bookmark-title>unblock_user/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4166304" starting-state="hide">
            <fo:bookmark-title>unblock_user/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4166784" starting-state="hide">
            <fo:bookmark-title>unblock_user/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4177792" starting-state="hide">
            <fo:bookmark-title>Module:event/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4178272" starting-state="hide">
            <fo:bookmark-title>Module:event/5</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4199408" starting-state="hide">
          <fo:bookmark-title>http_uri</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4218416" starting-state="hide">
            <fo:bookmark-title>decode/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4222144" starting-state="hide">
            <fo:bookmark-title>encode/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4226400" starting-state="hide">
            <fo:bookmark-title>parse/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4226880" starting-state="hide">
            <fo:bookmark-title>parse/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4239584" starting-state="hide">
            <fo:bookmark-title>scheme_defaults/0</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
    </fo:bookmark>
  </fo:bookmark-tree>
  <fo:page-sequence font-family="sans-serif" force-page-count="even" master-reference="cover" font-size="10pt">
    <fo:flow flow-name="xsl-region-body">
      <fo:block space-before="130mm" space-before.conditionality="retain" text-align="end">
        <fo:external-graphic src="/root/download/otp_src_20.0/bootstrap/lib/erl_docgen/priv/images/erlang-logo.gif"/>
      </fo:block>
      <fo:block id="cover-page" border-before-style="solid" border-before-width="10pt" border-color="#960003" font-size="2.3em" padding-before="0.5em" text-align="end">inets</fo:block>
      <fo:block font-size="0.9em" text-align="end">Copyright © 1997-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em" text-align="end">inets 6.4</fo:block>
      <fo:block font-size="0.9em" text-align="end">July 12, 2017</fo:block>
      <fo:block padding-before="2.5em" font-size="1.33em" font-weight="bold" color="#C00" text-align="end"/>
      <fo:block break-before="page" border-before-style="solid" border-before-width="1pt" border-color="#960003" font-weight="bold" padding-before="0.5em" space-before="200mm" space-before.conditionality="retain">Copyright © 1997-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em">
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    Ericsson AB. All Rights Reserved..
        </fo:block>
      <fo:block font-size="0.9em" font-weight="bold" space-before="2em">July 12, 2017</fo:block>
    </fo:flow>
  </fo:page-sequence>
  <fo:page-sequence font-family="serif" master-reference="document" initial-page-number="1" font-size="10pt">
    <fo:static-content flow-name="left-header">
      <fo:block text-align="start" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-header">
      <fo:block text-align="end" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="left-footer">
      <fo:block text-align="start" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold"><fo:page-number/> | Ericsson AB. All Rights Reserved.:
            inets</fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-footer">
      <fo:block text-align="end" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">Ericsson AB. All Rights Reserved.:
            inets | <fo:page-number/></fo:block>
    </fo:static-content>
    <fo:flow flow-name="xsl-region-body"><fo:block/><fo:block id="idp801792" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">1   
      Inets User's Guide</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">Inets</fo:inline> application provides a set of 
    Internet-related services as follows:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>An FTP client</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A TFTP client and server</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>An  client and server</fo:block></fo:list-item-body></fo:list-item>
     </fo:list-block>
     <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The HTTP client and server are HTTP 1.1 compliant as
      defined in
     <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.</fo:block>
  <fo:block id="idp790144" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.1  Introduction</fo:marker>1.1  Introduction</fo:block><fo:block id="idp786144" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.1 
      Purpose</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Inets</fo:inline> is a container for Internet clients and servers
      including the following:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>An FTP client</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A TFTP client and server</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>An  client and server</fo:block></fo:list-item-body></fo:list-item>
     </fo:list-block>
     <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The HTTP client and server are HTTP 1.1 compliant as
      defined in 
     <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.</fo:block>
  <fo:block id="idp781632" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.2 
      Prerequisites</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is assumed that the reader is familiar with the Erlang
      programming language, concepts of OTP, and has a basic
      understanding of the FTP, TFTP, and HTTP protocols.</fo:block>
  <fo:block id="idp775056" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.2  Inets</fo:marker>1.2  Inets</fo:block><fo:block id="idp772944" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.1 
      Service Concept</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Each client and server in <fo:inline font-family="monospace">Inets</fo:inline> is viewed as a service.
      Services can be configured to be started at application startup or
      dynamically in runtime. To run <fo:inline font-family="monospace">Inets</fo:inline> as a distributed 
      application that handles application failover and takeover, 
      configure the services to be started at application startup. 
      When starting the <fo:inline font-family="monospace">Inets</fo:inline> application, the <fo:inline font-family="monospace">Inets</fo:inline> 
      top supervisor starts a number of subsupervisors and worker 
      processes for handling the provided services.
      When starting services dynamically, new children are added to the 
      supervision tree, unless the service is started with the standalone 
      option. In this case the service is linked to the calling process 
      and all OTP application features, such as soft upgrade, are lost.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Services to be configured for startup at application startup are to 
      be put into the Erlang node configuration file
      on the following form:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      [{inets, [{services, ListofConfiguredServices}]}].</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For details of what to put in the list of configured services, 
    see the documentation for the services to be configured.</fo:block>
  <fo:block id="idp765136" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.3  FTP Client</fo:marker>1.3  FTP Client</fo:block><fo:block id="idp761728" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.1 
      Getting Started</fo:block>
    

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">FTP clients are considered to be rather temporary. Thus, 
      they are only started and stopped during runtime and cannot 
      be started at application startup.
      The FTP client API is designed to allow some functions to 
      return intermediate results. This implies that only the process
      that started the FTP client can access it with
      preserved sane semantics. 
      If the process that started the FTP session 
      dies, the FTP client process terminates.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The client supports IPv6 as long as the underlying mechanisms
      also do so.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following is a simple example of an FTP session, where
      the user <fo:inline font-family="monospace">guest</fo:inline> with password <fo:inline font-family="monospace">password</fo:inline> logs on to
      the remote host <fo:inline font-family="monospace">erlang.org</fo:inline>:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      1&gt; inets:start().
      ok
      2&gt; {ok, Pid} = inets:start(ftpc, [{host, "erlang.org"}]).
      {ok,&lt;0.22.0&gt;}
      3&gt; ftp:user(Pid, "guest", "password").
      ok
      4&gt; ftp:pwd(Pid).
      {ok, "/home/guest"}
      5&gt; ftp:cd(Pid, "appl/examples").
      ok
      6&gt; ftp:lpwd(Pid).
      {ok, "/home/fred"}.
      7&gt; ftp:lcd(Pid, "/home/eproj/examples").
      ok
      8&gt; ftp:recv(Pid, "appl.erl").
      ok
      9&gt; inets:stop(ftpc, Pid).
      ok
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"> The file
      <fo:inline font-family="monospace">appl.erl</fo:inline> is transferred from the remote to the local
      host.  When the session is opened, the current directory at
      the remote host is <fo:inline font-family="monospace">/home/guest</fo:inline>, and <fo:inline font-family="monospace">/home/fred</fo:inline>
      at the local host. Before transferring the file, the current
      local directory is changed to <fo:inline font-family="monospace">/home/eproj/examples</fo:inline>, and
      the remote directory is set to
      <fo:inline font-family="monospace">/home/guest/appl/examples</fo:inline>.</fo:block>
  <fo:block id="idp751184" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.4  HTTP Client</fo:marker>1.4  HTTP Client</fo:block><fo:block id="idp747488" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.4.1 
      Configuration</fo:block>
    

      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The HTTP client default profile is started when the <fo:inline font-family="monospace">Inets</fo:inline>
    application is started and is then available to all processes on
    that Erlang node. Other profiles can also be started at
    application startup, or profiles can be started and stopped
    dynamically in runtime. Each client profile spawns a new
    process to handle each request, unless a persistent connection 
    can be used with or without pipelining.
    The client adds a <fo:inline font-family="monospace">host</fo:inline> header and an empty
    <fo:inline font-family="monospace">te</fo:inline> header if there are no such headers present in the request.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The client supports IPv6 as long as the underlying mechanisms also do
      so.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following is to be put in the Erlang node application configuration file
      to start a profile at application startup:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      [{inets, [{services, [{httpc, PropertyList}]}]}]</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For valid properties, see 
    <fo:inline font-style="italic">httpc(3)</fo:inline>. </fo:block>
  <fo:block id="idp740448" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.4.2 
      Getting Started</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start <fo:inline font-family="monospace">Inets</fo:inline>:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
 1 &gt; inets:start().
      ok</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following calls use the default client profile.
      Use the proxy <fo:inline font-family="monospace">"www-proxy.mycompany.com:8000"</fo:inline>,
      except from requests to localhost. This applies to all the
      following requests.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      2 &gt; httpc:set_options([{proxy, {{"www-proxy.mycompany.com", 8000},
      ["localhost"]}}]).
      ok</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following is an ordinary synchronous request:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      3 &gt; {ok, {{Version, 200, ReasonPhrase}, Headers, Body}} =
      httpc:request(get, {"http://www.erlang.org", []}, [], []).</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">With all the default values presented, a get request can also be written
      as follows:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      4 &gt; {ok, {{Version, 200, ReasonPhrase}, Headers, Body}} =
      httpc:request("http://www.erlang.org").</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following is an ordinary asynchronous request:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      5 &gt; {ok, RequestId} =
      httpc:request(get, {"http://www.erlang.org", []}, [], [{sync, false}]).</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The result is sent to the calling process as
      <fo:inline font-family="monospace">{http, {ReqestId, Result}}</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In this case, the calling process is the shell, so the following
      result is received:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      6 &gt; receive {http, {RequestId, Result}} -&gt; ok after 500 -&gt; error end.
      ok</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This sends a request with a specified connection header:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      7 &gt; {ok, {{NewVersion, 200, NewReasonPhrase}, NewHeaders, NewBody}} =
      httpc:request(get, {"http://www.erlang.org", [{"connection", "close"}]},
      [], []).</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start an HTTP client profile:</fo:block>
   
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      8 &gt; {ok, Pid} = inets:start(httpc, [{profile, foo}]).
      {ok, &lt;0.45.0&gt;}       
      </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The new profile has no proxy settings, so the connection is refused:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      9 &gt; httpc:request("http://www.erlang.org", foo). 
      {error, econnrefused}</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stop the HTTP client profile:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      10 &gt; inets:stop(httpc, foo).
      ok</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Alternative way to stop the HTTP client profile:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      10 &gt; inets:stop(httpc, Pid).
      ok</fo:block>
    
  <fo:block id="idp721088" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.5  HTTP server</fo:marker>1.5  HTTP server</fo:block><fo:block id="idp720320" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.1 
      Configuration</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The HTTP server, also referred to as httpd, handles HTTP requests
      as described in 
      <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>
      with a few exceptions, such as gateway
      and proxy functionality. The server supports IPv6 as long as the
      underlying mechanisms also do so.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The server implements numerous features, such as:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Secure Sockets Layer (SSL)</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Erlang Scripting Interface (ESI)</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Common Gateway Interface (CGI)</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>User Authentication (using Mnesia,
       Dets or plain text database)</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Common Logfile Format (with or without disk_log(3) support)</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>URL Aliasing</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Action Mappings</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Directory Listings</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The configuration of the server is provided as an Erlang
      property list. For backwards compatibility, a configuration
      file using apache-style configuration directives is
      supported.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">As of <fo:inline font-family="monospace">Inets</fo:inline> 5.0 the HTTP server is an easy to
      start/stop and customize web server providing the most basic
      web server functionality. Inets is designed for embedded systems
      and if you want a full-fledged web server there are exists other 
      erlang open source alternatives.</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Almost all server functionality has been implemented using an
      especially crafted server API, which is described in the Erlang Web
      Server API. This API can be used
      to enhance the core server functionality, for example with custom
      logging and authentication.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following is to be put in the Erlang node application configuration 
      file to start an HTTP server at application startup:</fo:block>
    
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      [{inets, [{services, [{httpd, [{proplist_file,
                 "/var/tmp/server_root/conf/8888_props.conf"}]},
                {httpd, [{proplist_file,
                 "/var/tmp/server_root/conf/8080_props.conf"}]}]}]}].</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The server is configured using an Erlang property list.
      For the available properties, see
      <fo:inline font-style="italic">httpd(3)</fo:inline>.
      For backwards compatibility, apache-like configuration files
      are also supported.
    </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The available configuration properties are as follows:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
     httpd_service() -&gt; {httpd, httpd()}
     httpd()         -&gt; [httpd_config()] 
     httpd_config()  -&gt; {file, file()} |
                        {proplist_file, file()}
                        {debug, debug()} |
                        {accept_timeout, integer()}
     debug()         -&gt; disable | [debug_options()]
     debug_options() -&gt; {all_functions, modules()} | 
                        {exported_functions, modules()} |
                        {disable, modules()}
     modules()       -&gt; [atom()]</fo:block>
     <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Here:</fo:block>
     <fo:block space-after="0.25em" space-before="0.25em">
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{file, file()}</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you use an old apace-like configuration file.</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{proplist_file, file()}</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">File containing an Erlang property
      list, followed by a full stop, describing the HTTP server
      configuration.</fo:block></fo:block></fo:block-container> 
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{debug, debug()}</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Can enable trace on all functions or only exported functions 
       on chosen modules.</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{accept_timeout, integer()}</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the wanted time-out value for
      the server to set up a request connection.</fo:block></fo:block></fo:block-container>
     </fo:block>
  <fo:block id="idp688976" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.2 
      Getting Started</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start <fo:inline font-family="monospace">Inets</fo:inline>:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      1 &gt; inets:start().
      ok</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start an HTTP server with minimal required configuration.
       If you specify port <fo:inline font-family="monospace">0</fo:inline>, an arbitrary available port is
       used, and you can use function <fo:inline font-family="monospace">info</fo:inline> to find which port 
       number that was picked:</fo:block>

    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      2 &gt; {ok, Pid} = inets:start(httpd, [{port, 0},
      {server_name,"httpd_test"}, {server_root,"/tmp"},
      {document_root,"/tmp/htdocs"}, {bind_address, "localhost"}]).
      {ok, 0.79.0}      </fo:block>
    
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Call <fo:inline font-family="monospace">info</fo:inline>:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      3 &gt;  httpd:info(Pid).
      [{mime_types,[{"html","text/html"},{"htm","text/html"}]},
      {server_name,"httpd_test"},
      {bind_address, {127,0,0,1}},
      {server_root,"/tmp"},
      {port,59408},
      {document_root,"/tmp/htdocs"}]</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Reload the configuration without restarting the server:
      
    </fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
    4 &gt; httpd:reload_config([{port, 59408},
      {server_name,"httpd_test"}, {server_root,"/tmp/www_test"},
      {document_root,"/tmp/www_test/htdocs"},
      {bind_address, "localhost"}], non_disturbing).
    ok.</fo:block>

    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">port</fo:inline> and <fo:inline font-family="monospace">bind_address</fo:inline> cannot be changed. 
      Clients trying to access the server during the reload
      get a service temporary unavailable answer.</fo:block></fo:block>

    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      5 &gt;  httpd:info(Pid, [server_root, document_root]).
      [{server_root,"/tmp/www_test"},{document_root,"/tmp/www_test/htdocs"}] </fo:block>

    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      6 &gt; ok = inets:stop(httpd, Pid).</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Alternative:</fo:block>
    
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      6 &gt; ok = inets:stop(httpd, {{127,0,0,1}, 59408}).</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Notice that <fo:inline font-family="monospace">bind_address</fo:inline> must be the IP address reported 
    by function <fo:inline font-family="monospace">info</fo:inline> and cannot be the hostname that is allowed 
    when putting in <fo:inline font-family="monospace">bind_address</fo:inline>.</fo:block>
  <fo:block id="idp674048" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.3 
      Htaccess - User Configurable Authentication</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Web server users without server administrative privileges
        that need to manage authentication of web pages that are local 
	to their user can use the per-directory runtime configurable 
	user-authentication scheme <fo:inline font-family="monospace">htaccess</fo:inline>. 
        It works as follows:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Each directory in the path to the requested asset is
         searched for an access file (default is <fo:inline font-family="monospace">.htaccess</fo:inline>), which 
	 restricts the web servers rights to respond to a request. 
	 If an access file is found, the rules in that file is applied to the
         request.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The rules in an access file apply to files in the same
         directory and in subdirectories. If there exists more than one
         access file in the path to an asset, the rules in the
         access file nearest the requested asset is applied.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>To change the rules that restrict the use of 
         an asset, the user only needs write access 
         to the directory where the asset is.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>All access files in the path to a requested asset are read
         once per request. This means that the load on the server
         increases when <fo:inline font-family="monospace">htaccess</fo:inline> is used.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If a directory is limited both by authentication directives 
	 in the HTTP server configuration file and by the <fo:inline font-family="monospace">htaccess</fo:inline> 
	 files, the user must be allowed to get access to the file by both 
	 methods for the request to succeed.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>

    <fo:block id="idp668528" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Access Files Directives</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In every directory under <fo:inline font-family="monospace">DocumentRoot</fo:inline> or under an
	<fo:inline font-family="monospace">Alias</fo:inline> a user can place an access file. An access file
	is a plain text file that specifies the restrictions to
	consider before the web server answers to a
          request. If there are more than one access file in the path
          to the requested asset, the directives in the access file in
          the directory nearest the asset is used.</fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"allow"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">Allow</fo:inline> from subnet <fo:inline font-family="monospace">subnet | from all</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">from all</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Same as directive <fo:inline font-family="monospace">allow</fo:inline> for the server configuration file.</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"AllowOverRide"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">  
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">AllowOverRide</fo:inline> <fo:inline font-family="monospace">all | none | Directives</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">none</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">AllowOverRide</fo:inline> specifies the parameters that
              access files in subdirectories are not allowed to alter the value 
              for. If the parameter is set to <fo:inline font-family="monospace">none</fo:inline>, no further 
              access files is parsed.
              </fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If only one access file exists, setting this parameter to
              <fo:inline font-family="monospace">none</fo:inline> can ease the burden on the server as the server
              then stops looking for access files.</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"AuthGroupfile"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">AuthGroupFile</fo:inline> Filename</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">none</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">AuthGroupFile</fo:inline> indicates which file that contains the list
              of groups. The filename must contain the absolute path to the
              file. The format of the file is one group per row and
              every row contains the name of the group and the members
              of the group, separated by a space, for example:</fo:block>
            <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
GroupName: Member1 Member2 .... MemberN</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"AuthName"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">AuthName</fo:inline> auth-domain</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">none</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Same as directive <fo:inline font-family="monospace">AuthName</fo:inline> for the server 
	    configuration file.</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"AuthType"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">AuthType</fo:inline> <fo:inline font-family="monospace">Basic</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">Basic</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">AuthType</fo:inline> specifies which authentication scheme to
              be used. Only Basic Authenticating using UUEncoding of
              the password and user ID is implemented.</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"AuthUserFile"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">AuthUserFile</fo:inline> Filename</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline><fo:inline font-family="monospace">none</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">AuthUserFile</fo:inline> indicates which file that contains the list
              of users. The filename must contain the absolute path to the
              file. The username and password are not encrypted so do not
              place the file with users in a directory that is accessible
              through the web server. The format of the file is one user per row.
              Every row contains <fo:inline font-family="monospace">UserName</fo:inline> and <fo:inline font-family="monospace">Password</fo:inline> separated 
	      by a colon, for example:</fo:block>
            <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
UserName:Password
UserName:Password</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"deny"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">deny</fo:inline> from subnet <fo:inline font-family="monospace">subnet | from all</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Context:</fo:inline> Limit</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Same as directive <fo:inline font-family="monospace">deny</fo:inline> for the server configuration file.</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"Limit"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"> 
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">&lt;Limit</fo:inline> RequestMethods<fo:inline font-family="monospace">&gt;</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">none</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">&lt;Limit&gt;</fo:inline> and <fo:inline font-family="monospace">&lt;/Limit&gt;</fo:inline> are used to enclose
              a group of directives applying only to requests using
              the specified methods. If no request method is specified,
              all request methods are verified against the restrictions.</fo:block>
	      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
            <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
&lt;Limit POST GET HEAD&gt;
  order allow deny
  require group group1
  allow from 123.145.244.5
&lt;/Limit&gt;</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"order"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">   
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">order</fo:inline> <fo:inline font-family="monospace">allow deny | deny allow</fo:inline></fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">allow deny</fo:inline></fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">order</fo:inline> defines if the deny or allow control is to
              be performed first.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the order is set to <fo:inline font-family="monospace">allow deny</fo:inline>, the users
              network address is first controlled to be in the allow subset. 
	      If the user network address is not in the allowed subset, the user
              is denied to get the asset. If the network address is in the
              allowed subset, a second control is performed. That is,
              the user network address is not in the subset of network
              addresses to be denied as specified by parameter <fo:inline font-family="monospace">deny</fo:inline>.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the order is set to <fo:inline font-family="monospace">deny allow</fo:inline>, only users from networks
              specified to be in the allowed subset succeeds to request  
              assets in the limited area.</fo:block>
          </fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"require"</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"> 
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Syntax:</fo:inline> <fo:inline font-family="monospace">require</fo:inline>
              <fo:inline font-family="monospace">group group1 group2... | user user1 user2...</fo:inline></fo:block>
	      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Default:</fo:inline> <fo:inline font-family="monospace">none</fo:inline></fo:block>
	      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Context:</fo:inline> Limit</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information, see directive <fo:inline font-family="monospace">require</fo:inline>  in
	    <fo:inline font-style="italic">mod_auth(3)</fo:inline>.</fo:block>
          </fo:block></fo:block-container>
        </fo:block>
      
    <fo:block id="idp590176" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.4 
      Dynamic Web Pages</fo:block>
      
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Inets</fo:inline> HTTP server provides two ways of creating dynamic web
        pages, each with its own advantages and disadvantages:</fo:block>
	<fo:block space-after="0.25em" space-before="0.25em">
       <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">CGI scripts</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Common Gateway Interface (CGI) scripts can be written 
       in any programming language. CGI scripts are standardized and 
       supported by most web servers. The drawback with CGI scripts is that 
       they are resource-intensive because of their design. CGI requires the 
       server to fork a new OS process for each executable it needs to start.
       </fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">ESI-functions</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Erlang Server Interface (ESI) functions provide a tight and efficient
        interface to the execution of Erlang functions. This interface,
        on the other hand, is <fo:inline font-family="monospace">Inets</fo:inline> specific.</fo:block></fo:block></fo:block-container>
     </fo:block>
      
      <fo:block id="idp572608" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">CGI Version 1.1, RFC 3875</fo:block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The module <fo:inline font-family="monospace">mod_cgi</fo:inline> enables execution of 
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">CGI scripts</fo:basic-link></fo:inline>
          on the server. A file matching the definition of a
          ScriptAlias config directive is treated as a CGI script. A CGI
          script is executed by the server and its output is returned to
          the client.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The CGI script response comprises a message header and a
          message body, separated by a blank line. The message header
          contains one or more header fields. The body can be
          empty.</fo:block>
	 <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
      
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">"Content-Type:text/plain\nAccept-Ranges:none\n\nsome very
	plain text"</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The server interprets the message headers and most of them
          are transformed into HTTP headers and sent back to the
          client together with the message-body.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Support for CGI-1.1 is implemented in accordance with 
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 3875</fo:basic-link></fo:inline>.</fo:block>
      

      <fo:block id="idp566368" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">ESI</fo:block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Erlang server interface is implemented by
          module <fo:inline font-family="monospace">mod_esi</fo:inline>.</fo:block>

        <fo:block id="idp565568" font-family="DejaVuSans, sans-serif" font-size="1em" font-weight="bold" keep-with-next.within-page="always" space-after="0.2em" space-before="0.4em">ERL Scheme</fo:block>
          
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The erl scheme is designed to mimic plain CGI, but without
            the extra overhead. An URL that calls an Erlang <fo:inline font-family="monospace">erl</fo:inline> function
            has the following syntax (regular expression): </fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
http://your.server.org/***/Module[:/]Function(?QueryString|/PathInfo)</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">*** depends on how the ErlScriptAlias config
            directive has been used.</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The module <fo:inline font-family="monospace">Module</fo:inline> referred to must be found in the code
            path, and it must define a function <fo:inline font-family="monospace">Function</fo:inline> with an arity
            of two or three. It is preferable to implement a function
            with arity three, as it permits to send chunks of the
            web page to the client during the generation
            phase instead of first generating the whole web page and
            then sending it to the client. The option to implement a
            function with arity two is only kept for
            backwards compatibility reasons.
            For implementation details of the ESI callback function, 
	    see <fo:inline font-style="italic">mod_esi(3)</fo:inline>.</fo:block>
        

        <fo:block id="idp560896" font-family="DejaVuSans, sans-serif" font-size="1em" font-weight="bold" keep-with-next.within-page="always" space-after="0.2em" space-before="0.4em">EVAL Scheme</fo:block>
          
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The eval scheme is straight-forward and does not mimic the
            behavior of plain CGI. An URL that calls an Erlang <fo:inline font-family="monospace">eval</fo:inline>
            function has the following syntax:</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
http://your.server.org/***/Mod:Func(Arg1,...,ArgN)</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">*** depends on how the ErlScriptAlias config
            directive has been used.</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The module <fo:inline font-family="monospace">Mod</fo:inline> referred to must be found in the code
            path and data returned by the function <fo:inline font-family="monospace">Func</fo:inline> is passed
            back to the client. Data returned from the
            function must take the form as specified in
            the CGI specification. For implementation details of the ESI 
	    callback function, 
	    see <fo:inline font-style="italic">mod_esi(3)</fo:inline>.</fo:block>
          <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The eval scheme can seriously threaten the
              integrity of the Erlang node housing a web server, for
              example:</fo:block>
            <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
http://your.server.org/eval?httpd_example:print(atom_to_list(apply(erlang,halt,[])))</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This effectively closes down the Erlang node.
              Therefore, use the erl scheme instead, until this
              security breach is fixed.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Today there are no good ways of solving this problem
              and therefore the eval scheme can be removed in future
              release of <fo:inline font-family="monospace">Inets</fo:inline>.</fo:block>
          </fo:block>
        
      
    <fo:block id="idp551184" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.5 
      Logging</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Three types of logs are supported: transfer logs,
      security logs, and error logs. The de-facto standard Common
        Logfile Format is used for the transfer and security logging.
      There are numerous statistics programs available to analyze Common
      Logfile Format. The Common Logfile Format looks as follows:
        </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">remotehost rfc931 authuser [date] "request" status bytes</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Here:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">remotehost</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Remote hostname.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">rfc931</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em">The client remote username (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 931</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">authuser</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The username used for authentication.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">[date]</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em">Date and time of the request (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1123</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">"request"</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em">The request line exactly as it came from the client (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
        <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">status</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em">The HTTP status code returned to the client  (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
        <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">bytes</fo:inline></fo:block>
        <fo:block-container><fo:block start-indent="2em">The content-length of the document transferred. </fo:block></fo:block-container>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Internal server errors are recorded in the error log file. The
        format of this file is a more unplanned format than the logs using
      Common Logfile Format, but conforms to the following syntax:
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">[date]</fo:inline> access to <fo:inline font-weight="bold">path</fo:inline> failed for
        <fo:inline font-weight="bold">remotehost</fo:inline>, reason: <fo:inline font-weight="bold">reason</fo:inline></fo:block>
  <fo:block id="idp117376" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.6 
      Erlang Web Server API</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The process of handling an HTTP request involves several steps,
        such as:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Setting up connections, sending and receiving data.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>URI to filename translation.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Authentication/access checks.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Retrieving/generating the response.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Logging.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To provide customization and extensibility of the request 
         handling of the HTTP servers, most of these steps are handled by 
	 one or more modules. These modules can be replaced or removed at 
	 runtime and new ones can be added. For each request, all modules are
         traversed in the order specified by the module directive in the
         server configuration file. Some parts, mainly the communication-
         related steps, are considered server core functionality and are
         not implemented using the Erlang web server API. A description of
         functionality implemented by the Erlang webserver API is described
         in <fo:inline font-style="italic">Section 
	 Inets Web Server Modules</fo:inline>.</fo:block>

      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A module can use data generated by previous modules in the
        Erlang webserver API module sequence or generate data to be used
        by consecutive Erlang Web Server API modules. This is
        possible owing to an internal list of key-value tuples, referred to
        as interaction data.</fo:block>
      <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Interaction data enforces module dependencies and
          is to be avoided if possible. This means that the order
          of modules in the modules property is significant.</fo:block>
      </fo:block>

      <fo:block id="idp274304" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">API Description</fo:block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Each module that implements server functionality
          using the Erlang web server API is to implement the following
          call back functions:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">do/1</fo:inline> (mandatory) - the function called when
           a request is to be handled</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">load/2</fo:inline></fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">store/2</fo:inline></fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">remove/1</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The latter functions are needed only when new config
          directives are to be introduced. For details, see
          <fo:inline font-style="italic">httpd(3)</fo:inline>.</fo:block>
      
    <fo:block id="idp346576" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.7 
      Inets Web Server Modules</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The convention is that
      all modules implementing some web server functionality has the
      name <fo:inline font-family="monospace">mod_*</fo:inline>. When configuring the web server, an appropriate
      selection of these modules is to be present in the module
      directive. Notice that there are some interaction dependencies
      to take into account, so the order of the modules cannot be
      random.</fo:block>

    <fo:block id="idp469424" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_action - Filetype/Method-Based Script Execution</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module runs CGI scripts whenever a file of a
	certain type or HTTP method (see 
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>)
	is requested.
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang Web Server API interaction data, if possible:
      </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{new_request_uri, RequestURI}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em">An alternative <fo:inline font-family="monospace">RequestURI</fo:inline> has been generated.</fo:block></fo:block-container>
      </fo:block>
    

    <fo:block id="idp550720" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_alias - URL Aliasing</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-style="italic">mod_alias</fo:inline>
      module makes it possible to map different parts of the
	host file system into the document tree, that is, creates aliases and
	redirections.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang Web Server API interaction data, if possible:
      </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{real_name, PathData}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:inline font-family="monospace">PathData</fo:inline> is the argument used for API function 
	<fo:inline font-style="italic">mod_alias:path/3</fo:inline>.</fo:block></fo:block-container>
      </fo:block>
    
    
    <fo:block id="idp282224" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_auth - User Authentication</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-style="italic">mod_auth(3)</fo:inline> 
	module provides for basic user authentication using
	textual files, Dets databases as well as Mnesia databases.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{remote_user, User}</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">The username used for authentication.</fo:block></fo:block-container>
      </fo:block>
      
      
      <fo:block id="idp493376" font-family="DejaVuSans, sans-serif" font-size="1em" font-weight="bold" keep-with-next.within-page="always" space-after="0.2em" space-before="0.4em">Mnesia As Authentication Database</fo:block>
	
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If Mnesia is used as storage method, Mnesia must be
	  started before the HTTP server. The first time Mnesia is
	  started, the schema and the tables must be created before
	  Mnesia is started. A simple example of a module with two
	  functions that creates and start Mnesia is provided
	  here. Function <fo:inline font-family="monospace">first_start/0</fo:inline> is to be used the first
	  time. It creates the schema and the tables.
	  <fo:inline font-family="monospace">start/0</fo:inline> is to be used in consecutive startups. 
	  <fo:inline font-family="monospace">start/0</fo:inline> starts Mnesia and waits for the tables to
	  be initiated. This function must only be used when the
	  schema and the tables are already created.</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-module(mnesia_test).
-export([start/0,load_data/0]).
-include_lib("mod_auth.hrl").

first_start() -&gt;
    mnesia:create_schema([node()]),
    mnesia:start(),
    mnesia:create_table(httpd_user,
                        [{type, bag},
                         {disc_copies, [node()]},
                         {attributes, record_info(fields, 
                                                  httpd_user)}]),
    mnesia:create_table(httpd_group,
                        [{type, bag},
                         {disc_copies, [node()]},          
                         {attributes, record_info(fields, 
                                                  httpd_group)}]),
    mnesia:wait_for_tables([httpd_user, httpd_group], 60000).

start() -&gt;
    mnesia:start(),
    mnesia:wait_for_tables([httpd_user, httpd_group], 60000).  </fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To create the Mnesia tables, we use two records defined in
	  <fo:inline font-family="monospace">mod_auth.hrl</fo:inline>, so that file must be included. <fo:inline font-family="monospace">first_start/0</fo:inline> 
	  creates a schema that specifies on which nodes the database is to reside. 
	  Then it starts Mnesia and creates the tables. The first argument
	  is the name of the tables, the second argument is a list of options of 
	  how to create the table, see 
	  <fo:inline font-style="italic"><fo:inline font-family="monospace">mnesia(3)</fo:inline></fo:inline>, documentation for
	  more information. As the implementation of the <fo:inline font-family="monospace">mod_auth_mnesia</fo:inline> 
	  saves one row for each user, the type must be <fo:inline font-family="monospace">bag</fo:inline>.
	  When the schema and the tables are created, function
	  <fo:inline font-style="italic">mnesia:start/0</fo:inline>
	  is used to start Mnesia  and
	  waits for the tables to be loaded. Mnesia uses the
	  directory specified as <fo:inline font-family="monospace">mnesia_dir</fo:inline> at startup if specified,
	  otherwise Mnesia uses the current directory. For security
	  reasons, ensure that the Mnesia tables are stored outside
	  the document tree of the HTTP server. If they are placed in the
	  directory which it protects, clients can download the tables. 
	  Only the Dets and Mnesia storage
	  methods allow writing of dynamic user data to disk. <fo:inline font-family="monospace">plain</fo:inline> is
	  a read only method.</fo:block>
      

    
    
    <fo:block id="idp26768" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_cgi - CGI Scripts</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module handles invoking of CGI scripts.</fo:block>
    
    
    <fo:block id="idm18848" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_dir - Directories</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module generates an HTML directory listing
	(Apache-style) if a client sends a request for a directory
	instead of a file. This module must be removed from the
	Modules config directive if directory listings is unwanted.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{mime_type, MimeType}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em">The file suffix of the incoming URL mapped into a
          <fo:inline font-family="monospace">MimeType</fo:inline>.</fo:block></fo:block-container>
        </fo:block>
      

    <fo:block id="idp541920" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_disk_log - Logging Using Disk_Log.</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Standard logging using the "Common Logfile Format" and
	<fo:inline font-style="italic">disk_log(3)</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">remote_user</fo:inline> - from <fo:inline font-family="monospace">mod_auth</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    

    <fo:block id="idp285984" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_esi - Erlang Server Interface</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-style="italic">mod_esi(3)</fo:inline>
      module implements the Erlang Server Interface (ESI) providing a 
      tight and efficient interface to the execution of Erlang functions.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang web server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">remote_user</fo:inline> - from <fo:inline font-family="monospace">mod_auth</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang web server API interaction data:
          </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{mime_type, MimeType}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em">The file suffix of the incoming URL mapped into a
          <fo:inline font-family="monospace">MimeType</fo:inline></fo:block></fo:block-container>
        </fo:block>
      
    
      <fo:block id="idp285264" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_get - Regular GET Requests</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module is responsible for handling GET requests to regular 
	files. GET requests for parts of files is handled by <fo:inline font-family="monospace">mod_range</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang web server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      
    
    <fo:block id="idp693312" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_head - Regular HEAD Requests</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module is responsible for handling HEAD requests to regular 
	files. HEAD requests for dynamic content is handled by each module 
	responsible for dynamic content.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
    
    
    <fo:block id="idp696992" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_htaccess - User Configurable Access</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides per-directory user configurable access
          control.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{remote_user_name, User}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em">The username used for authentication.</fo:block></fo:block-container>
        </fo:block>
    
    
    <fo:block id="idp702304" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_log - Logging Using Text Files.</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Standard logging using the "Common Logfile Format" and text
	files.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">remote_user</fo:inline> - from <fo:inline font-family="monospace">mod_auth</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
    
    
      <fo:block id="idp625056" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_range - Requests with Range Headers</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module responses to requests for one or many ranges of a
	file. This is especially useful when downloading large files,
	as a broken download can be resumed.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Notice that request for multiple parts of a document report a
	size of zero to the log file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    

    <fo:block id="idp629136" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_response_control - Requests with If* Headers</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module controls that the conditions in the requests are
	fulfilled. For example, a request can specify that the answer
	only is of interest if the content is unchanged since the last
	retrieval. If the content is changed, the range request is to
	be converted to a request for the whole file instead.</fo:block> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a client sends more than one of the header fields that 
	restricts the servers right to respond, the standard does not 
	specify how this is to be handled.
	<fo:inline font-style="italic">httpd(3)</fo:inline> controls each 
	field in the following order and if one of the fields does not 
	match the current state, the request is rejected with a proper 
	response:</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">If-modified</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">If-Unmodified</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">If-Match</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">If-Nomatch</fo:inline></fo:block>
	
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Uses the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">real_name</fo:inline> - from  <fo:inline font-style="italic">mod_alias</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exports the following Erlang Web Server API interaction data:
      </fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{if_range, send_file}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em">The conditions for the range request are not fulfilled.
	  The response must not be treated as a range request, instead it
	  must be treated as an ordinary get request.</fo:block></fo:block-container>
        </fo:block>
    
    
    <fo:block id="idp638640" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_security - Security Filter</fo:block>
      
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-style="italic">mod_security</fo:inline> 
	module serves as a filter for authenticated requests
	handled in <fo:inline font-style="italic">mod_auth(3)</fo:inline>. 
	It provides a possibility to restrict users from 
	access for a specified amount of time if they fail to
	authenticate several times. It logs failed authentication as
	well as blocking of users, and it calls a configurable
	callback module when the events occur.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There is also an
	API to block or unblock users manually. This API can also list 
	blocked users or users who have been authenticated within a 
	configurable amount of time.</fo:block>
    
    
    <fo:block id="idp642000" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">mod_trace - TRACE Request</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">mod_trace</fo:inline> is responsible for handling of TRACE requests.
	Trace is a new request method in HTTP/1.1. The intended use of
	trace requests is for testing. The body of the trace response is
	the request message that the responding web server or proxy
	received.</fo:block>
    
  <fo:block id="idp98496" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">2   
      Reference Manual</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Inets</fo:inline> is a container for Internet clients and
    servers. An FTP client, an HTTP client and server, and
    a TFTP client and server are incorporated in <fo:inline font-family="monospace">Inets</fo:inline>.</fo:block>
  <fo:block page-break-before="always" id="idp1960496" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">inets</fo:marker>inets</fo:block>Erlang module</fo:block>
  <fo:block/>
  inets
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides the most basic API to the 
    clients and servers that are part of the <fo:inline font-family="monospace">Inets</fo:inline> application,
    such as start and stop.</fo:block>

    
  

  <fo:block id="idp292112" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type definitions that are used more than once in
      this module:</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">service() = ftpc | tftp | httpc | httpd</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">property() = atom()</fo:inline></fo:block>
    
    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp288224">services() -&gt; [{Service, Pid}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Service = service()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of currently running services.</fo:block>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Services started as <fo:inline font-family="monospace">stand_alone</fo:inline> are not listed.</fo:block>
        </fo:block>

	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1625504">services_info() -&gt; [{Service, Pid, Info}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Service = service()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Info = [{Option, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of currently running services where each
	service is described by an <fo:inline font-family="monospace">[{Option, Value}]</fo:inline> list. The
	information in the list is specific for each service
	and each service has probably its own info
	function that gives more details about the service.</fo:block>

	
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp890368">service_names() -&gt; [Service] </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Service = service()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of available service names.</fo:block>

	
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1059088">start() -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1058336">start(Type) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = permanent | transient | temporary</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts the <fo:inline font-family="monospace">Inets</fo:inline> application. Default type
	is <fo:inline font-family="monospace">temporary</fo:inline>. See also
	<fo:inline font-style="italic">application(3)</fo:inline>.</fo:block>

	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1064512">start(Service, ServiceConfig) -&gt; {ok, Pid} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2068480">start(Service, ServiceConfig, How) -&gt; {ok, Pid} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Service = service()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ServiceConfig = [{Option, Value}]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">How = inets | stand_alone - default is inets.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Dynamically starts an <fo:inline font-family="monospace">Inets</fo:inline> service after the <fo:inline font-family="monospace">Inets</fo:inline>
          application has been started.</fo:block>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Dynamically started services are not handled by
            application takeover and failover behavior when <fo:inline font-family="monospace">Inets</fo:inline> is
            run as a distributed application. Nor are they
            automatically restarted when the <fo:inline font-family="monospace">Inets</fo:inline> application is
            restarted. As long as the <fo:inline font-family="monospace">Inets</fo:inline> application is operational,
	    they are supervised and can be soft code upgraded.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A service started as <fo:inline font-family="monospace">stand_alone</fo:inline>, that is, the service 
	    is not started as part of the <fo:inline font-family="monospace">Inets</fo:inline> application, 
	    lose all OTP application benefits, such as soft upgrade. 
	    The <fo:inline font-family="monospace">stand_alone</fo:inline>-service is linked to
            the process that started it. Usually some
            supervision functionality is still in place and in
            some sense the calling process becomes the top
            supervisor.</fo:block>
        </fo:block>
	
	
      </fo:block>

     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1612112">stop() -&gt; ok </fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops the <fo:inline font-family="monospace">Inets</fo:inline> application. See also
	<fo:inline font-style="italic">application(3)</fo:inline>.</fo:block>
	
	
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp960352">stop(Service, Reference) -&gt; ok | {error, Reason} </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Service = service() | stand_alone</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reference = pid() | term() - service-specified reference</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops a started service of the <fo:inline font-family="monospace">Inets</fo:inline> application or takes
	down a <fo:inline font-family="monospace">stand_alone</fo:inline>-service gracefully. When option
	<fo:inline font-family="monospace">stand_alone</fo:inline> is used in start,
	only the pid is a valid argument to stop.</fo:block>
	
	
      </fo:block>
  

  <fo:block id="idp1895552" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">ftp(3)</fo:inline>,
      <fo:inline font-style="italic">httpc(3)</fo:inline>,
      <fo:inline font-style="italic">httpd(3)</fo:inline>,
      <fo:inline font-style="italic">tftp(3)</fo:inline></fo:block>
  
  
<fo:block page-break-before="always" id="idp1897184" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">ftp</fo:marker>ftp</fo:block>Erlang module</fo:block>
  <fo:block/>
  ftp
  <fo:block/>

  

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module implements a client for file transfer
      according to a subset of the File Transfer Protocol (FTP), see
    <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 959</fo:basic-link></fo:inline>.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">As from <fo:inline font-family="monospace">Inets</fo:inline> 4.4.1, the FTP
      client always tries to use passive FTP mode and only resort
      to active FTP mode if this fails. This default behavior can be 
      changed by start option <fo:inline font-style="italic">mode</fo:inline>.</fo:block>

    

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An FTP client can be started in two ways. One is using the 
      <fo:inline font-style="italic">Inets service framework</fo:inline>,
      the other is to start it directly as a standalone process 
      using function <fo:inline font-style="italic">open</fo:inline>.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For a simple example of an FTP session, see 
      <fo:inline font-style="italic">Inets User's Guide</fo:inline>.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In addition to the ordinary functions for receiving and sending
      files (see <fo:inline font-family="monospace">recv/2</fo:inline>, <fo:inline font-family="monospace">recv/3</fo:inline>, <fo:inline font-family="monospace">send/2</fo:inline>, and
      <fo:inline font-family="monospace">send/3</fo:inline>) there are functions for receiving remote files as
      binaries (see <fo:inline font-family="monospace">recv_bin/2</fo:inline>) and for sending binaries to be
      stored as remote files (see <fo:inline font-family="monospace">send_bin/3</fo:inline>).</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A set of functions is provvided for sending and receiving
      contiguous parts of a file to be stored in a remote file. For send,
      see <fo:inline font-family="monospace">send_chunk_start/2</fo:inline>, <fo:inline font-family="monospace">send_chunk/2</fo:inline>, and
      <fo:inline font-family="monospace">send_chunk_end/1</fo:inline>. For receive, see
      <fo:inline font-family="monospace">recv_chunk_start/2</fo:inline> and <fo:inline font-family="monospace">recv_chunk/</fo:inline>).</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The return values of the following functions depend
      much on the implementation of the FTP server at the remote
      host. In particular, the results from <fo:inline font-family="monospace">ls</fo:inline> and <fo:inline font-family="monospace">nlist</fo:inline>
      varies. Often real errors are not reported as errors by <fo:inline font-family="monospace">ls</fo:inline>,
      even if, for example, a file or directory does not
      exist. <fo:inline font-family="monospace">nlist</fo:inline> is usually more strict, but some
      implementations have the peculiar behaviour of responding with an
      error if the request is a listing of the contents of a directory
      that exists but is empty.</fo:block>

    
  

  <fo:block id="idp1619936" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">FTP CLIENT SERVICE START/STOP</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The FTP client can be started and stopped dynamically in runtime by
      calling the <fo:inline font-family="monospace">Inets</fo:inline> application API 
      <fo:inline font-family="monospace">inets:start(ftpc, ServiceConfig)</fo:inline>,
      or <fo:inline font-family="monospace">inets:start(ftpc, ServiceConfig, How)</fo:inline>, and
      <fo:inline font-family="monospace">inets:stop(ftpc, Pid)</fo:inline>. 
      For details, see <fo:inline font-style="italic">inets(3)</fo:inline>.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The available configuration options are as follows:</fo:block>
    
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{host, Host}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Host = <fo:inline font-family="monospace">string() | ip_address()</fo:inline></fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{port, Port}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Port = <fo:inline font-family="monospace">integer() &gt; 0</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">21</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{mode, Mode}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Mode = <fo:inline font-family="monospace">active | passive</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">passive</fo:inline>.</fo:block> 
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{verbose, Verbose}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Verbose = <fo:inline font-family="monospace">boolean()</fo:inline> </fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Determines if the FTP communication is to be
	  verbose or not.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{debug, Debug}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Debug = <fo:inline font-family="monospace">trace | debug | disable</fo:inline> </fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Debugging using the dbg toolkit. </fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">disable</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{ipfamily, IpFamily}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">IpFamily = <fo:inline font-family="monospace">inet | inet6 | inet6fb4</fo:inline> </fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">With <fo:inline font-family="monospace">inet6fb4</fo:inline> the client behaves as before, that is, 
	  tries to use IPv6, and only if that does not work it
          uses IPv4).</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">inet</fo:inline> (IPv4).</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{timeout, Timeout}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Timeout = <fo:inline font-family="monospace">non_neg_integer()</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Connection time-out.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">60000</fo:inline> (milliseconds).</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{dtimeout, DTimeout}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">DTimeout = <fo:inline font-family="monospace">non_neg_integer() | infinity</fo:inline> </fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Data connect time-out. 
	The time the client waits for the server to connect to the 
	data socket.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">infinity</fo:inline>. </fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{progress, Progress}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Progress = <fo:inline font-family="monospace">ignore | {CBModule, CBFunction, InitProgress}</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">CBModule = atom()</fo:inline>, <fo:inline font-family="monospace">CBFunction = atom()</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">InitProgress = term()</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">ignore</fo:inline>.</fo:block>
      </fo:block></fo:block-container>  

    </fo:block>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option <fo:inline font-family="monospace">progress</fo:inline> is intended to be used by applications that
      want to create some type of progress report, such as a progress bar in
      a GUI. Default for the progress option is <fo:inline font-family="monospace">ignore</fo:inline>,
      that is, the option is not used. When the progress option is
      specified, the following happens when <fo:inline font-family="monospace">ftp:send/[3,4]</fo:inline> or
      <fo:inline font-family="monospace">ftp:recv/[3,4]</fo:inline> are called:</fo:block>
    
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Before a file is transferred, the following call is
	  made to indicate the start of the file transfer and how large
	  the file is. The return value of the callback function
	  is to be a new value for the <fo:inline font-family="monospace">UserProgressTerm</fo:inline> that will
	  be used as input the next time the callback function is
	  called.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	  CBModule:CBFunction(InitProgress, File, {file_size, FileSize})
	</fo:inline></fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Every time a chunk of bytes is transferred the
	  following call is made:</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	    CBModule:CBFunction(UserProgressTerm, File, {transfer_size, TransferSize})
        </fo:inline></fo:block>
      </fo:block></fo:list-item-body></fo:list-item>

      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">At the end of the file the following call is
	  made to indicate the end of the transfer:</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	    CBModule:CBFunction(UserProgressTerm, File, {transfer_size, 0})      
	</fo:inline></fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The callback function is to be defined as follows:</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	CBModule:CBFunction(UserProgressTerm, File, Size) -&gt; UserProgressTerm
    </fo:inline></fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	CBModule = CBFunction = atom()
      </fo:inline></fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	UserProgressTerm = term()
      </fo:inline></fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	File = string()
      </fo:inline></fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">
	Size = {transfer_size, integer()} | {file_size, integer()} | {file_size, unknown}
    </fo:inline></fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For remote files, <fo:inline font-family="monospace">ftp</fo:inline> cannot determine the
      file size in a platform independent way. In this case the size
      becomes <fo:inline font-family="monospace">unknown</fo:inline> and it is left to the application to
      determine the size.</fo:block>
    
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The callback is made by a middleman process, hence the
	file transfer is not affected by the code in the progress
	callback function. If the callback crashes, this is
	detected by the FTP connection process, which then prints an
	info-report and goes on as if the progress option was set
	to <fo:inline font-family="monospace">ignore</fo:inline>.</fo:block>
    </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The file transfer type is set to the default of the FTP server
      when the session is opened. This is usually ASCCI mode.
    </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The current local working directory (compare <fo:inline font-family="monospace">lpwd/1</fo:inline>) is set 
      to the value reported by <fo:inline font-family="monospace">file:get_cwd/1</fo:inline>, the wanted
      local directory.
    </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The return value <fo:inline font-family="monospace">Pid</fo:inline> is used as a reference to the
      newly created FTP client in all other functions, and they are to
      be called by the process that created the connection. The FTP
      client process monitors the process that created it and
      terminates if that process terminates.</fo:block>   
  
  
  <fo:block id="idp2594528" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following type definitions are used by more than one
      function in the FTP client API:</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">pid()</fo:inline> = identifier of an FTP connection</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline> = list of ASCII characters</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">shortage_reason()</fo:inline> = <fo:inline font-family="monospace">etnospc | epnospc</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">restriction_reason()</fo:inline> = <fo:inline font-family="monospace">epath | efnamena | elogin | enotbinary</fo:inline>
      -  all restrictions are not always relevant to all functions
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">common_reason()</fo:inline> = <fo:inline font-family="monospace">econn | eclosed | term()</fo:inline> 
      - some explanation of what went wrong</fo:block>

    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2600800">account(Pid, Account) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Account = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = eacct | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the account for an operation, if needed.</fo:block>

       
       
       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2606608">append(Pid, LocalFile) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2607072">append(Pid, LocalFile, RemoteFile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">LocalFile = RemoteFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = epath | elogin | etnospc | epnospc | efnamena | common_reason</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the file <fo:inline font-family="monospace">LocalFile</fo:inline> to the remote server. If 
          <fo:inline font-family="monospace">RemoteFile</fo:inline> is specified, the name of the remote file that the
          file is appended to is set to <fo:inline font-family="monospace">RemoteFile</fo:inline>, otherwise 
          to <fo:inline font-family="monospace">LocalFile</fo:inline>. If the file does not exists,
          it is created.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2614048">append_bin(Pid, Bin, RemoteFile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason()| shortage_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the binary <fo:inline font-family="monospace">Bin</fo:inline> to the remote server and appends 
          it to the file <fo:inline font-family="monospace">RemoteFile</fo:inline>. If the file does not exist, it 
          is created.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2620176">append_chunk(Pid, Bin) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = echunk | restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the chunk <fo:inline font-family="monospace">Bin</fo:inline> to the remote server, which 
          appends it to the file specified in the call to 
          <fo:inline font-family="monospace">append_chunk_start/2</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For some errors, for example, file system full, it is 
          necessary to call <fo:inline font-family="monospace">append_chunk_end</fo:inline> to get the 
          proper reason.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2626816">append_chunk_start(Pid, File) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">File = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts the transfer of chunks for appending to the file 
          <fo:inline font-family="monospace">File</fo:inline> at the remote server. If the file does not exist, 
          it is created.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2632512">append_chunk_end(Pid) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = echunk | restriction_reason() | shortage_reason() </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops transfer of chunks for appending to the remote server. 
          The file at the remote server, specified in the call to 
          <fo:inline font-family="monospace">append_chunk_start/2</fo:inline>, is closed by the server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2637344">cd(Pid, Dir) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason() </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Changes the working directory at the remote server to 
          <fo:inline font-family="monospace">Dir</fo:inline>.</fo:block>

       
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2642496">close(Pid) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Ends an FTP session, created using function
          <fo:inline font-style="italic">open</fo:inline>.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2646944">delete(Pid, File) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">File = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Deletes the file <fo:inline font-family="monospace">File</fo:inline> at the remote server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2652064">formaterror(Tag) -&gt; string()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Tag = {error, atom()} | atom()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Given an error return value <fo:inline font-family="monospace">{error, AtomReason}</fo:inline>,
          this function returns a readable string describing the error.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2656336">lcd(Pid, Dir) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Changes the working directory to <fo:inline font-family="monospace">Dir</fo:inline> for the local client.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2661440">lpwd(Pid) -&gt; {ok, Dir}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the current working directory at the local client.</fo:block>

       
       
       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2666320">ls(Pid) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2666768">ls(Pid, Pathname) -&gt; {ok, Listing} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pathname = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Listing = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of files in long format.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Pathname</fo:inline> can be a directory, a group of files, or 
           a file. The <fo:inline font-family="monospace">Pathname</fo:inline> string can contain wildcards.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">ls/1</fo:inline> implies the current remote directory of the user.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The format of <fo:inline font-family="monospace">Listing</fo:inline> depends on the operating system. 
          On UNIX, it is typically produced from the output of the 
          <fo:inline font-family="monospace">ls -l</fo:inline> shell command.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2675344">mkdir(Pid, Dir) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates the directory <fo:inline font-family="monospace">Dir</fo:inline> at the remote server.</fo:block>

       
       
       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2681568">nlist(Pid) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2682016">nlist(Pid, Pathname) -&gt; {ok, Listing} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pathname = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Listing = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of files in short format.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Pathname</fo:inline> can be a directory, a group of files, or 
           a file. The <fo:inline font-family="monospace">Pathname</fo:inline> string can contain wildcards.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">nlist/1</fo:inline> implies the current remote directory of the user.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The format of <fo:inline font-family="monospace">Listing</fo:inline> is a stream of
          filenames where each filename is separated by &lt;CRLF&gt; or
          &lt;NL&gt;. Contrary to function <fo:inline font-family="monospace">ls</fo:inline>, the purpose of
          <fo:inline font-family="monospace">nlist</fo:inline> is to enable a program to
          process filename information automatically.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2691136">open(Host) -&gt; {ok, Pid} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2691616">open(Host, Opts) -&gt; {ok, Pid} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Host = string() | ip_address()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opts = options()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">options() = [option()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">option() = start_option() | open_option()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">start_option() = {verbose, verbose()} | {debug, debug()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">verbose() = boolean() (default is false)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">debug() = disable | debug | trace (default is disable)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">open_option() = {ipfamily, ipfamily()} | {port, port()} | {mode, mode()} | {tls, tls_options()} | {timeout, timeout()} | {dtimeout, dtimeout()} | {progress, progress()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ipfamily() = inet | inet6 | inet6fb4 (default is inet)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">port() = integer() &gt; 0 (default is 21)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">mode() = active | passive (default is passive)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">tls_options() = [<fo:inline font-style="italic">ssl:ssloption()</fo:inline>]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">timeout() = integer() &gt; 0 (default is 60000 milliseconds)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">dtimeout() = integer() &gt; 0 | infinity (default is infinity)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">pogress() = ignore | {module(), function(), initial_data()} (default is ignore)</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">module() = atom()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">function() = atom()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">initial_data() = term()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = ehost | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts a standalone FTP client process 
          (without the <fo:inline font-family="monospace">Inets</fo:inline> service framework) and 
          opens a session with the FTP server at <fo:inline font-family="monospace">Host</fo:inline>. </fo:block>

	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If option <fo:inline font-family="monospace">{tls, tls_options()}</fo:inline> is present, the FTP session 
	is transported over <fo:inline font-family="monospace">tls</fo:inline> (<fo:inline font-family="monospace">ftps</fo:inline>, see 
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 4217</fo:basic-link></fo:inline>). 
	The list <fo:inline font-family="monospace">tls_options()</fo:inline> can be empty. The function 
	<fo:inline font-style="italic"><fo:inline font-family="monospace">ssl:connect/3</fo:inline></fo:inline> 
	is used for securing both the control connection and the data sessions.
	</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A session opened in this way is closed using function
          <fo:inline font-style="italic">close</fo:inline>.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2710864">pwd(Pid) -&gt; {ok, Dir} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the current working directory at the remote server.</fo:block>

       
       
       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2716256">recv(Pid, RemoteFile) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2716720">recv(Pid, RemoteFile, LocalFile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFile = LocalFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason() | file_write_error_reason() </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">file_write_error_reason() = see file:write/2</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the file <fo:inline font-family="monospace">RemoteFile</fo:inline> from the remote server
          to the file system of the local client. If
          <fo:inline font-family="monospace">LocalFile</fo:inline> is specified, the local file will be
          <fo:inline font-family="monospace">LocalFile</fo:inline>, otherwise
          <fo:inline font-family="monospace">RemoteFile</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the file write fails (for example, <fo:inline font-family="monospace">enospc</fo:inline>), the command is 
	aborted and <fo:inline font-family="monospace">{error, file_write_error_reason()}</fo:inline> is returned. 
	However, the file is <fo:inline font-weight="bold">not</fo:inline> removed.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2725680">recv_bin(Pid, RemoteFile) -&gt; {ok, Bin} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the file <fo:inline font-family="monospace">RemoteFile</fo:inline> from the remote server and 
          receives it as a binary.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2731328">recv_chunk_start(Pid, RemoteFile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts transfer of the file <fo:inline font-family="monospace">RemoteFile</fo:inline> from the
          remote server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2736512">recv_chunk(Pid) -&gt; ok | {ok, Bin} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Receives a chunk of the remote file (<fo:inline font-family="monospace">RemoteFile</fo:inline> of 
          <fo:inline font-family="monospace">recv_chunk_start</fo:inline>). The return values have the following 
          meaning:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">ok</fo:inline> = the transfer is complete.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{ok, Bin}</fo:inline> = just another chunk of the file.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{error, Reason}</fo:inline> = transfer failed.</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2745104">rename(Pid, Old, New) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CurrFile = NewFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Renames <fo:inline font-family="monospace">Old</fo:inline> to <fo:inline font-family="monospace">New</fo:inline> at the remote server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2750688">rmdir(Pid, Dir) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Removes directory <fo:inline font-family="monospace">Dir</fo:inline> at the remote server.</fo:block>

       
       
       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2756912">send(Pid, LocalFile) -&gt;</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2757360">send(Pid, LocalFile, RemoteFile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">LocalFile = RemoteFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason() | shortage_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the file <fo:inline font-family="monospace">LocalFile</fo:inline> to the remote server. If 
          <fo:inline font-family="monospace">RemoteFile</fo:inline> is specified, the name of the remote file is set
          to <fo:inline font-family="monospace">RemoteFile</fo:inline>, otherwise to <fo:inline font-family="monospace">LocalFile</fo:inline>.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2763936">send_bin(Pid, Bin, RemoteFile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFile = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason() | shortage_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the binary <fo:inline font-family="monospace">Bin</fo:inline> into the file <fo:inline font-family="monospace">RemoteFile</fo:inline> 
          at the remote server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2769984">send_chunk(Pid, Bin) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = echunk | restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Transfers the chunk <fo:inline font-family="monospace">Bin</fo:inline> to the remote server, which 
          writes it into the file specified in the call to 
          <fo:inline font-family="monospace">send_chunk_start/2</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For some errors, for example, file system full, it is 
          necessary to to call <fo:inline font-family="monospace">send_chunk_end</fo:inline> to get the 
          proper reason.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2776624">send_chunk_start(Pid, File) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">File = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts transfer of chunks into the file <fo:inline font-family="monospace">File</fo:inline> at the 
          remote server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2781792">send_chunk_end(Pid) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = restriction_reason() | common_reason() | shortage_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops transfer of chunks to the remote server. The file at the
          remote server, specified in the call to <fo:inline font-family="monospace">send_chunk_start/2</fo:inline> 
          is closed by the server.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2786592">type(Pid, Type) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = ascii | binary</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = etype | restriction_reason() | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the file transfer type to <fo:inline font-family="monospace">ascii</fo:inline> or <fo:inline font-family="monospace">binary</fo:inline>. When
          an FTP session is opened, the default transfer type of the
          server is used, most often <fo:inline font-family="monospace">ascii</fo:inline>, which is default
          according to <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 959</fo:basic-link></fo:inline>.</fo:block>
       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2794352">user(Pid, User, Password) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">User = Password = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = euser | common_reason()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs login of <fo:inline font-family="monospace">User</fo:inline> with <fo:inline font-family="monospace">Password</fo:inline>.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2799904">user(Pid, User, Password, Account) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">User = Password = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = euser | common_reason() </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs login of <fo:inline font-family="monospace">User</fo:inline> with <fo:inline font-family="monospace">Password</fo:inline> to the account 
          specified by <fo:inline font-family="monospace">Account</fo:inline>.</fo:block>

       
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2805952">quote(Pid, Command) -&gt; [FTPLine]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Command = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FTPLine = string(</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block><fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The telnet end of line characters, from the FTP 
      protocol definition, CRLF, for example, "\\r\\n" has been removed.</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sends an arbitrary FTP command and returns verbatim a list
          of the lines sent back by the FTP server. This function is
          intended to give application accesses to FTP commands
          that are server-specific or that cannot be provided by
          this FTP client.</fo:block>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">FTP commands requiring a data connection cannot be
            successfully issued with this function.</fo:block>
        </fo:block>
      </fo:block>
  

  <fo:block id="idp2811952" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">ERRORS</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The possible error reasons and the corresponding diagnostic strings 
      returned by <fo:inline font-family="monospace">formaterror/1</fo:inline> are as follows:
      </fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">echunk</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Synchronization error during chunk sending according to one 
	of the following:
          </fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	  <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A call is made to <fo:inline font-family="monospace">send_chunk/2</fo:inline> or <fo:inline font-family="monospace">send_chunk_end/1</fo:inline>
	  before a call to <fo:inline font-family="monospace">send_chunk_start/2</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
	  <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A call has been made to another transfer function during chunk 
	  sending, that is, before a call to <fo:inline font-family="monospace">send_chunk_end/1</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
           </fo:list-block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">eclosed</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The session is closed.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">econn</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Connection to the remote server is prematurely closed.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">ehost</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Host is not found, FTP server is not found, or connection is rejected
          by FTP server.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">elogin</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">User is not logged in.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">enotbinary</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Term is not a binary.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">epath</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">No such file or directory, or directory already exists, or
          permission denied.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">etype</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">No such type.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">euser</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Invalid username or password.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">etnospc</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Insufficient storage space in system [452].</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">epnospc</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exceeded storage allocation (for current directory or
          dataset) [552].</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">efnamena</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Filename not allowed [553].</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
  

  <fo:block id="idp2835632" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">file(3)</fo:inline>
       <fo:inline font-style="italic">filename(3)</fo:inline>
       and J. Postel and J. Reynolds: File Transfer Protocol
      (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 959</fo:basic-link></fo:inline>).
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp2844720" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">tftp</fo:marker>tftp</fo:block>Erlang module</fo:block>
  <fo:block/>
  tftp
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This is a complete implementation of the following IETF standards:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>RFC 1350, The TFTP Protocol (revision 2)</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>RFC 2347, TFTP Option Extension</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>RFC 2348, TFTP Blocksize Option</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>RFC 2349, TFTP Timeout Interval and Transfer Size Options</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The only feature that not is implemented is
      the "netascii" transfer mode.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-style="italic">start/1</fo:inline> function starts
      a daemon process listening for UDP packets on a port. When it
      receives a request for read or write, it spawns a temporary server
      process handling the transfer.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">On the client side,
      function <fo:inline font-style="italic">read_file/3</fo:inline>
      and <fo:inline font-style="italic">write_file/3</fo:inline>
      spawn a temporary client process establishing
      contact with a TFTP daemon and perform the file transfer.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">tftp</fo:inline> uses a callback module to handle the file
      transfer. Two such callback modules are provided,
      <fo:inline font-family="monospace">tftp_binary</fo:inline> and <fo:inline font-family="monospace">tftp_file</fo:inline>. See
      <fo:inline font-style="italic">read_file/3</fo:inline> and
      <fo:inline font-style="italic">write_file/3</fo:inline> for details.
      You can also implement your own callback modules, see 
      <fo:inline font-style="italic">CALLBACK FUNCTIONS</fo:inline>. 
      A callback module provided by
      the user is registered using option <fo:inline font-family="monospace">callback</fo:inline>, see
      <fo:inline font-style="italic">DATA TYPES</fo:inline>.</fo:block>
  
  
 <fo:block id="idp2858512" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">TFTP SERVER SERVICE START/STOP</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A TFTP server can be configured to start statically when starting
      the <fo:inline font-family="monospace">Inets</fo:inline> application. Alternatively, it can be started dynamically
      (when <fo:inline font-family="monospace">Inets</fo:inline> is already started) by calling the <fo:inline font-family="monospace">Inets</fo:inline> application 
      API <fo:inline font-family="monospace">inets:start(tftpd, ServiceConfig)</fo:inline> or
      <fo:inline font-family="monospace">inets:start(tftpd, ServiceConfig, How)</fo:inline>,
      see <fo:inline font-style="italic">inets(3)</fo:inline> for details.
      The <fo:inline font-family="monospace">ServiceConfig</fo:inline> for TFTP is described in
      the <fo:inline font-style="italic">DATA TYPES</fo:inline>
      section.</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The TFTP server can be stopped using <fo:inline font-family="monospace">inets:stop(tftpd, Pid)</fo:inline>,
      see <fo:inline font-style="italic">inets(3)</fo:inline> for details.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The TPFT client is of such a temporary nature that it is not
      handled as a service in the <fo:inline font-family="monospace">Inets</fo:inline> service framework.</fo:block>
    
  
  
  <fo:block id="idp2867376" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">ServiceConfig = Options</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Options = [option()]</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Most of the options are common for both the client and the server
      side, but some of them differs a little. 
      The available <fo:inline font-family="monospace">option()</fo:inline>s are as follows:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{debug, Level}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Level = none | error | warning | brief | normal | verbose | all</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Controls the level of debug printouts. 
	Default is <fo:inline font-family="monospace">none</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{host, Host}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Host = hostname()</fo:inline>, see
          <fo:inline font-style="italic">inet(3)</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The name or IP address of the host where the TFTP daemon
          resides. This option is only used by the client.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{port, Port}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Port = int()</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The TFTP port where the daemon listens. Defaults is
          the standardized number 69. On the server side, it can
          sometimes make sense to set it to 0, meaning that
          the daemon just picks a free port (which one is
          returned by function <fo:inline font-family="monospace">info/1</fo:inline>).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a socket is connected already, option
          <fo:inline font-family="monospace">{udp, [{fd, integer()}]}</fo:inline> can be used to pass the
          open file descriptor to <fo:inline font-family="monospace">gen_udp</fo:inline>. This can be automated
          by using a command-line argument stating the
          prebound file descriptor number. For example, if the
          port is 69 and file descriptor 22 is opened by
          <fo:inline font-family="monospace">setuid_socket_wrap</fo:inline>, the command-line argument
          "-tftpd_69 22" triggers the prebound file
          descriptor 22 to be used instead of opening port 69.
          The UDP option <fo:inline font-family="monospace">{udp, [{fd, 22}]}</fo:inline> is automatically added.
          See <fo:inline font-family="monospace">init:get_argument/</fo:inline> about command-line arguments and
          <fo:inline font-family="monospace">gen_udp:open/2</fo:inline> about UDP options.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{port_policy, Policy}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Policy = random | Port | {range, MinPort, MaxPort}</fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Port = MinPort = MaxPort = int()</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Policy for the selection of the temporary port that is used
          by the server/client during the file transfer. Default is
          <fo:inline font-family="monospace">random</fo:inline>, which is the standardized policy. With this
          policy a randomized free port is used. A single port or a range
          of ports can be useful if the protocol passes through a
          firewall.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{udp, Options}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Options = [Opt]</fo:inline>, see
          <fo:inline font-style="italic">gen_udp:open/2</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{use_tsize, Bool}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Bool = bool()</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Flag for automated use of option <fo:inline font-family="monospace">tsize</fo:inline>. With
          this set to <fo:inline font-family="monospace">true</fo:inline>, the <fo:inline font-family="monospace">write_file/3</fo:inline> client
          determines the filesize and sends it to the server as
          the standardized <fo:inline font-family="monospace">tsize</fo:inline> option. A <fo:inline font-family="monospace">read_file/3</fo:inline>
          client acquires only a filesize from the server by sending
          a zero <fo:inline font-family="monospace">tsize</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{max_tsize, MaxTsize}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MaxTsize = int() | infinity</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Threshold for the maximal filesize in bytes. The transfer
          is aborted if the limit is exceeded. 
	  Default is <fo:inline font-family="monospace">infinity</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{max_conn, MaxConn}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MaxConn = int() | infinity</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Threshold for the maximal number of active connections.
          The daemon rejects the setup of new connections if
          the limit is exceeded. Default is <fo:inline font-family="monospace">infinity</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{TftpKey, TftpVal}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">TftpKey = string()</fo:inline>          <fo:block/>
<fo:inline font-family="monospace">TftpVal = string()</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Name and value of a TFTP option.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{reject, Feature}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Feature = Mode | TftpKey</fo:inline>          <fo:block/>
<fo:inline font-family="monospace"> Mode = read | write</fo:inline>          <fo:block/>
<fo:inline font-family="monospace"> TftpKey = string()</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Controls which features to reject. This is
          mostly useful for the server as it can restrict the use
	  of certain TFTP options or read/write access.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{callback, {RegExp, Module, State}}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">RegExp = string()</fo:inline>          <fo:block/>
<fo:inline font-family="monospace">Module = atom()</fo:inline>          <fo:block/>
<fo:inline font-family="monospace">State = term()</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Registration of a callback module. When a file is to be
          transferred, its local filename is matched to the regular
          expressions of the registered callbacks. The first matching
          callback is used during the transfer. See
          <fo:inline font-style="italic">read_file/3</fo:inline> and
          <fo:inline font-style="italic">write_file/3</fo:inline>.
          </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The callback module must implement the <fo:inline font-family="monospace">tftp</fo:inline> behavior, see
          <fo:inline font-style="italic">CALLBACK FUNCTIONS</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

   <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{logger, Module}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Module = module()()</fo:inline></fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Callback module for customized logging of errors, warnings, and
	  info messages. The callback module must implement the
	  <fo:inline font-family="monospace">tftp_logger</fo:inline> behavior, see
          <fo:inline font-style="italic">LOGGER FUNCTIONS</fo:inline>.
          The default module is <fo:inline font-family="monospace">tftp_logger</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{max_retries, MaxRetries}</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MaxRetries = int()</fo:inline></fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Threshold for the maximal number of retries. By default
	  the server/client tries to resend a message up to
	  five times when the time-out expires.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2918608">change_config(daemons, Options) -&gt; [{Pid, Result}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Changes configuration for all TFTP daemon processes. </fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2923200">change_config(servers, Options) -&gt; [{Pid, Result}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Changes configuration for all TFTP server processes.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2927792">change_config(Pid, Options) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Changes configuration for a TFTP daemon, server, or client process.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2932416">info(daemons) -&gt; [{Pid, Options}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = [pid()()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns information about all TFTP daemon processes.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2936512">info(servers) -&gt; [{Pid, Options}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = [pid()()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns information about all TFTP server processes. </fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2940608">info(Pid) -&gt; {ok, Options} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns information about a TFTP daemon, server, or client process.</fo:block>
      </fo:block>
       
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2944320">read_file(RemoteFilename, LocalFilename, Options) -&gt; {ok, LastCallbackState} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFilename = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">LocalFilename = binary | string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">LastCallbackState = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Reads a (virtual) file <fo:inline font-family="monospace">RemoteFilename</fo:inline> from a TFTP
	server.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">LocalFilename</fo:inline> is the atom <fo:inline font-family="monospace">binary</fo:inline>,
	<fo:inline font-family="monospace">tftp_binary</fo:inline> is used as callback module. It concatenates
	all transferred blocks and returns them as one single binary
	in <fo:inline font-family="monospace">LastCallbackState</fo:inline>.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">LocalFilename</fo:inline> is a string and there are no
	registered callback modules, <fo:inline font-family="monospace">tftp_file</fo:inline> is used as
	callback module. It writes each transferred block to the file
	named <fo:inline font-family="monospace">LocalFilename</fo:inline> and returns the number of
	transferred bytes in <fo:inline font-family="monospace">LastCallbackState</fo:inline>.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">LocalFilename</fo:inline> is a string and there are registered
	callback modules, <fo:inline font-family="monospace">LocalFilename</fo:inline> is tested against
	the regexps of these and the callback module corresponding to
	the first match is used, or an error tuple is returned if no
	matching regexp is found.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2956128">start(Options) -&gt; {ok, Pid} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts a daemon process listening for UDP packets on a
	port. When it receives a request for read or write, it spawns
	a temporary server process handling the actual transfer
	of the (virtual) file.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2960384">write_file(RemoteFilename, LocalFilename, Options) -&gt; {ok, LastCallbackState} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteFilename = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">LocalFilename = binary() | string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">LastCallbackState = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Writes a (virtual) file <fo:inline font-family="monospace">RemoteFilename</fo:inline> to a TFTP
          server.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">LocalFilename</fo:inline> is a binary, <fo:inline font-family="monospace">tftp_binary</fo:inline> is
          used as callback module. The binary is transferred block by
          block and the number of transferred bytes is returned in
          <fo:inline font-family="monospace">LastCallbackState</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">LocalFilename</fo:inline> is a string and there are no
          registered callback modules, <fo:inline font-family="monospace">tftp_file</fo:inline> is used as
          callback module. It reads the file named <fo:inline font-family="monospace">LocalFilename</fo:inline>
          block by block and returns the number of transferred bytes
          in <fo:inline font-family="monospace">LastCallbackState</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">LocalFilename</fo:inline> is a string and there are registered
	callback modules, <fo:inline font-family="monospace">LocalFilename</fo:inline> is tested against
	the regexps of these and the callback module corresponding to
	the first match is used, or an error tuple is returned if no
	matching regexp is found.</fo:block>
      </fo:block>
  

  <fo:block id="idp2972544" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">CALLBACK FUNCTIONS</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-family="monospace">tftp</fo:inline> callback module is to be implemented as a
      <fo:inline font-family="monospace">tftp</fo:inline> behavior and export the functions listed
      in the following.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">On the server side, the callback interaction starts with a call to
      <fo:inline font-family="monospace">open/5</fo:inline> with the registered initial callback state.
      <fo:inline font-family="monospace">open/5</fo:inline> is expected to open the (virtual) file. Then either
      function <fo:inline font-family="monospace">read/1</fo:inline> or <fo:inline font-family="monospace">write/2</fo:inline> is invoked
      repeatedly, once per transferred block. At each function call,
      the state returned from the previous call is obtained. When
      the last block is encountered, function <fo:inline font-family="monospace">read/1</fo:inline> or
      <fo:inline font-family="monospace">write/2</fo:inline> is expected to close the (virtual) file
      and return its last state. Function <fo:inline font-family="monospace">abort/3</fo:inline> is only
      used in error situations. Function <fo:inline font-family="monospace">prepare/5</fo:inline> is not used on
      the server side.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">On the client side, the callback interaction is the same, but it
      starts and ends a bit differently. It starts with a call to
      <fo:inline font-family="monospace">prepare/5</fo:inline> with the same arguments as <fo:inline font-family="monospace">open/5</fo:inline> takes.
      <fo:inline font-family="monospace">prepare/5</fo:inline> is expected to validate the TFTP options
      suggested by the user and to return the subset of them that it
      accepts. Then the options are sent to the server, which performs
      the same TFTP option negotiation procedure. The options that are
      accepted by the server are forwarded to function <fo:inline font-family="monospace">open/5</fo:inline>
      on the client side. On the client side, function <fo:inline font-family="monospace">open/5</fo:inline>
      must accept all option as-is or reject the transfer. Then
      the callback interaction follows the same pattern as described
      for the server side. When the last block is encountered in
      <fo:inline font-family="monospace">read/1</fo:inline> or <fo:inline font-family="monospace">write/2</fo:inline>, the returned state is forwarded to
      the user and returned from <fo:inline font-family="monospace">read_file</fo:inline>/3 or
      <fo:inline font-family="monospace">write_file/3</fo:inline>.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"> If a callback (performing the file access
    in the TFTP server) takes too long time (more than
    the double TFTP time-out), the server aborts the
    connection and sends an error reply to the client.
    This implies that the server releases resources
    attached to the connection faster than before. The
    server simply assumes that the client has given
    up.</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the TFTP server receives yet another request from
    the same client (same host and port) while it
    already has an active connection to the client, it
    ignores the new request if the request is
    equal to the first one (same filename and options).
    This implies that the (new) client will be served
    by the already ongoing connection on the server
    side. By not setting up yet another connection, in
    parallel with the ongoing one, the server
    consumes less resources.</fo:block>
    
    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2987104">Module:abort(Code, Text, State) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Code = undef | enoent | eacces | enospc</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | badop | eexist | baduser | badopt</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Text = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Invoked when the file transfer is aborted.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The callback function is expected to clean
	up its used resources after the aborted file
	transfer, such as closing open file
	descriptors and so on. The function is not
	invoked if any of the other callback
	functions returns an error, as it is
	expected that they already have cleaned up
	the necessary resources. However, it is
	invoked if the functions fail (crash).</fo:block>
      </fo:block>
    
      <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp2992928">Module:open(Peer, Access, Filename, Mode, SuggestedOptions, State) -&gt; {ok, AcceptedOptions, NewState} | {error, {Code, Text}}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Peer = {PeerType, PeerHost, PeerPort}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerType = inet | inet6</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerHost = ip_address()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerPort = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Access = read | write</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Filename = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Mode = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SuggestedOptions = AcceptedOptions = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Key = Value = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = InitialState | term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> InitialState = [] | [{root_dir, string()}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewState = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Code = undef | enoent | eacces | enospc</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | badop | eexist | baduser | badopt</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Text = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Opens a file for read or write access.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">On the client side, where the <fo:inline font-family="monospace">open/5</fo:inline> call has been
	preceded by a call to <fo:inline font-family="monospace">prepare/5</fo:inline>, all options must be
	accepted or rejected.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">On the server side, where there is no preceding
	<fo:inline font-family="monospace">prepare/5</fo:inline> call, no new options can be added, but
	those present in <fo:inline font-family="monospace">SuggestedOptions</fo:inline> can be
	omitted or replaced with new values in <fo:inline font-family="monospace">AcceptedOptions</fo:inline>.</fo:block>
    
	
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3006944">Module:prepare(Peer, Access, Filename, Mode, SuggestedOptions, InitialState) -&gt; {ok, AcceptedOptions, NewState} | {error, {Code, Text}}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Peer = {PeerType, PeerHost, PeerPort}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerType = inet | inet6</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerHost = ip_address()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerPort = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Access = read | write</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Filename = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Mode = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SuggestedOptions = AcceptedOptions = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"> Key = Value = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">InitialState = [] | [{root_dir, string()}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewState = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Code = undef | enoent | eacces | enospc</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | badop | eexist | baduser | badopt</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Text = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Prepares to open a file on the client side.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">No new options can be added, but those present in
	<fo:inline font-family="monospace">SuggestedOptions</fo:inline> can be omitted or replaced with new
	values in <fo:inline font-family="monospace">AcceptedOptions</fo:inline>.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This is followed by a call to <fo:inline font-family="monospace">open/4</fo:inline> before any
	read/write access is performed. <fo:inline font-family="monospace">AcceptedOptions</fo:inline> is
	sent to the server, which replies with the options that it
	accepts. These are then forwarded to <fo:inline font-family="monospace">open/4</fo:inline> as
	<fo:inline font-family="monospace">SuggestedOptions</fo:inline>.</fo:block>
    
	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3020992">Module:read(State) -&gt; {more, Bin, NewState} | {last, Bin, FileSize} | {error, {Code, Text}}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = NewState = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FileSize = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Code = undef | enoent | eacces | enospc</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | badop | eexist | baduser | badopt</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Text = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Reads a chunk from the file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The callback function is expected to close
	the file when the last file chunk is
	encountered. When an error is encountered,
	the callback function is expected to clean
	up after the aborted file transfer, such as
	closing open file descriptors, and so on. In both
	cases there will be no more calls to any of
	the callback functions.</fo:block>
    
	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3028304">Module:write(Bin, State) -&gt; {more, NewState} | {last, FileSize} | {error, {Code, Text}}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin = binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = NewState = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FileSize = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Code = undef | enoent | eacces | enospc</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | badop | eexist | baduser | badopt</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">  | int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Text = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Writes a chunk to the file.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The callback function is expected to close
	the file when the last file chunk is
	encountered. When an error is encountered,
	the callback function is expected to clean
	up after the aborted file transfer, such as
	closing open file descriptors, and so on. In both
	cases there will be no more calls to any of
	the callback functions.</fo:block>
    
	
      </fo:block>
  
  
  <fo:block id="idp3036320" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">LOGGER FUNCTIONS</fo:block>
    
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-family="monospace">tftp_logger</fo:inline> callback module is to be implemented as a
    <fo:inline font-family="monospace">tftp_logger</fo:inline> behavior and export the following functions:</fo:block>
    
    
    

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3039472">Logger:error_msg(Format, Data) -&gt; ok | exit(Reason)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Format = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = [term()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Logs an error message. 
	See <fo:inline font-family="monospace">error_logger:error_msg/2</fo:inline> for details.</fo:block>
	
	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3044576">Logger:info_msg(Format, Data) -&gt; ok | exit(Reason)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Format = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = [term()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Logs an info message. 
	See <fo:inline font-family="monospace">error_logger:info_msg/2</fo:inline>  for details.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3049104">Logger:warning_msg(Format, Data) -&gt; ok | exit(Reason)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Format = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = [term()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Logs a warning message. 
	See <fo:inline font-family="monospace">error_logger:warning_msg/2</fo:inline> for details.</fo:block>
	
	
      </fo:block>
  
<fo:block page-break-before="always" id="idp3060496" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">httpc</fo:marker>httpc</fo:block>Erlang module</fo:block>
  <fo:block/>

  httpc
  <fo:block/>

  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides the API to an HTTP/1.1 compatible client according 
      to <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>. 
    Caching is not supported.</fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When starting the <fo:inline font-family="monospace">Inets</fo:inline> application, a manager process for the
	default profile is started. The functions in this API
	that do not explicitly use a profile accesses the
	default profile. A profile keeps track of proxy options,
	cookies, and other options that can be applied to more than one
	request.</fo:block>

	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the scheme <fo:inline font-family="monospace">https</fo:inline> is used, the <fo:inline font-family="monospace">SSL</fo:inline> application must
	be started. When <fo:inline font-family="monospace">https</fo:inline> links need to go through a proxy, the
	CONNECT method extension to HTTP-1.1 is used to establish a
	tunnel and then the connection is upgraded to TLS.
	However, "TLS upgrade" according to <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2817</fo:basic-link></fo:inline>is not
	supported.</fo:block>

      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Pipelining is only used if the pipeline
      time-out is set, otherwise persistent connections without
      pipelining are used. That is, the client always waits for
      the previous response before sending the next request.</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Some examples are provided in the <fo:inline font-style="italic">Inets User's Guide</fo:inline>.</fo:block>
  
  
  <fo:block id="idp3069552" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type definitions that are used more than once in
      this module:</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">boolean() = true | false</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline> = list of ASCII characters</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">request_id() = reference()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">profile() = atom()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">path() = string()</fo:inline> representing a file path or directory path</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">ip_address()</fo:inline> = See the
    <fo:inline font-style="italic">inet(3)</fo:inline> manual page in Kernel.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">socket_opt()</fo:inline> = See the options used by
    <fo:inline font-style="italic">gen_tcp(3)</fo:inline> <fo:inline font-family="monospace">gen_tcp(3)</fo:inline> and 
    <fo:inline font-style="italic">ssl(3)</fo:inline> connect(s)</fo:block>
  
  
  
  <fo:block id="idp3078880" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">HTTP DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type definitions related to HTTP:</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">method() = head | get | put | post | trace | options | delete | patch</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">request()</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">= <fo:inline font-family="monospace">{url(), headers()}</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">| <fo:inline font-family="monospace">{url(), headers(), content_type(), body()}</fo:inline></fo:block>
      </fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">url() = string()</fo:inline> syntax according to the URI definition in
    <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2396</fo:basic-link></fo:inline>, 
    for example <fo:inline font-family="monospace">"http://www.erlang.org"</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">status_line() = {http_version(), status_code(), reason_phrase()}</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">http_version() = string()</fo:inline>, for example, <fo:inline font-family="monospace">"HTTP/1.1"</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">status_code() = integer()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">reason_phrase() = string()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">content_type() = string()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">headers() = [header()]</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">header() = {field(), value()}</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">field() = string()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">value() = string()</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">body()</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">= <fo:inline font-family="monospace">string() | binary()</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">| <fo:inline font-family="monospace">{fun(accumulator())</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace"> -&gt; body_processing_result(), accumulator()}</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">| <fo:inline font-family="monospace">{chunkify, fun(accumulator())</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace"> -&gt; body_processing_result(), accumulator()}</fo:inline></fo:block>
      </fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">body_processing_result() = eof | {ok, iolist(), accumulator()}</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">accumulator() = term()</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">filename() = string()</fo:inline></fo:block>
 <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information about HTTP, see
 <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.</fo:block> 

  
  <fo:block id="idp3098960" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SSL DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">See <fo:inline font-style="italic">ssl(3)</fo:inline> for information
    about <fo:inline font-family="monospace">SSL</fo:inline> options (<fo:inline font-family="monospace">ssloptions()</fo:inline>). </fo:block>
  

  <fo:block id="idp3101936" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">HTTP CLIENT SERVICE START/STOP</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An HTTP client can be configured to start when starting the <fo:inline font-family="monospace">Inets</fo:inline>
      application or started dynamically in runtime by calling the
      <fo:inline font-family="monospace">Inets</fo:inline> application API <fo:inline font-family="monospace">inets:start(httpc, ServiceConfig)</fo:inline>
      or <fo:inline font-family="monospace">inets:start(httpc,  ServiceConfig, How)</fo:inline>,
      see <fo:inline font-style="italic">inets(3)</fo:inline>.
      The configuration options are as follows:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{profile, profile()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Name of the profile, see
	<fo:inline font-style="italic">DATA TYPES</fo:inline>.
      This option is mandatory.</fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always">{data_dir, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Directory where the profile
	can save persistent data. If omitted, all cookies are treated
	as session cookies.</fo:block></fo:block></fo:block-container>
    </fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The client can be stopped using <fo:inline font-family="monospace">inets:stop(httpc, Pid)</fo:inline> or
    <fo:inline font-family="monospace">inets:stop(httpc, Profile)</fo:inline>.</fo:block>
  
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
   
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3110992">cancel_request(RequestId) -&gt;</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3111456">cancel_request(RequestId, Profile) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RequestId = request_id() - A unique identifier as returned
        by request/4</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Cancels an asynchronous HTTP request. Notice that this does not guarantee
	that the request response is not delivered. Because it is asynchronous,
	the request can already have been completed when the cancellation arrives.
	</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3116288">cookie_header(Url) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3116736">cookie_header(Url, Profile | Opts) -&gt; header() | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3117232">cookie_header(Url, Opts, Profile) -&gt; header() | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Url = url()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Opts = [cookie_header_opt()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">cookie_header_opt() = {ipv6_host_with_brackets, boolean()}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the cookie header that would have been sent
	when making a request to <fo:inline font-family="monospace">Url</fo:inline> using profile <fo:inline font-family="monospace">Profile</fo:inline>.
	If no profile is specified, the default profile is used.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option <fo:inline font-family="monospace">ipv6_host_with_bracket</fo:inline> deals with how to 
	parse IPv6 addresses. For details,
	see argument <fo:inline font-family="monospace">Options</fo:inline> of
	<fo:inline font-style="italic">request/[4,5]</fo:inline>.</fo:block>
      </fo:block>

     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3126400">get_options(OptionItems) -&gt; {ok, Values} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3126896">get_options(OptionItems, Profile) -&gt; {ok, Values} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">OptionItems = all | [option_item()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">option_item() = proxy |
	                   https_proxy |
                           max_sessions | 
			   keep_alive_timeout | 
	                   max_keep_alive_length | 
			   pipeline_timeout | 
			   max_pipeline_length | 
			   cookies | 
			   ipfamily | 
			   ip | 
			   port | 
			   socket_opts | 
	                   verbose</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can used.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Values = [{option_item(), term()}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Retrieves the options currently used by the client.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3133184">info() -&gt; list()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3133632">info(Profile) -&gt; list()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Produces a list of miscellaneous information. 
	Intended for debugging. 
	If no profile is specified, the default profile is used.</fo:block>
      </fo:block>

    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3137840">reset_cookies() -&gt; void()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3138304">reset_cookies(Profile) -&gt; void()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Resets (clears) the cookie database for the specified 
	<fo:inline font-family="monospace">Profile</fo:inline>. If no profile is specified the default profile 
	is used.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3142944">request(Url) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3143392">request(Url, Profile) -&gt; {ok, Result} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Url = url()</fo:block></fo:list-item-body></fo:list-item> 
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = {status_line(), headers(), Body} | 
                    {status_code(), Body} | request_id()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Body = string() | binary()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Equivalent to <fo:inline font-family="monospace">httpc:request(get, {Url, []}, [], [])</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3149856">request(Method, Request, HTTPOptions, Options) -&gt;</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3150336">request(Method, Request, HTTPOptions, Options, Profile) -&gt; {ok, Result} | {ok, saved_to_file} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Method = method()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Request = request()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HTTPOptions = http_options()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">http_options() = [http_option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">http_option() = {timeout,         timeout()} | 
                           {connect_timeout, timeout()} | 
                           {ssl,             ssloptions()} | 
                           {essl,            ssloptions()} | 
                           {autoredirect,    boolean()} | 
                           {proxy_auth, {userstring(), passwordstring()}} | 
                           {version,         http_version()} | 
                           {relaxed,         boolean()} |
	                   {url_encode,      boolean()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">timeout() = integer() &gt;= 0 | infinity</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = options()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">options() = [option()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">option() = {sync,                    boolean()} | 
                      {stream,                  stream_to()} | 
                      {body_format,             body_format()} | 
                      {full_result,             boolean()} | 
                      {headers_as_is,           boolean() |
                      {socket_opts,             socket_opts()} | 
                      {receiver,                receiver()},
	              {ipv6_host_with_brackets, boolean()}}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">stream_to() = none | self | {self, once} | filename()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">socket_opts() = [socket_opt()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">receiver() = pid() | function()/1 | {Module, Function, Args}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Function = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Args = list()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">body_format() = string | binary</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = {status_line(), headers(), Body} | 
                    {status_code(), Body} | request_id()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Body = string() | binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = {connect_failed, term()} | 
                    {send_failed, term()} | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sends an HTTP request. The function can be both synchronous
	and asynchronous. In the latter case, the function returns
	<fo:inline font-family="monospace">{ok, RequestId}</fo:inline> and then the information is delivered
	to the <fo:inline font-family="monospace">receiver</fo:inline> depending on that value.</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">HTTP option (<fo:inline font-family="monospace">http_option()</fo:inline>) details:</fo:block>
        
        <fo:block space-after="0.25em" space-before="0.25em">
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">timeout</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Time-out time for the request.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The clock starts ticking when the request is sent.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Time is in milliseconds.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">infinity</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">connect_timeout</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Connection time-out time, used during the initial request, 
	    when the client is <fo:inline font-weight="bold">connecting</fo:inline> to the server.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Time is in milliseconds.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is the value of option <fo:inline font-family="monospace">timeout</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">ssl</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This is the <fo:inline font-family="monospace">SSL/TLS</fo:inline> connectin configuration option.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defaults to <fo:inline font-family="monospace">[]</fo:inline>. See <fo:inline font-style="italic">ssl:connect/[2,3,4]</fo:inline>  for available options.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">autoredirect</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The client automatically retrieves the information
	    from the new URI and returns that as the result, instead 
	    of a 30X-result code.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For some 30X-result codes, automatic redirect 
	    is not allowed. In these cases the 30X-result is always
	    returned.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">true</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">proxy_auth</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A proxy-authorization header using the provided username and 
	    password is added to the request.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">version</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Can be used to make the client act as an <fo:inline font-family="monospace">HTTP/1.0</fo:inline> or
	    <fo:inline font-family="monospace">HTTP/0.9</fo:inline> client. By default this is an <fo:inline font-family="monospace">HTTP/1.1</fo:inline> 
	    client. When using <fo:inline font-family="monospace">HTTP/1.0</fo:inline> persistent connections are 
	    not used.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is the string <fo:inline font-family="monospace">"HTTP/1.1"</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">relaxed</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If set to <fo:inline font-family="monospace">true</fo:inline>, workarounds for known server deviations 
	    from the HTTP-standard are enabled.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">url_encode</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Applies Percent-encoding, also known as URL encoding on the 
	    URL.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>
        </fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option (<fo:inline font-family="monospace">option()</fo:inline>) details:</fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">sync</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Option for the request to be synchronous or asynchronous.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">true</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">stream</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Streams the body of a 200 or 206 response to the calling 
	    process or to a file. When streaming to the calling process 
	    using option <fo:inline font-family="monospace">self</fo:inline>, the following stream messages
	    are sent to that process: <fo:inline font-family="monospace">{http, {RequestId,
	    stream_start, Headers}}, {http, {RequestId, stream,
	    BinBodyPart}}, and {http, {RequestId, stream_end, Headers}}</fo:inline>.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When streaming to the calling processes using option
	    <fo:inline font-family="monospace">{self, once}</fo:inline>, the first message has an extra
	    element, that is, <fo:inline font-family="monospace">{http, {RequestId, stream_start, Headers, Pid}}</fo:inline>.
	    This is the process id to be used as an argument to
	    <fo:inline font-family="monospace">http:stream_next/1</fo:inline> to trigger the next message to be sent to
	    the calling process.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Notice that chunked encoding can add
	    headers so that there are more headers in the <fo:inline font-family="monospace">stream_end</fo:inline>
	    message than in <fo:inline font-family="monospace">stream_start</fo:inline>.
	    When streaming to a file and the request is asynchronous, the
	    message <fo:inline font-family="monospace">{http, {RequestId, saved_to_file}}</fo:inline> is sent.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">none</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">body_format</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines if the body is to be delivered as a string or 
	    binary. This option is only valid for the synchronous 
	    request.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">string</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">full_result</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines if a "full result" is to be returned to the caller (that is,
	    the body, the headers, and the entire status line) or not 
	    (the body and the status code).</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">true</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">headers_as_is</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines if the headers provided by the user are to be made 
	    lower case or to be regarded as case sensitive.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The HTTP standard requires them to be 
	    case insensitive. Use this feature only if there is 
	    no other way to communicate with the server or for testing 
	    purpose. When this option is used, no headers 
	    are automatically added. All necessary headers must be
	    provided by the user.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">socket_opts</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Socket options to be used for this and subsequent 
	    requests.</fo:block>
	    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Overrides any value set by function
	    <fo:inline font-style="italic">set_options</fo:inline>.</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The validity of the options is <fo:inline font-weight="bold">not</fo:inline> checked by
            the HTTP client they are assumed to be correct and passed
            on to ssl application and inet driver, which may reject
            them if they are not correct. Note that the current
            implementation assumes the requests to the same host, port
            combination will use the same socket options.
	    </fo:block>
	    
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default the socket options set by function
	    <fo:inline font-style="italic">set_options/[1,2]</fo:inline> 
	     are used when establishing a connection.</fo:block>
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">receiver</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines how the client delivers the result of an
	    asynchronous request (<fo:inline font-family="monospace">sync</fo:inline> has the value 
	    <fo:inline font-family="monospace">false</fo:inline>).</fo:block>

            <fo:block space-after="0.25em" space-before="0.25em">
              <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">pid()</fo:inline></fo:block>
              <fo:block-container><fo:block start-indent="2em">
	        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Messages are sent to this process in the format 
		<fo:inline font-family="monospace">{http, ReplyInfo}</fo:inline>.</fo:block>
	      </fo:block></fo:block-container>

              <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">function/1</fo:inline></fo:block>
              <fo:block-container><fo:block start-indent="2em">
	        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Information is delivered to the receiver through calls 
		to the provided fun <fo:inline font-family="monospace">Receiver(ReplyInfo)</fo:inline>.</fo:block>
  	      </fo:block></fo:block-container>

              <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{Module, Function, Args}</fo:inline></fo:block>
              <fo:block-container><fo:block start-indent="2em">
	        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Information is delivered to the receiver through calls 
		to the callback function 
		<fo:inline font-family="monospace">apply(Module, Function, [ReplyInfo | Args])</fo:inline>.</fo:block>
	      </fo:block></fo:block-container>
            </fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In all of these cases, <fo:inline font-family="monospace">ReplyInfo</fo:inline> has the following
              structure:</fo:block>

<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{RequestId, saved_to_file}
{RequestId, {error, Reason}}
{RequestId, Result}
{RequestId, stream_start, Headers}
{RequestId, stream_start, Headers, HandlerPid}
{RequestId, stream, BinBodyPart}
{RequestId, stream_end, Headers}</fo:block>

            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is the <fo:inline font-family="monospace">pid</fo:inline> of the process calling the request 
	    function (<fo:inline font-family="monospace">self()</fo:inline>). </fo:block>

	    
	  </fo:block></fo:block-container>

          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">ipv6_host_with_brackets</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em">
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines when parsing the Host-Port part of an URI with an IPv6 address 
	    with brackets, if those brackets are to be retained (<fo:inline font-family="monospace">true</fo:inline>) 
	    or stripped (<fo:inline font-family="monospace">false</fo:inline>).</fo:block>
            <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
	  </fo:block></fo:block-container>

        </fo:block>
      </fo:block>

  
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3232144">set_options(Options) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3232608">set_options(Options, Profile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {proxy, {Proxy, NoProxy}}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {https_proxy, {Proxy, NoProxy}}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {max_sessions, MaxSessions}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {max_keep_alive_length, MaxKeepAlive}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {keep_alive_timeout, KeepAliveTimeout}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {max_pipeline_length, MaxPipeline}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {pipeline_timeout, PipelineTimeout}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {cookies, CookieMode}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {ipfamily, IpFamily}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {ip, IpAddress}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {port, Port}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {socket_opts, socket_opts()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| {verbose, VerboseMode}</fo:block></fo:list-item-body></fo:list-item>	    
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Proxy = {Hostname, Port}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Hostname = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Example: "localhost" or "foo.bar.se"</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Example: 8080</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NoProxy = [NoProxyDesc]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NoProxyDesc = DomainDesc | HostName | IPDesc</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">DomainDesc = "*.Domain"</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Example: "*.ericsson.se"</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IpDesc = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Example: "134.138" or "[FEDC:BA98" 
	(all IP addresses starting with 134.138 or FEDC:BA98), 
	"66.35.250.150" or "[2010:836B:4179::836B:4179]" (a complete IP address). 
	<fo:inline font-family="monospace">proxy</fo:inline> defaults to <fo:inline font-family="monospace">{undefined, []}</fo:inline>, 
	that is, no proxy is configured and 
	<fo:inline font-family="monospace">https_proxy</fo:inline> defaults to the value of <fo:inline font-family="monospace">proxy</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>	
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MaxSessions = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Maximum number of persistent connections to a host.
	Default is <fo:inline font-family="monospace">2</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MaxKeepAlive = integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Maximum number of outstanding requests on the same connection to 
	a host. Default is <fo:inline font-family="monospace">5</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">KeepAliveTimeout = integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If a persistent connection is idle longer than the 
	<fo:inline font-family="monospace">keep_alive_timeout</fo:inline> in milliseconds, 
	the client closes the connection.
	The server can also have such a time-out but do not take that for granted.
	Default is <fo:inline font-family="monospace">120000</fo:inline> (= 2 min).</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MaxPipeline = integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Maximum number of outstanding requests on a pipelined connection 
	to a host. Default is <fo:inline font-family="monospace">2</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PipelineTimeout = integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If a persistent connection is idle longer than the 
	<fo:inline font-family="monospace">pipeline_timeout</fo:inline> in milliseconds, 
	the client closes the connection. Default is <fo:inline font-family="monospace">0</fo:inline>,
	which results in pipelining not being used.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CookieMode = enabled | disabled | verify</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If cookies are enabled, all valid cookies are automatically 
	saved in the cookie database of the client manager.
	If option <fo:inline font-family="monospace">verify</fo:inline> is used, function <fo:inline font-family="monospace">store_cookies/2</fo:inline>
	has to be called for the cookies to be saved. 
	Default is <fo:inline font-family="monospace">disabled</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IpFamily = inet | inet6 </fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Default is <fo:inline font-family="monospace">inet</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IpAddress = ip_address()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the host has several network interfaces, this option specifies 
	which one to use. 
	See <fo:inline font-style="italic">gen_tcp:connect/3,4</fo:inline> 
	for details.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Local port number to use. 
	See <fo:inline font-style="italic">gen_tcp:connect/3,4</fo:inline> 
	for details.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">socket_opts() = [socket_opt()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The options are appended to the socket options used by the 
	client. 
	These are the default values when a new request handler
	is started (for the initial connect). They are passed directly 
        to the underlying transport (<fo:inline font-family="monospace">gen_tcp</fo:inline> or <fo:inline font-family="monospace">SSL</fo:inline>) 
	<fo:inline font-weight="bold">without</fo:inline> verification.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">VerboseMode = false | verbose | debug | trace</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Default is <fo:inline font-family="monospace">false</fo:inline>.
	This option is used to switch on (or off) 
	different levels of Erlang trace on the client. 
	It is a debug feature.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets options to be used for subsequent requests.</fo:block>
	<fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If possible, the client keeps its connections
	  alive and uses persistent connections
	  with or without pipeline depending on configuration
	  and current circumstances. The HTTP/1.1 specification does not
	  provide a guideline for how many requests that are
	  ideal to be sent on a persistent connection.
	  This depends much on the application.</fo:block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A long queue of requests can cause a
	  user-perceived delay, as earlier requests can take a long time
	  to complete. The HTTP/1.1 specification suggests a
	  limit of two persistent connections per server, which is the
	  default value of option <fo:inline font-family="monospace">max_sessions</fo:inline>.</fo:block>
	</fo:block>

        
      </fo:block>
     
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3272336">store_cookies(SetCookieHeaders, Url) -&gt; </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3272816">store_cookies(SetCookieHeaders, Url, Profile) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SetCookieHeaders = headers() - where field = "set-cookie"</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Url = url()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Saves the cookies defined in <fo:inline font-family="monospace">SetCookieHeaders</fo:inline>
	in the client profile cookie database.
	Call this function if option <fo:inline font-family="monospace">cookies</fo:inline> is set to <fo:inline font-family="monospace">verify</fo:inline>.
	If no profile is specified, the default profile is used.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3279824">stream_next(Pid) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Pid = pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>As received in the <fo:inline font-family="monospace">stream_start message</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Triggers the next message to be streamed, that is,
	the same behavior as active ones for sockets.</fo:block>

        
        
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3284976">which_cookies() -&gt; cookies()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3285440">which_cookies(Profile) -&gt; cookies()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">cookies() = [cookie_stores()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">cookie_stores() = {cookies, cookies()} | {session_cookies, cookies()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">cookies() = [cookie()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">cookie() = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Produces a list of the entire cookie database.
	Intended for debugging/testing purposes. 
	If no profile is specified, the default profile is used.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3291520">which_sessions() -&gt; session_info()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3291984">which_sessions(Profile) -&gt; session_info()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = profile() | pid()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>When started <fo:inline font-family="monospace">stand_alone</fo:inline> only the pid can be used.</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">session_info() = {GoodSessions, BadSessions, NonSessions}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GoodSessions = session()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BadSessions = tuple()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NonSessions = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Produces a slightly processed dump of the session 
	database. It is intended for debugging. 
	If no profile is specified, the default profile is used.</fo:block>
      </fo:block>

  
  

  <fo:block id="idp3298272" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>, 
    <fo:inline font-style="italic">inets(3)</fo:inline>,
    <fo:inline font-style="italic">gen_tcp(3)</fo:inline>, 
    <fo:inline font-style="italic">ssl(3)</fo:inline>
    </fo:block>
  
  
<fo:block page-break-before="always" id="idp3308960" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">httpd</fo:marker>httpd</fo:block>Erlang module</fo:block>
  <fo:block/>
  httpd 
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An implementation of an HTTP 1.1 compliant web server, as defined in 
    <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>. 
    Provides web server start options, administrative functions, and 
    an Erlang callback API.</fo:block>
  
  
  <fo:block id="idp3311920" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type definitions that are used more than once in
      this module:</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">boolean() = true | false</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline> = list of ASCII characters</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">path() = string()</fo:inline> representing a file or a directory path</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace"> ip_address() = {N1,N2,N3,N4} % IPv4
       | {K1,K2,K3,K4,K5,K6,K7,K8}  % IPv6</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">hostname() = string()</fo:inline> representing a host, for example, 
    "foo.bar.com"</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">property() = atom()</fo:inline></fo:block>
    
  

  <fo:block id="idp3317408" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">ERLANG HTTP SERVER SERVICE START/STOP</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A web server can be configured to start when starting the <fo:inline font-family="monospace">Inets</fo:inline>
    application, or dynamically in runtime by calling the
    <fo:inline font-family="monospace">Inets</fo:inline> application API <fo:inline font-family="monospace">inets:start(httpd, ServiceConfig)</fo:inline> or
    <fo:inline font-family="monospace">inets:start(httpd, ServiceConfig, How)</fo:inline>,
    see <fo:inline font-style="italic">inets(3)</fo:inline>.
    The configuration options, also called
    properties, are as follows:</fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">File Properties</fo:inline></fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When the web server is started
    at application start time, the properties are to be fetched from a
    configuration file that can consist of a regular Erlang property
    list, that is, <fo:inline font-family="monospace">[{Option, Value}]</fo:inline>, where <fo:inline font-family="monospace"> Option = property()
    </fo:inline> and <fo:inline font-family="monospace">Value = term()</fo:inline>, followed by a full stop, or for
    backwards compatibility, an Apache-like configuration file. If the
    web server is started dynamically at runtime,
    a file can still be specified but also the complete property
    list.</fo:block>
    
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{proplist_file, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If this property is defined, <fo:inline font-family="monospace">Inets</fo:inline> expects to find
	all other properties defined in this file. The
	file must include all properties listed under mandatory
	properties.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{file, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If this property is defined, <fo:inline font-family="monospace">Inets</fo:inline> expects to find all 
	other properties defined in this file, which uses Apache-like 
	syntax. The file must include all properties listed 
	under mandatory properties. The Apache-like syntax is the property, 
	written as one word where each new word begins with a capital, 
	followed by a white-space, followed by the value, followed by a 
	new line.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{server_root, "/urs/local/www"} -&gt; ServerRoot /usr/local/www</fo:block>
	  
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A few exceptions are documented
	  for each property that behaves differently,
	  and the special cases <fo:inline font-family="monospace">{directory, {path(), PropertyList}}</fo:inline> 
	  and <fo:inline font-family="monospace">{security_directory, {Dir, PropertyList}}</fo:inline>, are represented
	  as:</fo:block>
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
	  
&lt;Directory Dir&gt;
 &lt;Properties handled as described above&gt; 
&lt;/Directory&gt;
         </fo:block>
      </fo:block></fo:block-container>
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The properties <fo:inline font-family="monospace">proplist_file</fo:inline> and <fo:inline font-family="monospace">file</fo:inline> are mutually exclusive. Also newer properties may not be supported as Apache-like options, this is a legacy feature.</fo:block>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Mandatory Properties</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{port, integer()} </fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The port that the HTTP server listen to.
	If zero is specified as port, an arbitrary available port
	is picked and function <fo:inline font-family="monospace">httpd:info/2</fo:inline> can be used to
	determine which port was picked.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{server_name, string()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The name of your server, normally a fully qualified domain name.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{server_root, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the home directory of the server, where log files, and so on, 
	can be stored. Relative paths specified in other properties refer
	to this directory.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always"> {document_root, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the top directory for the documents that
	are available on the HTTP server.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Communication Properties</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{bind_address, ip_address() | hostname() | any}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">any</fo:inline>. <fo:inline font-family="monospace">any</fo:inline> is denoted <fo:inline font-weight="bold">*</fo:inline> 
	in the Apache-like configuration file.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{profile, atom()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Used together with <fo:inline font-style="italic"><fo:inline font-family="monospace">bind_address</fo:inline></fo:inline>
	and <fo:inline font-style="italic"><fo:inline font-family="monospace">port</fo:inline></fo:inline> to uniquely identify
	a HTTP server. This can be useful in a virtualized environment,
	where there can
	be more that one server that has the same bind_address and port.
	If this property is not explicitly set, it is assumed that the
	<fo:inline font-style="italic"><fo:inline font-family="monospace">bind_address</fo:inline></fo:inline> and
	<fo:inline font-style="italic"><fo:inline font-family="monospace">port</fo:inline></fo:inline>uniquely identifies the HTTP server.
	</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{socket_type, ip_comm | {ip_comm,  Config::proplist()} | {essl, Config::proplist()}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For <fo:inline font-family="monospace">ip_comm</fo:inline> configuration options, see 
	<fo:inline font-style="italic">gen_tcp:listen/2</fo:inline>, some options
	that are used internally by httpd can not be set.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For <fo:inline font-family="monospace">SSL</fo:inline> configuration options, see 
	<fo:inline font-style="italic">ssl:listen/2</fo:inline>.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">ip_comm</fo:inline>.</fo:block> 
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{ipfamily, inet | inet6}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">inet</fo:inline>, legacy option <fo:inline font-family="monospace">inet6fb4</fo:inline> no longer makes sense and will be translated
	to inet.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{minimum_bytes_per_second, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If given, sets a minimum of bytes per second value for connections.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the value is unreached, the socket closes for that connection.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The option is good for reducing the risk of "slow DoS" attacks.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Erlang Web Server API Modules</fo:inline> </fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{modules, [atom()]} </fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines which modules the HTTP server uses when handling
	requests. Default is <fo:inline font-family="monospace">[mod_alias, mod_auth, mod_esi,
	mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log,
	mod_disk_log]</fo:inline>. 
	Notice that some <fo:inline font-family="monospace">mod</fo:inline>-modules are dependent on
	others, so the order cannot be entirely arbitrary. See the
	<fo:inline font-style="italic">Inets Web Server Modules</fo:inline> in the
	User's Guide for details.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Limit properties</fo:inline> </fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">

      <fo:block keep-with-next.within-page="always">{customize, atom()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A callback module to customize the inets HTTP servers behaviour
	see <fo:inline font-style="italic"> httpd_custom_api</fo:inline> </fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{disable_chunked_transfer_encoding_send, boolean()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Allows you to disable chunked
	transfer-encoding when sending a response to an HTTP/1.1
	client. Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{keep_alive, boolean()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Instructs the server whether to use persistent
	connections when the client claims to be HTTP/1.1
	compliant. Default is <fo:inline font-family="monospace">true</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{keep_alive_timeout, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The number of seconds the server waits for a
	subsequent request from the client before closing the
	connection. Default is <fo:inline font-family="monospace">150</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{max_body_size, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Limits the size of the message body of an HTTP request.
	Default is no limit.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{max_clients, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Limits the number of simultaneous requests that can be
	supported. Default is <fo:inline font-family="monospace">150</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{max_header_size, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Limits the size of the message header of an HTTP request.
	Default is <fo:inline font-family="monospace">10240</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{max_content_length, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Maximum content-length in an incoming request, in bytes. Requests
	with content larger than this are answered with status 413.
	Default is <fo:inline font-family="monospace">100000000</fo:inline> (100 MB).
	</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{max_uri_size, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Limits the size of the HTTP request URI.
	Default is no limit.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{max_keep_alive_request, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The number of requests that a client can do on one
	connection. When the server has responded to the number of
	requests defined by <fo:inline font-family="monospace">max_keep_alive_requests</fo:inline>, the server 
	closes the connection. The server closes it even if there are 
	queued request. Default is no limit.</fo:block>
      </fo:block></fo:block-container>   
    </fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Administrative Properties</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em"> 
      <fo:block keep-with-next.within-page="always">{mime_types, [{MimeType, Extension}] | path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MimeType = string()</fo:inline> and <fo:inline font-family="monospace">Extension = string()</fo:inline>.
	  Files delivered to the client are MIME typed according to RFC
          1590. File suffixes are mapped to MIME types before file delivery.
          The mapping between file suffixes and MIME types can be specified
	  as an Apache-like file or directly in the property list. Such
          a file can look like the follwoing:</fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
# MIME type	Extension  
text/html	html htm
text/plain	asc txt</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is [{"html","text/html"},{"htm","text/html"}].</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{mime_type, string()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When the server is asked to provide a document type that
	cannot be determined by the MIME Type Settings, the server
	uses this default type.</fo:block>
      </fo:block></fo:block-container>
  
      <fo:block keep-with-next.within-page="always">{server_admin, string()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the email-address of the server
	administrator to be included in any error messages returned by
	the server.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{server_tokens, none|prod|major|minor|minimal|os|full|{private, string()}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the look of the value of the server header.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example: Assuming the version of <fo:inline font-family="monospace">Inets</fo:inline> is 5.8.1, 
	the server header string can look as follows for
	the different values of server-tokens:</fo:block>
	<fo:block space-after="0.25em" space-before="0.25em">
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">none</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">""  % A Server: header will not be generated</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">prod</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"inets"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">major</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"inets/5"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">minor</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"inets/5.8"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">minimal</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"inets/5.8.1"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">os</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"inets/5.8.1 (unix)"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">full</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"inets/5.8.1 (unix/linux) OTP/R15B"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{private, "foo/bar"}</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">"foo/bar"</fo:block></fo:block></fo:block-container>
     </fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By default, the value is as before, that is, <fo:inline font-family="monospace">minimal</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{log_format, common | combined}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines if access logs are to be written according to the <fo:inline font-family="monospace">common</fo:inline>
	log format or the extended common log format.
	The <fo:inline font-family="monospace">common</fo:inline> format is one line looking like this:
        <fo:inline font-family="monospace">remotehost rfc931 authuser [date] "request" status bytes</fo:inline>.</fo:block> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Here:</fo:block>
	<fo:block space-after="0.25em" space-before="0.25em">
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">remotehost</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">Remote.</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">rfc931</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The remote username of the client (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 931</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">authuser</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The username used for authentication.</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">[date]</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">Date and time of the request (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1123</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">"request"</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The request line as it came from the client  (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">status</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The HTTP status code returned to the client (<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>).</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">bytes</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The content-length of the document transferred.</fo:block></fo:block-container>
	</fo:block>

	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">combined</fo:inline> format is one line looking like this:
	<fo:inline font-family="monospace">remotehost rfc931 authuser [date] "request" status bytes "referer" "user_agent" </fo:inline></fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In addition to the earlier:</fo:block>
	<fo:block space-after="0.25em" space-before="0.25em">
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">"referer"</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The URL the client was on before
	requesting the URL (if it could not be determined, 
	a minus sign is placed in this field).</fo:block></fo:block-container>
	  <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">"user_agent"</fo:inline></fo:block>
	  <fo:block-container><fo:block start-indent="2em">The software the client claims to be using (if it
	could not be determined, a minus sign is placed in
	this field).</fo:block></fo:block-container>
	</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This affects the access logs written by <fo:inline font-family="monospace">mod_log</fo:inline> and 
	<fo:inline font-family="monospace">mod_disk_log</fo:inline>.
	</fo:block>	
      </fo:block></fo:block-container>      

      <fo:block keep-with-next.within-page="always">{error_log_format, pretty | compact}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Default is <fo:inline font-family="monospace">pretty</fo:inline>. If the error log is meant to be read
	directly by a human, <fo:inline font-family="monospace">pretty</fo:inline> is the best option.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">pretty</fo:inline> has a format corresponding to:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">io:format("[~s] ~s, reason: ~n ~p ~n~n", [Date, Msg, Reason]).</fo:block>

	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">compact</fo:inline> has a format corresponding to:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">io:format("[~s] ~s, reason: ~w ~n", [Date, Msg, Reason]).</fo:block>

	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This affects the error logs written by <fo:inline font-family="monospace">mod_log</fo:inline> and 
	<fo:inline font-family="monospace">mod_disk_log</fo:inline>.
	</fo:block>
      </fo:block></fo:block-container>
      
    </fo:block>
   
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">URL Aliasing Properties - Requires mod_alias</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{alias, {Alias, RealName}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Alias = string()</fo:inline> and <fo:inline font-family="monospace">RealName = string()</fo:inline>. 
	<fo:inline font-family="monospace">alias</fo:inline> allows documents to be stored in the local file
	system instead of the <fo:inline font-family="monospace">document_root</fo:inline> location. URLs with a path
	beginning with url-path is mapped to local files beginning with
	directory-filename, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{alias, {"/image", "/ftp/pub/image"}}</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Access to http://your.server.org/image/foo.gif would refer to
	the file /ftp/pub/image/foo.gif.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{re_write, {Re, Replacement}}</fo:block>      
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Re = string()</fo:inline> and <fo:inline font-family="monospace">Replacement = string()</fo:inline>. 
	<fo:inline font-family="monospace">re_write</fo:inline> allows documents to be stored in the local file
	system instead of the <fo:inline font-family="monospace">document_root</fo:inline> location. URLs are rewritten
        by <fo:inline font-family="monospace">re:replace/3</fo:inline> to produce a path in the local file-system,
        for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{re_write, {"^/[~]([^/]+)(.*)$", "/home/\\1/public\\2"}}</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Access to http://your.server.org/~bob/foo.gif would refer to
	the file /home/bob/public/foo.gif.

        In an Apache-like configuration file, <fo:inline font-family="monospace">Re</fo:inline> is separated
        from <fo:inline font-family="monospace">Replacement</fo:inline> with one single space, and as expected
        backslashes do not need to be backslash escaped, the
        same example would become:</fo:block>

        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">ReWrite ^/[~]([^/]+)(.*)$ /home/\1/public\2</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Beware of trailing space in <fo:inline font-family="monospace">Replacement</fo:inline> to be used.
        If you must have a space in <fo:inline font-family="monospace">Re</fo:inline>, use, for example, the character 
	encoding <fo:inline font-family="monospace">\040</fo:inline>, see 
	<fo:inline font-style="italic">re(3)</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{directory_index, [string()]}</fo:block>      
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">directory_index</fo:inline> specifies a list of resources to look for
	if a client requests a directory using a <fo:inline font-family="monospace">/</fo:inline> at the end of the
	directory name. <fo:inline font-family="monospace">file</fo:inline> depicts the name of a file in the
	directory. Several files can be given, in which case the server
	returns the first it finds, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{directory_index, ["index.html", "welcome.html"]}</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Access to http://your.server.org/docs/ would return
	http://your.server.org/docs/index.html or
	http://your.server.org/docs/welcome.html if index.html does not
	exist.</fo:block>
      </fo:block></fo:block-container> 
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">CGI Properties - Requires mod_cgi</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em"> 
      <fo:block keep-with-next.within-page="always">{script_alias, {Alias, RealName}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Alias = string()</fo:inline> and <fo:inline font-family="monospace">RealName = string()</fo:inline>.
	Have the same behavior as property <fo:inline font-family="monospace">alias</fo:inline>, except that
	they also mark the target directory as containing CGI
	scripts. URLs with a path beginning with url-path are mapped to
	scripts beginning with directory-filename, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{script_alias, {"/cgi-bin/", "/web/cgi-bin/"}}</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Access to http://your.server.org/cgi-bin/foo would cause
	the server to run the script /web/cgi-bin/foo.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{script_re_write, {Re, Replacement}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Re = string()</fo:inline> and <fo:inline font-family="monospace">Replacement = string()</fo:inline>.
	Have the same behavior as property <fo:inline font-family="monospace">re_write</fo:inline>, except that
	they also mark the target directory as containing CGI
	scripts. URLs with a path beginning with url-path are mapped to
	scripts beginning with directory-filename, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{script_re_write, {"^/cgi-bin/(\\d+)/", "/web/\\1/cgi-bin/"}}</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Access to http://your.server.org/cgi-bin/17/foo would cause
	the server to run the script /web/17/cgi-bin/foo.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{script_nocache, boolean()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">script_nocache</fo:inline> is set to <fo:inline font-family="monospace">true</fo:inline>, the HTTP server by
	default adds the header fields necessary to prevent proxies from
	caching the page. Generally this is preferred. 
	Default to <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{script_timeout, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The time in seconds the web server waits between each
	chunk of data from the script. If the CGI script does not deliver
	any data before the timeout, the connection to the client is
	closed. Default is <fo:inline font-family="monospace">15</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{action, {MimeType, CgiScript}} - requires mod_action</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MimeType = string()</fo:inline> and <fo:inline font-family="monospace">CgiScript = string()</fo:inline>.
	<fo:inline font-family="monospace">action</fo:inline> adds an action activating a CGI script
	whenever a file of a certain MIME type is requested. It
	propagates the URL and file path of the requested document using
	the standard CGI PATH_INFO and PATH_TRANSLATED environment
	variables.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>

	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{action, {"text/plain", "/cgi-bin/log_and_deliver_text"}}</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{script, {Method, CgiScript}} - requires mod_action</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Method = string()</fo:inline> and <fo:inline font-family="monospace">CgiScript = string()</fo:inline>.
	<fo:inline font-family="monospace">script</fo:inline> adds an action activating a CGI script
	whenever a file is requested using a certain HTTP method. The
	method is either GET or POST, as defined in <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>. It
	propagates the URL and file path of the requested document using
	the standard CGI PATH_INFO and PATH_TRANSLATED environment
	variables.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{script, {"PUT", "/cgi-bin/put"}}</fo:block>
	
      </fo:block></fo:block-container>
    </fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">ESI Properties - Requires mod_esi</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{erl_script_alias, {URLPath, [AllowedModule]}}</fo:block>      
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">URLPath = string()</fo:inline> and <fo:inline font-family="monospace">AllowedModule = atom()</fo:inline>.
	<fo:inline font-family="monospace">erl_script_alias</fo:inline> marks all URLs matching url-path as erl
	scheme scripts. A matching URL is mapped into a specific module
	and function, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{erl_script_alias, {"/cgi-bin/example", [httpd_example]}}</fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A request to
	http://your.server.org/cgi-bin/example/httpd_example:yahoo
	would refer to httpd_example:yahoo/3 or, if that does not exist,
	httpd_example:yahoo/2 and
	http://your.server.org/cgi-bin/example/other:yahoo would
	not be allowed to execute.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{erl_script_nocache, boolean()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">erl_script_nocache</fo:inline> is set to <fo:inline font-family="monospace">true</fo:inline>, the server adds
	HTTP header fields preventing proxies from caching the
	page. This is generally a good idea for dynamic content, as
	the content often varies between each request. 
	Default is <fo:inline font-family="monospace">false</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{erl_script_timeout, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">erl_script_timeout</fo:inline> sets the time in seconds the server
	waits between each chunk of data to be delivered through
	<fo:inline font-family="monospace">mod_esi:deliver/2</fo:inline>. Default is <fo:inline font-family="monospace">15</fo:inline>. This is only relevant
	for scripts that use the erl scheme.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{eval_script_alias, {URLPath, [AllowedModule]}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">URLPath = string()</fo:inline> and <fo:inline font-family="monospace">AllowedModule = atom()</fo:inline>.
	Same as <fo:inline font-family="monospace">erl_script_alias</fo:inline> but for scripts
	using the eval scheme. This is only supported
	for backwards compatibility. The eval scheme is deprecated.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Log Properties - Requires mod_log</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{error_log, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the filename of the error log file to be used to log
	server errors. If the filename does not begin with a slash (/),
	it is assumed to be relative to the <fo:inline font-family="monospace">server_root</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{security_log, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the filename of the access log file to be used to
	log security events. If the filename does not begin with a slash
	(/), it is assumed to be relative to the <fo:inline font-family="monospace">server_root</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{transfer_log, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the filename of the access log file to be used to
	log incoming requests. If the filename does not begin with a
	slash (/), it is assumed to be relative to the <fo:inline font-family="monospace">server_root</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Disk Log Properties - Requires mod_disk_log</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{disk_log_format, internal | external}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the file format of the log files. See <fo:inline font-family="monospace">disk_log</fo:inline> for
	details. If the internal file format is used, the
	log file is repaired after a crash. When a log file is
	repaired, data can disappear. When the external file format is
	used, <fo:inline font-family="monospace">httpd</fo:inline> does not start if the log file is broken. Default is
	<fo:inline font-family="monospace">external</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{error_disk_log, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the filename of the (<fo:inline font-family="monospace">disk_log(3)</fo:inline>) error log file
	to be used to log server errors. If the filename does not begin
	with a slash (/), it is assumed to be relative to the <fo:inline font-family="monospace">server_root</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{error_disk_log_size, {MaxBytes, MaxFiles}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MaxBytes = integer()</fo:inline> and <fo:inline font-family="monospace">MaxFiles = integer()</fo:inline>.
	Defines the properties of the (<fo:inline font-family="monospace">disk_log(3)</fo:inline>) error log
	file. This file is of type wrap log and
	max bytes is written to each file and max files is
	used before the first file is truncated and reused.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{security_disk_log, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the filename of the (<fo:inline font-family="monospace">disk_log(3)</fo:inline>) access log file
	logging incoming security events, that is, authenticated
	requests. If the filename does not begin with a slash (/), it
	is assumed to be relative to the <fo:inline font-family="monospace">server_root</fo:inline>.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{security_disk_log_size, {MaxBytes, MaxFiles}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MaxBytes = integer()</fo:inline> and <fo:inline font-family="monospace">MaxFiles = integer()</fo:inline>. 
	Defines the properties of the <fo:inline font-family="monospace">disk_log(3)</fo:inline> access log
	file. This file is of type wrap log and
	max bytes is written to each file and max files is
	used before the first file is truncated and reused.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{transfer_disk_log, path()}</fo:block> 
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines the filename of the (<fo:inline font-family="monospace">disk_log(3)</fo:inline>) access log file
	logging incoming requests. If the filename does not begin
	with a slash (/), it is assumed to be relative to the
	<fo:inline font-family="monospace">server_root</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{transfer_disk_log_size, {MaxBytes, MaxFiles}}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">MaxBytes = integer()</fo:inline> and <fo:inline font-family="monospace">MaxFiles = integer()</fo:inline>.  
	Defines the properties of the <fo:inline font-family="monospace">disk_log(3)</fo:inline> access log
	file. This file is of type wrap log and
	max bytes is written to each file and max files is
	used before the first file is truncated and reused.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Authentication Properties - Requires mod_auth</fo:inline></fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">{directory, {path(), [{property(), term()}]}}</fo:inline></fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The properties for directories are as follows:</fo:block>
    
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{allow_from, all | [RegxpHostString]}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines a set of hosts to be granted access to a
	given directory, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{allow_from, ["123.34.56.11", "150.100.23"]}</fo:block>
          
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The host <fo:inline font-family="monospace">123.34.56.11</fo:inline> and all machines on the <fo:inline font-family="monospace">150.100.23</fo:inline>
	subnet are allowed access.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{deny_from, all | [RegxpHostString]}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines a set of hosts
	to be denied access to a given directory, for example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">{deny_from, ["123.34.56.11", "150.100.23"]}</fo:block>
          
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The host <fo:inline font-family="monospace">123.34.56.11</fo:inline> and all machines on the <fo:inline font-family="monospace">150.100.23</fo:inline>
	subnet are not allowed access.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{auth_type, plain | dets | mnesia}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the type of authentication database that is used for the
	directory. The key difference between the different methods is
	that dynamic data can be saved when Mnesia and Dets
	are used.
	This property is called <fo:inline font-family="monospace">AuthDbType</fo:inline> in the Apache-like
	configuration files.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{auth_user_file, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the name of a file containing the list of users and
	passwords for user authentication. The filename can be either
	absolute or relative to the <fo:inline font-family="monospace">server_root</fo:inline>. If using the
	plain storage method, this file is a plain text file where
	each line contains a username followed by a colon, followed
	by the non-encrypted password. If usernames are duplicated,
	the behavior is undefined.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap"> ragnar:s7Xxv7
 edward:wwjau8 </fo:block> 

	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the Dets storage method is used, the user database is
	maintained by Dets and must not be edited by hand. Use the
	API functions in module <fo:inline font-family="monospace">mod_auth</fo:inline> to create/edit the user
	database. This directive is ignored if the Mnesia
	storage method is used. For security reasons, ensure that
	<fo:inline font-family="monospace">auth_user_file</fo:inline> is stored outside the document tree of the web
	server. If it is placed in the directory that it protects,
	clients can download it.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{auth_group_file, path()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the name of a file containing the list of user
	groups for user authentication. The filename can be either
	absolute or relative to the <fo:inline font-family="monospace">server_root</fo:inline>. If the plain
	storage method is used, the group file is a plain text file, where
	each line contains a group name followed by a colon, followed
	by the members usernames separated by spaces.</fo:block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
	
	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">group1: bob joe ante</fo:block>
          
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the Dets storage method is used, the group database is
	maintained by Dets and must not be edited by hand. Use the
	API for module <fo:inline font-family="monospace">mod_auth</fo:inline> to create/edit the group database.
	This directive is ignored if the Mnesia storage method is used.
	For security reasons, ensure that the <fo:inline font-family="monospace">auth_group_file</fo:inline> is
	stored outside the document tree of the web server. If it is
	placed in the directory that it protects, clients
	can download it.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{auth_name, string()}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the name of the authorization realm (auth-domain) for
	a directory. This string informs the client about which 
	username and password to use.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{auth_access_password, string()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If set to other than "NoPassword", the password is required
	for all API calls. If the password is set to "DummyPassword", the
	password must be changed before any other API calls. To secure
	the authenticating data, the password must be changed after the
	web server is started. Otherwise it is written in clear
	text in the configuration file.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{require_user, [string()]}</fo:block>
      <fo:block-container><fo:block start-indent="2em"> 
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines users to grant access to a given
	directory using a secret password.</fo:block>
      </fo:block></fo:block-container>

      <fo:block keep-with-next.within-page="always">{require_group, [string()]}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Defines users to grant access to a given
	directory using a secret password.</fo:block>
      </fo:block></fo:block-container>
      
    </fo:block>

     
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Htaccess Authentication Properties - Requires mod_htaccess</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{access_files, [path()]}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the filenames that are used for
	access files. When a request comes, every directory in the path
	to the requested asset are searched after files with the
	names specified by this parameter. If such a file is found, the
	file is parsed and the restrictions specified in it are
	applied to the request.</fo:block>
      </fo:block></fo:block-container>
    </fo:block>

    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Security Properties - Requires mod_security</fo:inline></fo:block>
 
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">{security_directory, {path(), [{property(), term()}]}}</fo:inline></fo:block>
       
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The properties for the security directories are as follows:</fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always">{data_file, path()}</fo:block>      
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Name of the security data file. The filename can either be
	absolute or relative to the <fo:inline font-family="monospace">server_root</fo:inline>. This file is used to
	store persistent data for module <fo:inline font-family="monospace">mod_security</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
	  
      <fo:block keep-with-next.within-page="always">{max_retries, integer()}</fo:block>	  
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the maximum number of attempts to authenticate a
	user before the user is blocked out. If a user
	successfully authenticates while blocked, the
	user receives a 403 (Forbidden) response from the
	server. If the user makes a failed attempt while blocked, the
	server returns 401 (Unauthorized), for security
	reasons. 
	Default is <fo:inline font-family="monospace">3</fo:inline>. Can be set to infinity.</fo:block>
      </fo:block></fo:block-container>
	
      <fo:block keep-with-next.within-page="always">{block_time, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the number of minutes a user is blocked. After
	this timehas passed, the user automatically regains access.
	Default is <fo:inline font-family="monospace">60</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{fail_expire_time, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Specifies the number of minutes a failed user authentication
	is remembered. If a user authenticates after this
	time has passed, the previous failed authentications are
	forgotten. 
	Default is <fo:inline font-family="monospace">30</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      
      <fo:block keep-with-next.within-page="always">{auth_timeout, integer()}</fo:block>
      <fo:block-container><fo:block start-indent="2em">
	Specifies the number of seconds a successful user
	authentication is remembered. After this time has passed, the
	authentication is no longer reported. Default is <fo:inline font-family="monospace">30</fo:inline>.
      </fo:block></fo:block-container>
    </fo:block>    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3591104">info(Pid) -&gt;</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3591552">info(Pid, Properties) -&gt; [{Option, Value}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Properties = [property()]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Fetches information about the HTTP server. When called
	with only the pid, all properties are fetched. When called
	with a list of specific properties, they are fetched.
	The available properties are the same as the start options
	of the server. 
	</fo:block>
	
	<fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Pid is the pid returned from <fo:inline font-family="monospace">inets:start/[2,3]</fo:inline>. 
	    Can also be retrieved form <fo:inline font-family="monospace">inets:services/0</fo:inline> and
	    <fo:inline font-family="monospace">inets:services_info/0</fo:inline>,
	    see <fo:inline font-style="italic">inets(3)</fo:inline>.
	  </fo:block></fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3598576">info(Address, Port) -&gt;  </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3599040">info(Address, Port, Profile) -&gt;  </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3599504">info(Address, Port, Profile, Properties) -&gt; [{Option, Value}] </fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3600000">info(Address, Port, Properties) -&gt; [{Option, Value}] </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = ip_address()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Profile = atom()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Properties = [property()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Fetches information about the HTTP server. When called with
        only <fo:inline font-family="monospace">Address</fo:inline> and <fo:inline font-family="monospace">Port</fo:inline>, all properties are
        fetched.  When called with a list of specific properties, they
        are fetched.  The available properties are the same as the
        start options of the server.
	</fo:block>

	<fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The address must be the IP address and cannot be
	    the hostname.
	  </fo:block></fo:block>	
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3607216">reload_config(Config, Mode) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Config = path() | [{Option, Value}]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Mode = non_disturbing | disturbing</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Reloads the HTTP server configuration without restarting the
	  server. Incoming requests are answered with a temporary
	  down message during the reload time.</fo:block>
	
	<fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Available properties are the same as the
	    start options of the server, but the properties 
	    <fo:inline font-family="monospace">bind_address</fo:inline> and <fo:inline font-family="monospace">port</fo:inline> 
	    cannot be changed.</fo:block></fo:block>
	
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If mode is disturbing, the server is blocked forcefully,
	  all ongoing requests terminates, and the reload
	  starts immediately. If mode is non-disturbing, no new
	  connections are accepted, but ongoing requests are
	  allowed to complete before the reload is done.</fo:block>
      </fo:block>
  

  <fo:block id="idp3614384" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">ERLANG WEB SERVER API DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Erlang web server API data types are as follows:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      ModData = #mod{}

      -record(mod, {
		data = [],
		socket_type = ip_comm,
		socket, 
		config_db,
		method,
		absolute_uri,
		request_uri,
		http_version,
		request_line,
		parsed_header = [],
		entity_body,
		connection
	}).</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To acess the record in your callback-module use:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap"> -include_lib("inets/include/httpd.hrl").</fo:block>

    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The fields of record <fo:inline font-family="monospace">mod</fo:inline> have the following meaning:
      </fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">data</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type <fo:inline font-family="monospace">[{InteractionKey,InteractionValue}]</fo:inline> is used to
       propagate data between modules. Depicted
      <fo:inline font-family="monospace">interaction_data()</fo:inline> in function type declarations.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">socket_type</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">socket_type()</fo:inline>
       indicates whether it is an IP socket or an <fo:inline font-family="monospace">ssl</fo:inline> socket.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">socket</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The socket, in format <fo:inline font-family="monospace">ip_comm</fo:inline> or <fo:inline font-family="monospace">ssl</fo:inline>,
       depending on <fo:inline font-family="monospace">socket_type</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">config_db</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The config file directives stored as key-value tuples in
       an ETS table. Depicted <fo:inline font-family="monospace">config_db()</fo:inline> in function type
       declarations.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">method</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type <fo:inline font-family="monospace">"GET" | "POST" | "HEAD" | "TRACE"</fo:inline>, that is, the
       HTTP method.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">absolute_uri</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the request is an HTTP/1.1
       request, the URI can be in the absolute URI format. In that
       case, <fo:inline font-family="monospace">httpd</fo:inline> saves the absolute URI in this field. An Example
       of an absolute URI is 
      <fo:inline font-family="monospace">"http://ServerName:Part/cgi-bin/find.pl?person=jocke"</fo:inline></fo:block></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">request_uri</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">Request-URI</fo:inline> as defined
       in <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>, for example, <fo:inline font-family="monospace">"/cgi-bin/find.pl?person=jocke"</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">http_version</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">HTTP</fo:inline> version of the
       request, that is, "HTTP/0.9", "HTTP/1.0", or "HTTP/1.1".</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">request_line</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">Request-Line</fo:inline> as
       defined in<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>, for example, 
       <fo:inline font-family="monospace">"GET /cgi-bin/find.pl?person=jocke HTTP/1.0"</fo:inline>.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">parsed_header</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Type <fo:inline font-family="monospace">[{HeaderKey,HeaderValue}]</fo:inline>.
      <fo:inline font-family="monospace">parsed_header</fo:inline> contains all HTTP header fields from the
      HTTP request stored in a list as key-value tuples. See
      <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>
      for a listing of all header fields. For example, the date field
      is stored as <fo:inline font-family="monospace">{"date","Wed, 15 Oct 1997 14:35:17 GMT"}</fo:inline>.
      RFC 2616 defines that HTTP is a case-insensitive protocol and
      the header fields can be in lower case or upper case. <fo:inline font-family="monospace">httpd</fo:inline>
      ensures that all header field names are in lower case.
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">entity_body</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">entity-Body</fo:inline> as defined
       in <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>, for example, data sent from a CGI script using the
       POST method.</fo:block>
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">connection</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">true | false</fo:inline>. If set to <fo:inline font-family="monospace">true</fo:inline>, the connection to the
       client is a persistent connection and is not closed when
       the request is served.</fo:block></fo:block></fo:block-container>
    </fo:block>
  

  <fo:block id="idp3648288" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">ERLANG WEB SERVER API CALLBACK FUNCTIONS</fo:block>
    
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3649504">Module:do(ModData)-&gt; {proceed, OldData} | {proceed, NewData} | {break, NewData} | done</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">OldData = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewData = [{response,{StatusCode,Body}}]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| [{response,{response,Head,Body}}]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| [{response,{already_sent,Statuscode,Size}}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StatusCode = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Body = io_list() | nobody | {Fun, Arg}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Head = [HeaderOption]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HeaderOption = {Option, Value} | {code, StatusCode}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = accept_ranges | allow</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| cache_control | content_MD5</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| content_encoding | content_language</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| content_length | content_location</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| content_range | content_type | date</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| etag | expires | last_modified</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| location | pragma | retry_after</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">| server | trailer | transfer_encoding</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Fun = fun( Arg ) -&gt; sent| close | Body </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Arg = [term()]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a valid request reaches <fo:inline font-family="monospace">httpd</fo:inline>, it calls <fo:inline font-family="monospace">do/1</fo:inline> in
          each module, defined by the configuration
          option of <fo:inline font-family="monospace">Module</fo:inline>. The function can generate data for other
	  modules or a response that can be sent back to the client.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The field <fo:inline font-family="monospace">data</fo:inline> in <fo:inline font-family="monospace">ModData</fo:inline> is a list. This list is
          the list returned from the last call to
          <fo:inline font-family="monospace">do/1</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Body</fo:inline> is the body of the HTTP response that is
          sent back to the client. An appropriate header is
          appended to the message. <fo:inline font-family="monospace">StatusCode</fo:inline> is the
          status code of the response, see 
	  <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline> 
	  for the appropriate values.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Head</fo:inline> is a key value list of HTTP header fields. The
        server constructs an HTTP header from this data. See <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>  for the appropriate value for each header field. If the
        client is an HTTP/1.0 client, the server filters the
        list so that only HTTP/1.0 header fields are sent back
        to the client.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">Body</fo:inline> is returned and equal to <fo:inline font-family="monospace">{Fun,Arg}</fo:inline>,
          the web server tries <fo:inline font-family="monospace">apply/2</fo:inline> on <fo:inline font-family="monospace">Fun</fo:inline> with
          <fo:inline font-family="monospace">Arg</fo:inline> as argument. The web server expects that the fun either
          returns a list <fo:inline font-family="monospace">(Body)</fo:inline> that is an HTTP repsonse, or the
          atom <fo:inline font-family="monospace">sent</fo:inline> if the HTTP response is sent back to the
          client. If <fo:inline font-family="monospace">close</fo:inline> is returned from the fun, something has gone
          wrong and the server signals this to the client by
          closing the connection.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3672640">Module:load(Line, AccIn)-&gt; eof | ok | {ok, AccOut} | {ok, AccOut, {Option, Value}} | {ok, AccOut, [{Option, Value}]} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Line = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AccIn = [{Option, Value}]</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AccOut = [{Option, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term() </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Converts a line in an Apache-like
	  configuration file to an <fo:inline font-family="monospace">{Option, Value}</fo:inline> tuple. Some
	  more complex configuration options, such as <fo:inline font-family="monospace">directory</fo:inline>
	  and <fo:inline font-family="monospace">security_directory</fo:inline>, create an
	  accumulator. This function only needs clauses for the
	  options implemented by this particular callback module.
	</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3680192">Module:remove(ConfigDB) -&gt; ok | {error, Reason} </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = ets_table()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When <fo:inline font-family="monospace">httpd</fo:inline> is shut down, it tries to execute
          <fo:inline font-family="monospace">remove/1</fo:inline> in each Erlang web server callback module. The
          programmer can use this function to clean up resources
          created in the store function.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3684928">Module:store({Option, Value}, Config)-&gt; {ok, {Option, NewValue}} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Line = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = property()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Config = [{Option, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Checks the validity of the
	  configuration options before saving them in the internal
	  database. This function can also have a side effect,
	  that is, setup of necessary extra resources implied by the
	  configuration option. It can also
	  resolve possible dependencies among
	  configuration options by changing the value of the option.
	  This function only needs clauses for the options
	  implemented by this particular callback module.</fo:block>
      </fo:block>
  

  <fo:block id="idp3690560" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">ERLANG WEB SERVER API HELP FUNCTIONS</fo:block>
    
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3691760">parse_query(QueryString) -&gt; [{Key,Value}]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">QueryString = string()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = string()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">parse_query/1</fo:inline> parses incoming data to <fo:inline font-family="monospace">erl</fo:inline> and
          <fo:inline font-family="monospace">eval</fo:inline> scripts (see <fo:inline font-style="italic">mod_esi(3)</fo:inline>) 
	  as defined in the standard
          URL format, that is, '+' becomes 'space' and decoding of
          hexadecimal characters (<fo:inline font-family="monospace">%xx</fo:inline>).</fo:block>
      </fo:block>
  

  <fo:block id="idp3699376" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>, 
    <fo:inline font-style="italic">inets(3)</fo:inline>,
    <fo:inline font-style="italic">ssl(3)</fo:inline>
    </fo:block>
  

<fo:block page-break-before="always" id="idp3707712" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">httpd_custom_api</fo:marker>httpd_custom_api</fo:block>Erlang module</fo:block>
  <fo:block/>
  httpd_custom_api
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"> The module implementing this behaviour shall be supplied to to the servers
    configuration with the option <fo:inline font-style="italic"> customize</fo:inline></fo:block>
    
    
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3710784">response_default_headers() -&gt; [Header] </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Header = {HeaderName :: string(), HeaderValue::string()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>string:to_lower/1 will be performed on the HeaderName</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Provide default headers for the HTTP servers responses. Note that this
	option may override built-in defaults. 
	</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3714592">response_header({HeaderName, HeaderValue}) -&gt;  {true, Header} | false </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Header = {HeaderName :: string(), HeaderValue::string()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The header name will be in lower case and should not be altered.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"> Filter and possible alter HTTP response headers before they are sent to the client.
	</fo:block>
      </fo:block>
   
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3718416">request_header({HeaderName, HeaderValue}) -&gt;   {true, Header} | false </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Header = {HeaderName :: string(), HeaderValue::string()}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The header name will be in lower case and should not be altered.</fo:block></fo:list-item-body></fo:list-item>
	</fo:list-block>
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"> Filter and possible alter HTTP request headers before they are processed by the server.
	  </fo:block>
	</fo:block>
  
<fo:block page-break-before="always" id="idp3729024" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">httpd_socket</fo:marker>httpd_socket</fo:block>Erlang module</fo:block>
  <fo:block/>
  httpd_socket
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides the Erlang web server API module programmer
    with utility functions for generic sockets communication. The
    appropriate communication mechanism is transparently used, that
    is, <fo:inline font-family="monospace">ip_comm</fo:inline> or <fo:inline font-family="monospace">ssl</fo:inline>.</fo:block>
    
    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3733104">deliver(SocketType, Socket, Data) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SocketType = socket_type()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Socket = socket()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = io_list() | binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = socket_closed | void()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">deliver/3</fo:inline> sends <fo:inline font-family="monospace">Data</fo:inline> over
	<fo:inline font-family="monospace">Socket</fo:inline> using the specified <fo:inline font-family="monospace">SocketType</fo:inline>. <fo:inline font-family="monospace">Socket</fo:inline>
	and <fo:inline font-family="monospace">SocketType</fo:inline> is to be the socket and the <fo:inline font-family="monospace">socket_type</fo:inline> 
	form the <fo:inline font-family="monospace">mod</fo:inline> record as defined in <fo:inline font-family="monospace">httpd.hrl</fo:inline></fo:block>
    
	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3742528">peername(SocketType,Socket) -&gt; {Port,IPAddress}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SocketType = socket_type()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Socket = socket()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IPAddress = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">peername/2</fo:inline> returns the <fo:inline font-family="monospace">Port</fo:inline> and
	<fo:inline font-family="monospace">IPAddress</fo:inline> of the remote <fo:inline font-family="monospace">Socket</fo:inline>.</fo:block>
    
	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3749840">resolve() -&gt; HostName</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HostName = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">resolve/0</fo:inline> returns the official <fo:inline font-family="monospace">HostName</fo:inline> of
	the current host. </fo:block>
      </fo:block>
  

  <fo:block id="idp3755024" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">httpd(3)</fo:inline></fo:block>
  
  
<fo:block page-break-before="always" id="idp3763376" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">httpd_util</fo:marker>httpd_util</fo:block>Erlang module</fo:block>
  <fo:block/>
  httpd_util
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides the Erlang web server API module
      programmer with miscellaneous utility functions.</fo:block>

    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3766480">convert_request_date(DateString) -&gt; ErlDate|bad_date</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">DateString = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ErlDate = {{Year,Month,Date},{Hour,Min,Sec}}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Year = Month = Date = Hour = Min = Sec = integer()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">convert_request_date/1</fo:inline> converts <fo:inline font-family="monospace">DateString</fo:inline> to 
          the Erlang date format. <fo:inline font-family="monospace">DateString</fo:inline> must be in one of the 
	  three date formats defined in 
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3772624">create_etag(FileInfo) -&gt; Etag</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FileInfo = file_info()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Etag = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">create_etag/1</fo:inline> calculates the Etag for a file from its
          size and time for last modification. <fo:inline font-family="monospace">FileInfo</fo:inline> is a record defined 
          in <fo:inline font-family="monospace">kernel/include/file.hrl</fo:inline>.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3777520">day(NthDayOfWeek) -&gt; DayOfWeek</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NthDayOfWeek = 1-7</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">DayOfWeek = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">day/1</fo:inline> converts the day of the week
          (<fo:inline font-family="monospace">NthDayOfWeek</fo:inline>) from an integer (1-7) to an abbreviated
          string, that is:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">1 = "Mon", 2 = "Tue", ..., 7 = "Sat".</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3782464">decode_hex(HexValue) -&gt; DecValue</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HexValue = DecValue = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Converts the hexadecimal value <fo:inline font-family="monospace">HexValue</fo:inline> into its
          decimal equivalent (<fo:inline font-family="monospace">DecValue</fo:inline>).</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3786624">flatlength(NestedList) -&gt; Size</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NestedList = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Size = integer()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">flatlength/1</fo:inline> computes the size of the possibly nested
          list <fo:inline font-family="monospace">NestedList</fo:inline>, which can contain binaries.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3791056">hexlist_to_integer(HexString) -&gt; Number</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Number = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HexString = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">hexlist_to_integer</fo:inline> converts the hexadecimal value of 
          <fo:inline font-family="monospace">HexString</fo:inline> to an integer.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3795456">integer_to_hexlist(Number) -&gt; HexString</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Number = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HexString = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">integer_to_hexlist/1</fo:inline> returns a string representing
          <fo:inline font-family="monospace">Number</fo:inline> in a hexadecimal form.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3799856">lookup(ETSTable,Key) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3800320">lookup(ETSTable,Key,Undefined) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ETSTable = ets_table()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = term() | undefined | Undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Undefined = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">lookup</fo:inline> extracts <fo:inline font-family="monospace">{Key,Value}</fo:inline> tuples from
          <fo:inline font-family="monospace">ETSTable</fo:inline> and returns the <fo:inline font-family="monospace">Value</fo:inline> associated  
          with <fo:inline font-family="monospace">Key</fo:inline>. If <fo:inline font-family="monospace">ETSTable</fo:inline> is of type <fo:inline font-family="monospace">bag</fo:inline>,
          only the first <fo:inline font-family="monospace">Value</fo:inline> associated with <fo:inline font-family="monospace">Key</fo:inline> is
          returned. <fo:inline font-family="monospace">lookup/2</fo:inline> returns <fo:inline font-family="monospace">undefined</fo:inline> and
          <fo:inline font-family="monospace">lookup/3</fo:inline> returns <fo:inline font-family="monospace">Undefined</fo:inline> if no <fo:inline font-family="monospace">Value</fo:inline>
          is found.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3811504">lookup_mime(ConfigDB,Suffix)</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3811968">lookup_mime(ConfigDB,Suffix,Undefined) -&gt; MimeType</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = ets_table()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Suffix = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MimeType = string() | undefined | Undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Undefined = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">lookup_mime</fo:inline> returns the MIME type associated with a
          specific file suffix as specified in the file <fo:inline font-family="monospace">mime.types</fo:inline>
          (located in the 
          
	config directory).</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3818416">lookup_mime_default(ConfigDB,Suffix)</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3818880">lookup_mime_default(ConfigDB,Suffix,Undefined) -&gt; MimeType</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = ets_table()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Suffix = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MimeType = string() | undefined | Undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Undefined = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">lookup_mime_default</fo:inline> returns the MIME type associated
          with a specific file suffix as specified in the
          <fo:inline font-family="monospace">mime.types</fo:inline> file (located in the
          
	    config  directory). 
          If no appropriate association is found, the value of <fo:inline font-family="monospace">DefaultType</fo:inline> is
          returned.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3825872">message(StatusCode,PhraseArgs,ConfigDB) -&gt; Message</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StatusCode = 301 | 400 | 403 | 404 | 500 | 501 | 504</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PhraseArgs = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = ets_table</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Message = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">message/3</fo:inline> returns an informative HTTP 1.1 status
          string in HTML. Each <fo:inline font-family="monospace">StatusCode</fo:inline> requires a specific
          <fo:inline font-family="monospace">PhraseArgs</fo:inline>:
          </fo:block>
        <fo:block space-after="0.25em" space-before="0.25em">
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">301</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline>: A URL pointing at the new document
           position.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">400 | 401 | 500</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">none</fo:inline> (no <fo:inline font-family="monospace">PhraseArgs</fo:inline>).</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">403 | 404</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline>: A <fo:inline font-family="monospace">Request-URI</fo:inline> as described in
          <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.</fo:block>
	  </fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">501</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">{Method,RequestURI,HTTPVersion}</fo:inline>: The HTTP
          <fo:inline font-family="monospace">Method</fo:inline>, <fo:inline font-family="monospace">Request-URI</fo:inline>, and <fo:inline font-family="monospace">HTTP-Version</fo:inline>
           as defined in RFC 2616.</fo:block></fo:block></fo:block-container>
          <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">504</fo:inline></fo:block>
          <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline>: A string describing why the service
           was unavailable.</fo:block></fo:block></fo:block-container>
        </fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3842624">month(NthMonth) -&gt; Month</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NthMonth = 1-12</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Month = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">month/1</fo:inline> converts the month <fo:inline font-family="monospace">NthMonth</fo:inline> as an
          integer (1-12) to an abbreviated string, that is: </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">1 = "Jan", 2 = "Feb", ..., 12 = "Dec".</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3847520">multi_lookup(ETSTable,Key) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ETSTable = ets_table()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = [term()]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">multi_lookup</fo:inline> extracts all <fo:inline font-family="monospace">{Key,Value}</fo:inline> tuples
          from an <fo:inline font-family="monospace">ETSTable</fo:inline> and returns <fo:inline font-weight="bold">all</fo:inline> <fo:inline font-family="monospace">Values</fo:inline> 
	associated with <fo:inline font-family="monospace">Key</fo:inline> in a list.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3854160">reason_phrase(StatusCode) -&gt; Description</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StatusCode = 100| 200 | 201 | 202 | 204 | 205 | 206 | 300 | 301 | 302 | 303 | 304 | 400 | 401 | 402 | 403 | 404 | 405 | 406 | 410 411 | 412 | 413 | 414 415 | 416 | 417 | 500 | 501 | 502 | 503 | 504 | 505</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Description = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">reason_phrase</fo:inline> returns <fo:inline font-family="monospace">Description</fo:inline> of an
          HTTP 1.1 <fo:inline font-family="monospace">StatusCode</fo:inline>, for example, 200 is "OK" and 201
          is "Created". For more information, see
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3860000">rfc1123_date() -&gt; RFC1123Date</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3860464">rfc1123_date({{YYYY,MM,DD},{Hour,Min,Sec}}) -&gt; RFC1123Date</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">YYYY = MM = DD = Hour = Min = Sec = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RFC1123Date = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">rfc1123_date/0</fo:inline> returns the current date in RFC 1123
          format. <fo:inline font-family="monospace">rfc_date/1</fo:inline> converts the date in the Erlang format
          to the RFC 1123 date format.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3865008">split(String,RegExp,N) -&gt; SplitRes</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">String = RegExp = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SplitRes = {ok, FieldList} | {error, errordesc()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Fieldlist = [string()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">N = integer</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">split/3</fo:inline> splits <fo:inline font-family="monospace">String</fo:inline> in <fo:inline font-family="monospace">N</fo:inline> chunks
          using <fo:inline font-family="monospace">RegExp</fo:inline>. <fo:inline font-family="monospace">split/3</fo:inline> is equivalent to
          <fo:inline font-family="monospace">regexp:split/2</fo:inline> with the exception that <fo:inline font-family="monospace">N</fo:inline>
          defines the maximum number of fields in
          <fo:inline font-family="monospace">FieldList</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3873104">split_script_path(RequestLine) -&gt; Splitted</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RequestLine = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Splitted = not_a_script | {Path, PathInfo, QueryString}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Path = QueryString = PathInfo = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">split_script_path/1</fo:inline> is equivalent to
          <fo:inline font-family="monospace">split_path/1</fo:inline> with one exception. If the longest
          possible path is not a regular, accessible, and executable
          file, then <fo:inline font-family="monospace">not_a_script</fo:inline> is returned.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3879920">split_path(RequestLine) -&gt; {Path,QueryStringOrPathInfo}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RequestLine = Path = QueryStringOrPathInfo = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">split_path/1</fo:inline> splits <fo:inline font-family="monospace">RequestLine</fo:inline> in a file
          reference (<fo:inline font-family="monospace">Path</fo:inline>), and a <fo:inline font-family="monospace">QueryString</fo:inline> or a
          <fo:inline font-family="monospace">PathInfo</fo:inline> string as specified in
	  <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 2616</fo:basic-link></fo:inline>.
	  A <fo:inline font-family="monospace">QueryString</fo:inline> is isolated from <fo:inline font-family="monospace">Path</fo:inline> with a
          question mark (<fo:inline font-family="monospace">?</fo:inline>) and <fo:inline font-family="monospace">PathInfo</fo:inline> with a slash
          (/). In the case of a <fo:inline font-family="monospace">QueryString</fo:inline>, everything before
          <fo:inline font-family="monospace">?</fo:inline> is a <fo:inline font-family="monospace">Path</fo:inline> and everything after <fo:inline font-family="monospace">?</fo:inline> is a
          <fo:inline font-family="monospace">QueryString</fo:inline>. In the case of a <fo:inline font-family="monospace">PathInfo</fo:inline>,
          <fo:inline font-family="monospace">RequestLine</fo:inline> is scanned from left-to-right on the hunt
          for longest possible <fo:inline font-family="monospace">Path</fo:inline> being a file or a
          directory. Everything after the longest possible
          <fo:inline font-family="monospace">Path</fo:inline>, isolated with a <fo:inline font-family="monospace">/</fo:inline>, is regarded as
          <fo:inline font-family="monospace">PathInfo</fo:inline>. The resulting <fo:inline font-family="monospace">Path</fo:inline> is decoded using
          <fo:inline font-family="monospace">decode_hex/1</fo:inline> before delivery.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3895184">strip(String) -&gt; Stripped</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">String = Stripped = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">strip/1</fo:inline> removes any leading or trailing linear white
          space from the string. Linear white space is to be read as
          horizontal tab or space.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3899264">suffix(FileName) -&gt; Suffix</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">FileName = Suffix = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">suffix/1</fo:inline> is equivalent to
          <fo:inline font-family="monospace">filename:extension/1</fo:inline> with the exception that
          <fo:inline font-family="monospace">Suffix</fo:inline> is returned without a leading dot (<fo:inline font-family="monospace">.</fo:inline>).</fo:block>
      </fo:block>
  

  <fo:block id="idp3904304" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">httpd(3)</fo:inline></fo:block>
  
  
<fo:block page-break-before="always" id="idp3912656" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">mod_alias</fo:marker>mod_alias</fo:block>Erlang module</fo:block>
  <fo:block/>
  mod_alias
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Erlang web server internal API for handling of, for example,
    interaction data exported by module <fo:inline font-family="monospace">mod_alias</fo:inline>.</fo:block>

    
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3916112">default_index(ConfigDB, Path) -&gt; NewPath</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = config_db()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Path = NewPath = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">Path</fo:inline> is a directory, <fo:inline font-family="monospace">default_index/2</fo:inline>, it starts
	searching for resources or files that are specified in the config
	directive <fo:inline font-family="monospace">DirectoryIndex</fo:inline>.
	If an appropriate resource or file is found, it is appended to
	the end of <fo:inline font-family="monospace">Path</fo:inline> and then returned. <fo:inline font-family="monospace">Path</fo:inline> is
	returned unaltered if no appropriate
	file is found or if <fo:inline font-family="monospace">Path</fo:inline> is not a directory.
	<fo:inline font-family="monospace">config_db()</fo:inline> is the server config file in ETS table format
	as described in
	<fo:inline font-style="italic">Inets User's Guide</fo:inline>.</fo:block>

	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3925008">path(PathData, ConfigDB, RequestURI) -&gt; Path</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PathData = interaction_data()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = config_db()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RequestURI = Path = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">path/3</fo:inline> returns the file <fo:inline font-family="monospace">Path</fo:inline> in the
	<fo:inline font-family="monospace">RequestURI</fo:inline> (see 
	<fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 1945</fo:basic-link></fo:inline>). 
	If the interaction data <fo:inline font-family="monospace">{real_name,{Path,AfterPath}}</fo:inline> 
	has been exported by <fo:inline font-family="monospace">mod_alias</fo:inline>,
	<fo:inline font-family="monospace">Path</fo:inline> is returned. If no interaction data has been
	exported, <fo:inline font-family="monospace">ServerRoot</fo:inline> is used to
	generate a file <fo:inline font-family="monospace">Path</fo:inline>. <fo:inline font-family="monospace">config_db()</fo:inline> and
	<fo:inline font-family="monospace">interaction_data()</fo:inline> are as defined in 
	<fo:inline font-style="italic">Inets User's Guide</fo:inline>.</fo:block>

	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3936128">real_name(ConfigDB, RequestURI, Aliases) -&gt; Ret</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = config_db()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RequestURI = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Aliases = [{FakeName,RealName}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ret = {ShortPath,Path,AfterPath}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ShortPath = Path = AfterPath = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">real_name/3</fo:inline> traverses <fo:inline font-family="monospace">Aliases</fo:inline>, typically
	extracted from <fo:inline font-family="monospace">ConfigDB</fo:inline>, and matches each
	<fo:inline font-family="monospace">FakeName</fo:inline> with <fo:inline font-family="monospace">RequestURI</fo:inline>. If a match is found, 
	<fo:inline font-family="monospace">FakeName</fo:inline> is replaced with <fo:inline font-family="monospace">RealName</fo:inline> in the
	match. The resulting path is split into two parts,
	<fo:inline font-family="monospace">ShortPath</fo:inline> and <fo:inline font-family="monospace">AfterPath</fo:inline>, as defined in 
	<fo:inline font-style="italic">httpd_util:split_path/1</fo:inline>. 
	<fo:inline font-family="monospace">Path</fo:inline> is generated from <fo:inline font-family="monospace">ShortPath</fo:inline>, that is,
	the result from 
	<fo:inline font-style="italic">default_index/2</fo:inline> with
	<fo:inline font-family="monospace">ShortPath</fo:inline> as an argument.
	<fo:inline font-family="monospace">config_db()</fo:inline> is the server config file in ETS table
	format as described in 
	<fo:inline font-style="italic">Inets User's Guide</fo:inline>.</fo:block>

	
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3950688">real_script_name(ConfigDB, RequestURI, ScriptAliases) -&gt; Ret</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigDB = config_db()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RequestURI = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ScriptAliases = [{FakeName,RealName}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ret = {ShortPath,AfterPath} | not_a_script</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ShortPath = AfterPath = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">real_script_name/3</fo:inline> traverses <fo:inline font-family="monospace">ScriptAliases</fo:inline>,
	typically extracted from <fo:inline font-family="monospace">ConfigDB</fo:inline>, and matches each
	<fo:inline font-family="monospace">FakeName</fo:inline> with <fo:inline font-family="monospace">RequestURI</fo:inline>. If a match is found,
	<fo:inline font-family="monospace">FakeName</fo:inline> is replaced with <fo:inline font-family="monospace">RealName</fo:inline> in the
	match. If the resulting match is not an executable script,
	<fo:inline font-family="monospace">not_a_script</fo:inline> is returned. If it is a script, the
	resulting script path is in two parts,
	<fo:inline font-family="monospace">ShortPath</fo:inline> and <fo:inline font-family="monospace">AfterPath</fo:inline>, as defined in 
	<fo:inline font-style="italic">httpd_util:split_script_path/1</fo:inline>.
	<fo:inline font-family="monospace">config_db()</fo:inline> is the server config file in ETS table
	format as described in 
	<fo:inline font-style="italic">Inets User's Guide</fo:inline>.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp3969968" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">mod_auth</fo:marker>mod_auth</fo:block>Erlang module</fo:block>
  <fo:block/>
  mod_auth
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides for basic user authentication using
    textual files, Dets databases, or Mnesia databases.</fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3972480">add_group_member(GroupName, UserName, Options) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3972992">add_group_member(GroupName, UserName, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3973504">add_group_member(GroupName, UserName, Address, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GroupName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">add_group_member/3, add_group_member/4</fo:inline>, and 
	<fo:inline font-family="monospace">add_group_member/5</fo:inline> each
	adds a user to a group. If the group does not exist, it 
	is created and the user is added to the group. Upon successful 
	operation, this function returns <fo:inline font-family="monospace">true</fo:inline>. 
	When <fo:inline font-family="monospace">add_group_members/3</fo:inline> 
	is called, options <fo:inline font-family="monospace">Port</fo:inline> and <fo:inline font-family="monospace">Dir</fo:inline> are mandatory.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3983072">add_user(UserName, Options) -&gt; true| {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3983552">add_user(UserName, Password, UserData, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3984064">add_user(UserName, Password, UserData, Address, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {password,Password} | {userData,UserData} | {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Password = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserData = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword =string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">add_user/2, add_user/5</fo:inline>, and <fo:inline font-family="monospace">add_user/6</fo:inline> each adds a 
	user to the user database. If the operation is successful, 
	this function returns <fo:inline font-family="monospace">true</fo:inline>. If an error occurs, 
	<fo:inline font-family="monospace">{error,Reason}</fo:inline> is returned. 
	When <fo:inline font-family="monospace">add_user/2</fo:inline> is called, options <fo:inline font-family="monospace">Password</fo:inline>, 
	<fo:inline font-family="monospace">UserData</fo:inline>, <fo:inline font-family="monospace">Port</fo:inline>, and <fo:inline font-family="monospace">Dir</fo:inline> are mandatory.</fo:block>
      </fo:block>

     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3995424">delete_group(GroupName, Options) -&gt; true | {error,Reason} &lt;name&gt;delete_group(GroupName, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3995984">delete_group(GroupName, Address, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GroupName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">delete_group/2, delete_group/3</fo:inline>, and <fo:inline font-family="monospace">delete_group/4</fo:inline> 
	each deletes the group specified and returns <fo:inline font-family="monospace">true</fo:inline>. 
	If there is an error, <fo:inline font-family="monospace">{error, Reason}</fo:inline> is returned. 
	When <fo:inline font-family="monospace">delete_group/2</fo:inline> is called, option
	<fo:inline font-family="monospace">Port</fo:inline> and <fo:inline font-family="monospace">Dir</fo:inline> are mandatory.</fo:block>
      </fo:block>

     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4005440">delete_group_member(GroupName, UserName, Options) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4005952">delete_group_member(GroupName, UserName, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4006464">delete_group_member(GroupName, UserName, Address, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GroupName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">delete_group_member/3, delete_group_member/4</fo:inline>, and 
	<fo:inline font-family="monospace">delete_group_member/5</fo:inline> each deletes a user from a group. 
	If the group or the user does not exist, 
	this function returns an error, otherwise <fo:inline font-family="monospace">true</fo:inline>.
	When <fo:inline font-family="monospace">delete_group_member/3</fo:inline> is called, the options <fo:inline font-family="monospace">Port</fo:inline> 
	and <fo:inline font-family="monospace">Dir</fo:inline> are mandatory.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4016048">delete_user(UserName,Options) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4016528">delete_user(UserName, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4017024">delete_user(UserName, Address, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">delete_user/2, delete_user/3</fo:inline>, and <fo:inline font-family="monospace">delete_user/4</fo:inline> 
	each deletes a user from the user database. 
	If the operation is successful, this function returns <fo:inline font-family="monospace">true</fo:inline>. 
	If an error occurs, <fo:inline font-family="monospace">{error,Reason}</fo:inline> is returned. 
	When <fo:inline font-family="monospace">delete_user/2</fo:inline> is called, options <fo:inline font-family="monospace">Port</fo:inline> and <fo:inline font-family="monospace">Dir</fo:inline> 
	are mandatory.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4026544">get_user(UserName,Options) -&gt; {ok, #httpd_user} |{error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4027040">get_user(UserName, Port, Dir) -&gt; {ok, #httpd_user} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4027536">get_user(UserName, Address, Port, Dir) -&gt; {ok, #httpd_user} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">get_user/2, get_user/3</fo:inline>, and <fo:inline font-family="monospace">get_user/4</fo:inline> each 
	returns an <fo:inline font-family="monospace">httpd_user</fo:inline> record containing the userdata for a 
	specific user. If the user cannot be found, <fo:inline font-family="monospace">{error, Reason}</fo:inline> 
	is returned. When <fo:inline font-family="monospace">get_user/2</fo:inline> is called, options <fo:inline font-family="monospace">Port</fo:inline> and <fo:inline font-family="monospace">Dir</fo:inline> 
	are mandatory.</fo:block>
      </fo:block>

     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4037024">list_groups(Options) -&gt; {ok, Groups} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4037504">list_groups(Port, Dir) -&gt; {ok, Groups} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4038000">list_groups(Address, Port, Dir) -&gt; {ok, Groups} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Groups = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
	<fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">list_groups/1, list_groups/2</fo:inline>, and <fo:inline font-family="monospace">list_groups/3</fo:inline> 
	each lists all the groups available. 
	If there is an error, <fo:inline font-family="monospace">{error, Reason}</fo:inline> is returned. 
	When <fo:inline font-family="monospace">list_groups/1</fo:inline> is called, options <fo:inline font-family="monospace">Port</fo:inline> 
	and <fo:inline font-family="monospace">Dir</fo:inline> are mandatory.</fo:block>
      </fo:block>
   
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4047008">list_group_members(GroupName, Options) -&gt; {ok, Users} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4047504">list_group_members(GroupName, Port, Dir) -&gt; {ok, Users} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4048016">list_group_members(GroupName, Address, Port, Dir) -&gt; {ok, Users} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GroupName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Users = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">list_group_members/2, list_group_members/3</fo:inline>, and 
	<fo:inline font-family="monospace">list_group_members/4</fo:inline> each
	lists the members of a specified group. If the group does not 
	exist or there is an error, <fo:inline font-family="monospace">{error, Reason}</fo:inline> is returned.
	When <fo:inline font-family="monospace">list_group_members/2</fo:inline> is called, options <fo:inline font-family="monospace">Port</fo:inline> 
	and <fo:inline font-family="monospace">Dir</fo:inline> are mandatory.</fo:block>
      </fo:block>

     <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4057552">list_users(Options) -&gt; {ok, Users} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4058032">list_users(Port, Dir) -&gt; {ok, Users} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4058512">list_users(Address, Port, Dir) -&gt; {ok, Users} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {port,Port} | {addr,Address} | {dir,Directory} | {authPassword,AuthPassword}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Users = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AuthPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = atom()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">list_users/1, list_users/2</fo:inline>, and <fo:inline font-family="monospace">list_users/3</fo:inline> 
	each returns a list 
	of users in the user database for a specific <fo:inline font-family="monospace">Port/Dir</fo:inline>.
	When <fo:inline font-family="monospace">list_users/1</fo:inline> is called, options <fo:inline font-family="monospace">Port</fo:inline> and <fo:inline font-family="monospace">Dir</fo:inline> 
	are mandatory.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4067536">update_password(Port, Dir, OldPassword, NewPassword, NewPassword) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4068064">update_password(Address,Port, Dir, OldPassword, NewPassword, NewPassword) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GroupName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">OldPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewPassword = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">update_password/5</fo:inline> and <fo:inline font-family="monospace">update_password/6</fo:inline> each
	updates <fo:inline font-family="monospace">AuthAccessPassword</fo:inline> for the specified directory. 
	If <fo:inline font-family="monospace">NewPassword</fo:inline> is equal to "NoPassword", no password is required to
	change authorisation data. 
	If <fo:inline font-family="monospace">NewPassword</fo:inline> is equal to "DummyPassword", no changes can be done 
	without changing the password first.</fo:block>
      </fo:block>
  

  <fo:block id="idp4076848" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SEE ALSO</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">httpd(3)</fo:inline>,
      <fo:inline font-style="italic">mod_alias(3)</fo:inline></fo:block>
  
  
<fo:block page-break-before="always" id="idp4084288" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">mod_esi</fo:marker>mod_esi</fo:block>Erlang module</fo:block>
  <fo:block/>
  mod_esi
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module defines the Erlang Server Interface (ESI) API.
    It is a more efficient way of writing Erlang scripts
    for your <fo:inline font-family="monospace">Inets</fo:inline> web server than writing them as common CGI scripts.</fo:block>

    
  

 <fo:block id="idp4087520" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following data types are used in the functions for mod_esi:</fo:block>

    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">env() = </fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em"> <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">{EnvKey()::atom(), Value::term()}</fo:inline></fo:block>

      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Currently supported key value pairs</fo:block>
      <fo:block space-after="0.25em" space-before="0.25em">		
	
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{server_software, string()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Indicates the inets version.</fo:block></fo:block></fo:block-container>
	
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{server_name, string()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The local hostname. </fo:block></fo:block></fo:block-container>

	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{gateway_interface, string()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Legacy string used in CGI, just ignore.</fo:block> </fo:block></fo:block-container>
	
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{server_protocol, string()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"> HTTP version, currently "HTTP/1.1"</fo:block></fo:block></fo:block-container>
	
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{server_port, integer()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Servers port number.</fo:block></fo:block></fo:block-container>
	
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{request_method, "GET | "PUT" | "DELETE" | "POST" | "PATCH"}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">HTTP request method.</fo:block></fo:block></fo:block-container>
		
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{remote_adress, inet:ip_address()} </fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The clients ip address.</fo:block></fo:block></fo:block-container>

	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{peer_cert, undefined | no_peercert | DER:binary()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em">
	  <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For TLS connections where client certificates are used this will
	  be an ASN.1 DER-encoded X509-certificate as an Erlang binary.
	  If client certificates are not used the value will be <fo:inline font-family="monospace">no_peercert</fo:inline>,
	  and if TLS is not used (HTTP or connection is lost due to network failure)
	  the value will be <fo:inline font-family="monospace">undefined</fo:inline>.
	</fo:block></fo:block></fo:block-container>
	
	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{script_name, string()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Request URI</fo:block></fo:block></fo:block-container>

	<fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">{http_LowerCaseHTTPHeaderName, string()}</fo:inline></fo:block>
	<fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">example: {http_content_type, "text/html"}</fo:block></fo:block></fo:block-container>
      </fo:block>    
      </fo:block></fo:block-container>
    </fo:block>
 

 <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
   <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4105440">deliver(SessionID, Data) -&gt; ok | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SessionID = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = string() | io_list() | binary()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
     </fo:list-block>
       
       <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is <fo:inline font-weight="bold">only</fo:inline> intended to be used from
       functions called by the Erl Scheme interface to deliver
       parts of the content to the user.</fo:block>
       <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sends data from an Erl Scheme script back to the client.</fo:block>
	
       <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
	 <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If any HTTP header fields are added by the
	 script, they must be in the first call to <fo:inline font-family="monospace">deliver/2</fo:inline>, 
	 and the data in the call must be a string. Calls after the headers
	 are complete can contain binary data to reduce copying
	 overhead. Do not assume anything about the data type of 
	 <fo:inline font-family="monospace">SessionID</fo:inline>. <fo:inline font-family="monospace">SessionID</fo:inline> must be the value given 
	 as input to the ESI callback function that you implemented.</fo:block>
       </fo:block>
     </fo:block>
 
  
 <fo:block id="idp4114288" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">ESI Callback Functions</fo:block>
   
 

 <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
   <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4115472">Module:Function(SessionID, Env, Input)-&gt; _ </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SessionID = term()</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = env()</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Input = string()</fo:block></fo:list-item-body></fo:list-item>
     </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Module</fo:inline> must be found in the code path and export
        <fo:inline font-family="monospace">Function</fo:inline> with an arity of three. An <fo:inline font-family="monospace">erlScriptAlias</fo:inline> must
        also be set up in the configuration file for the web server.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the HTTP request is a 'post' request and a body is sent,
        <fo:inline font-family="monospace">content_length</fo:inline> is the length of the posted
        data. If 'get' is used, <fo:inline font-family="monospace">query_string</fo:inline> is the data after
        <fo:inline font-weight="bold">?</fo:inline> in the URL.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">ParsedHeader</fo:inline> is the HTTP request as a key-value tuple
        list. The keys in <fo:inline font-family="monospace">ParsedHeader</fo:inline> are in lower case.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">SessionID</fo:inline> is an identifier
        the server uses when <fo:inline font-family="monospace">deliver/2</fo:inline> is called. Do not
        assume anything about the datatype.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use this callback function to generate dynamic web
        content dynamically. When a part of the page is generated, send the
        data back to the client through <fo:inline font-family="monospace">deliver/2</fo:inline>. Notice
        that the first chunk of data sent to the client must at
        least contain all HTTP header fields that the response
        will generate. If the first chunk does not contain the
        <fo:inline font-weight="bold">end of HTTP header</fo:inline>, that is, <fo:inline font-family="monospace">"\r\n\r\n",</fo:inline>
        the server assumes that no HTTP header fields will be generated.</fo:block>
      </fo:block>

   <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4127952">Module:Function(Env, Input)-&gt; Response </fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = env()</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Input = string()</fo:block></fo:list-item-body></fo:list-item>
       <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Response = string()</fo:block></fo:list-item-body></fo:list-item>
     </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This callback format consumes much memory, as the
        whole response must be generated before it is sent to the
        user. This function is deprecated and is only kept for backwards
        compatibility.
        For new development, use <fo:inline font-family="monospace">Module:Function/3</fo:inline>.</fo:block>
      </fo:block>
 
 
<fo:block page-break-before="always" id="idp4139552" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">mod_security</fo:marker>mod_security</fo:block>Erlang module</fo:block>
  <fo:block/>
  mod_security
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Security Audit and Trailing Functionality</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>

      <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4141984">block_user(User, Port, Dir, Seconds) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4142480">block_user(User, Address, Port, Dir, Seconds) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">User = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Seconds = integer() | infinity</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = no_such_directory</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">block_user/4</fo:inline> and <fo:inline font-family="monospace">block_user/5</fo:inline> each blocks the user 
          <fo:inline font-family="monospace">User</fo:inline> from directory <fo:inline font-family="monospace">Dir</fo:inline> for a specified 
          amount of time.</fo:block>
      </fo:block>
    
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4149696">list_auth_users(Port) -&gt; Users | []</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4150160">list_auth_users(Address, Port) -&gt; Users | []</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4150640">list_auth_users(Port, Dir) -&gt; Users | []</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4151120">list_auth_users(Address, Port, Dir) -&gt; Users | []</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Users = list() = [string()]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">list_auth_users/1</fo:inline>, <fo:inline font-family="monospace">list_auth_users/2</fo:inline>, and 
          <fo:inline font-family="monospace">list_auth_users/3</fo:inline> each returns a list of users that are 
          currently authenticated. Authentications are stored for
          <fo:inline font-family="monospace">SecurityAuthTimeout</fo:inline> seconds, and then discarded.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4157984">list_blocked_users(Port) -&gt; Users | []</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4158448">list_blocked_users(Address, Port) -&gt; Users | []</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4158928">list_blocked_users(Port, Dir) -&gt; Users | []</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4159408">list_blocked_users(Address, Port, Dir) -&gt; Users | []</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Users = list() = [string()]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">list_blocked_users/1</fo:inline>, <fo:inline font-family="monospace">list_blocked_users/2</fo:inline>, and 
          <fo:inline font-family="monospace">list_blocked_users/3</fo:inline> each returns a list of users that are 
          currently blocked from access.</fo:block>
      </fo:block>
  
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4165328">unblock_user(User, Port) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4165808">unblock_user(User, Address, Port) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4166304">unblock_user(User, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4166784">unblock_user(User, Address, Port, Dir) -&gt; true | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">User = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dir = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">unblock_user/2</fo:inline>, <fo:inline font-family="monospace">unblock_user/3</fo:inline>, and 
          <fo:inline font-family="monospace">unblock_user/4</fo:inline> each removes the user <fo:inline font-family="monospace">User</fo:inline> from 
          the list of blocked users for <fo:inline font-family="monospace">Port</fo:inline> (and <fo:inline font-family="monospace">Dir</fo:inline>).</fo:block>
      </fo:block>
  

  <fo:block id="idp4175104" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">SecurityCallbackModule</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">SecurityCallbackModule</fo:inline> is a user-written module that can receive 
      events from the <fo:inline font-family="monospace">mod_security</fo:inline> Erlang web server API module. 
      This module only exports the functions event/[4,5]
      which are described here.
      </fo:block>
  

  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4177792">Module:event(What, Port, Dir, Data) -&gt; ignored</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4178272">Module:event(What, Address, Port, Dir, Data) -&gt; ignored</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">What = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = {A,B,C,D} | string() &lt;v&gt;Dir   = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = [Info]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Info = {Name, Value}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">event/4</fo:inline> or <fo:inline font-family="monospace">event/5</fo:inline> is called whenever an event 
          occurs in the <fo:inline font-family="monospace">mod_security</fo:inline> Erlang web server API module.
	  (<fo:inline font-family="monospace">event/4</fo:inline> is called if <fo:inline font-family="monospace">Address</fo:inline> is undefined, 
	  otherwise <fo:inline font-family="monospace">event/5</fo:inline>. 
          Argument <fo:inline font-family="monospace">What</fo:inline> specifies the type of event that has 
          occurred and is one of the following reasons:
          </fo:block>
	  <fo:block space-after="0.25em" space-before="0.25em">
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">auth_fail</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A failed user authentication.</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">user_block</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A user is being blocked from access.</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">user_unblock</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A user is being removed from the block list.</fo:block></fo:block></fo:block-container>
     </fo:block>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The event <fo:inline font-family="monospace">user_unblock</fo:inline> is not triggered when 
            a user is removed from the block list explicitly using the 
            <fo:inline font-family="monospace">unblock_user</fo:inline> function.</fo:block>
        </fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4199408" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">http_uri</fo:marker>http_uri</fo:block>Erlang module</fo:block>
  <fo:block/>

  http_uri
  <fo:block/>

  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module provides utility functions for working with URIs, 
    according to 
    <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 3986</fo:basic-link></fo:inline>.</fo:block>
  
  
  <fo:block id="idp4202288" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type definitions that are used more than once in
      this module:</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">boolean() = true | false</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">string()</fo:inline> = list of ASCII characters</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">unicode_binary()</fo:inline> = binary() with characters encoded in the UTF-8 coding standard</fo:block>

  
  
  <fo:block id="idp4205808" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">URI DATA TYPES</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type definitions that are related to URI:</fo:block>
    
<fo:block space-after="0.25em" space-before="0.25em">
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">uri() = string() | unicode:unicode_binary()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Syntax according to the URI definition in RFC 3986,
       for example, "http://www.erlang.org/"</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">user_info() = string() | unicode:unicode_binary()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">scheme() = atom()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example: http, https</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">host() = string() | unicode:unicode_binary()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">port() = pos_integer()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">path() = string() | unicode:unicode_binary()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Represents a file path or directory path</fo:block></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">query() = string() | unicode:unicode_binary()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/></fo:block></fo:block-container>
       <fo:block keep-with-next.within-page="always"><fo:inline font-family="monospace">fragment() = string() | unicode:unicode_binary()</fo:inline></fo:block>
       <fo:block-container><fo:block start-indent="2em"><fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/></fo:block></fo:block-container>
     </fo:block>
   
     <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information about URI, see
     <fo:inline font-weight="bold"><fo:basic-link external-destination="href">RFC 3986</fo:basic-link></fo:inline>.</fo:block>
    
  
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4218416">decode(HexEncodedURI) -&gt; URI</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HexEncodedURI = string() | unicode:unicode_binary() - A possibly hexadecimal encoded URI</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">URI = uri()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Decodes a possibly hexadecimal encoded URI.</fo:block>

      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4222144">encode(URI) -&gt; HexEncodedURI</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">URI = uri()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HexEncodedURI = string() | unicode:unicode_binary() - Hexadecimal encoded URI</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Encodes a hexadecimal encoded URI.</fo:block>

        
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4226400">parse(URI) -&gt; {ok, Result} | {error, Reason}</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4226880">parse(URI, Options) -&gt; {ok, Result} | {error, Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">URI = uri()</fo:block></fo:list-item-body></fo:list-item> 
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item> 
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {ipv6_host_with_brackets, boolean()} | 
                    {scheme_defaults, scheme_defaults()} |
                    {fragment, boolean()} |
                    {scheme_validation_fun, fun()}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = {Scheme, UserInfo, Host, Port, Path, Query} |
                    {Scheme, UserInfo, Host, Port, Path, Query, Fragment}</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">UserInfo = user_info()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Host = host()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = pos_integer()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Path = path()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Query = query()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Fragment = fragment()</fo:block></fo:list-item-body></fo:list-item>
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Parses a URI. If no scheme defaults 
	are provided, the value of the
	<fo:inline font-style="italic">scheme_defaults</fo:inline>
	function is used.</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When parsing a URI with an unknown scheme (that is, 
	a scheme not found in the scheme defaults), a port number must be 
	provided, otherwise the parsing fails.</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the fragment option is <fo:inline font-family="monospace">true</fo:inline>, the URI fragment is returned as
          part of the parsing result, otherwise it is ignored.</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Scheme validation fun is to be defined as follows:</fo:block>

	<fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
fun(SchemeStr :: string() | unicode:unicode_binary()) -&gt;
	valid |	{error, Reason :: term()}.
	</fo:block>

        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is called before scheme string gets converted into scheme atom and
        thus possible atom leak could be prevented</fo:block>

        
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4239584">scheme_defaults() -&gt; SchemeDefaults</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">SchemeDefaults = [{scheme(), default_scheme_port_number()}] </fo:block></fo:list-item-body></fo:list-item> 
	<fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">default_scheme_port_number() = pos_integer()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Provides a list of the scheme and their default 
	port numbers supported (by default) by this utility.</fo:block>

        
      </fo:block>

   

  



</fo:flow>
  </fo:page-sequence>
</fo:root>
