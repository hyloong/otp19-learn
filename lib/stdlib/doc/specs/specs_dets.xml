<module name="dets">
<type>
  <name>access</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-access">access()</marker> = read | read_write</typehead></typedecl>
</type>
<type>
  <name>auto_save</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-auto_save">auto_save()</marker> = infinity | integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>bindings_cont</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-bindings_cont">bindings_cont()</marker></typehead></typedecl>
</type>
<type>
  <name>cont</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-cont">cont()</marker></typehead></typedecl>
</type>
<type>
  <name>keypos</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-keypos">keypos()</marker> = integer() &gt;= 1</typehead></typedecl>
</type>
<type>
  <name>match_spec</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-match_spec">match_spec()</marker> = <seealso marker="ets#type-match_spec">ets:match_spec()</seealso></typehead></typedecl>
</type>
<type>
  <name>no_slots</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-no_slots">no_slots()</marker> = default | integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>object</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-object">object()</marker> = tuple()</typehead></typedecl>
</type>
<type>
  <name>object_cont</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-object_cont">object_cont()</marker></typehead></typedecl>
</type>
<type>
  <name>pattern</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-pattern">pattern()</marker> = atom() | tuple()</typehead></typedecl>
</type>
<type>
  <name>select_cont</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-select_cont">select_cont()</marker></typehead></typedecl>
</type>
<type>
  <name>tab_name</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-tab_name">tab_name()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-type">type()</marker> = bag | duplicate_bag | set</typehead></typedecl>
</type>
<spec>
  <name>add_user</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>all</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>all() -&gt; [<seealso marker="#type-tab_name">tab_name()</seealso>]</head></clause>
  </contract>
</spec>
<spec>
  <name>bchunk</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>bchunk(Name, Continuation) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Continuation2, Data} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Continuation</typename><string>Continuation = start | <seealso marker="#type-cont">cont()</seealso></string></subtype>
        <subtype><typename>Continuation2</typename><string>Continuation2 = <seealso marker="#type-cont">cont()</seealso></string></subtype>
        <subtype><typename>Data</typename><string>Data = binary() | tuple()</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Continuation2</anno>
  <anno>Data</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>close</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>close(Name) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>delete</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>delete(Name, Key) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Key</typename><string>Key = Reason = term()</string></subtype>
        <subtype><typename>Reason</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>delete_all_objects</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>delete_all_objects(Name) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>delete_object</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>delete_object(Name, Object) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Object</typename><string>Object = <seealso marker="#type-object">object()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Object</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>file_info</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>first</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>first(Name) -&gt; Key | '$end_of_table'</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Key</typename><string>Key = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>foldl</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>foldl(Function, Acc0, Name) -&gt; Acc | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Function</typename><string>Function = fun((Object :: <seealso marker="#type-object">object()</seealso>, AccIn) -&gt; AccOut)</string></subtype>
        <subtype><typename>Acc0</typename><string>Acc0 = Acc = AccIn = AccOut = Reason = term()</string></subtype>
        <subtype><typename>Acc</typename><string></string></subtype>
        <subtype><typename>AccIn</typename><string></string></subtype>
        <subtype><typename>AccOut</typename><string></string></subtype>
        <subtype><typename>Reason</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Acc</anno>
  <anno>Acc0</anno>
  <anno>AccIn</anno>
  <anno>AccOut</anno>
  <anno>Function</anno>
  <anno>Name</anno>
  <anno>Object</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>foldr</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>foldr(Function, Acc0, Name) -&gt; Acc | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Function</typename><string>Function = fun((Object :: <seealso marker="#type-object">object()</seealso>, AccIn) -&gt; AccOut)</string></subtype>
        <subtype><typename>Acc0</typename><string>Acc0 = Acc = AccIn = AccOut = Reason = term()</string></subtype>
        <subtype><typename>Acc</typename><string></string></subtype>
        <subtype><typename>AccIn</typename><string></string></subtype>
        <subtype><typename>AccOut</typename><string></string></subtype>
        <subtype><typename>Reason</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Acc</anno>
  <anno>Acc0</anno>
  <anno>AccIn</anno>
  <anno>AccOut</anno>
  <anno>Function</anno>
  <anno>Name</anno>
  <anno>Object</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>from_ets</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>from_ets(Name, EtsTab) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>EtsTab</typename><string>EtsTab = <seealso marker="ets#type-tab">ets:tab()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>EtsTab</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>fsck</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>fsck</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_head_field</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>info</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>info(Name) -&gt; InfoList | undefined</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>InfoList</typename><string>InfoList = [InfoTuple]</string></subtype>
        <subtype><typename>InfoTuple</typename><string>InfoTuple = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{file_size, integer() &gt;= 0} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{filename, <seealso marker="file#type-name">file:name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{keypos, <seealso marker="#type-keypos">keypos()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{size, integer() &gt;= 0} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{type, <seealso marker="#type-type">type()</seealso>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>InfoList</anno>
  <anno>InfoTuple</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>info(Name, Item) -&gt; Value | undefined</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Item</typename><string>Item = <br/><nbsp/><nbsp/><nbsp/><nbsp/>access |<br/><nbsp/><nbsp/><nbsp/><nbsp/>auto_save |<br/><nbsp/><nbsp/><nbsp/><nbsp/>bchunk_format |<br/><nbsp/><nbsp/><nbsp/><nbsp/>hash |<br/><nbsp/><nbsp/><nbsp/><nbsp/>file_size |<br/><nbsp/><nbsp/><nbsp/><nbsp/>filename |<br/><nbsp/><nbsp/><nbsp/><nbsp/>keypos |<br/><nbsp/><nbsp/><nbsp/><nbsp/>memory |<br/><nbsp/><nbsp/><nbsp/><nbsp/>no_keys |<br/><nbsp/><nbsp/><nbsp/><nbsp/>no_objects |<br/><nbsp/><nbsp/><nbsp/><nbsp/>no_slots |<br/><nbsp/><nbsp/><nbsp/><nbsp/>owner |<br/><nbsp/><nbsp/><nbsp/><nbsp/>ram_file |<br/><nbsp/><nbsp/><nbsp/><nbsp/>safe_fixed |<br/><nbsp/><nbsp/><nbsp/><nbsp/>safe_fixed_monotonic_time |<br/><nbsp/><nbsp/><nbsp/><nbsp/>size |<br/><nbsp/><nbsp/><nbsp/><nbsp/>type</string></subtype>
        <subtype><typename>Value</typename><string>Value = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Item</anno>
  <anno>Name</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>init</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>init_table</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>init_table(Name, InitFun) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>InitFun</typename><string>InitFun = fun((Arg) -&gt; Res)</string></subtype>
        <subtype><typename>Arg</typename><string>Arg = read | close</string></subtype>
        <subtype><typename>Res</typename><string>Res = <br/><nbsp/><nbsp/><nbsp/><nbsp/>end_of_input |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-object">object()</seealso>], InitFun} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Data, InitFun} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>term()</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
        <subtype><typename>Data</typename><string>Data = binary() | tuple()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Arg</anno>
  <anno>Data</anno>
  <anno>InitFun</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Res</anno>
</spec>
<spec>
  <name>init_table</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>init_table(Name, InitFun, Options) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>InitFun</typename><string>InitFun = fun((Arg) -&gt; Res)</string></subtype>
        <subtype><typename>Arg</typename><string>Arg = read | close</string></subtype>
        <subtype><typename>Res</typename><string>Res = <br/><nbsp/><nbsp/><nbsp/><nbsp/>end_of_input |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-object">object()</seealso>], InitFun} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{Data, InitFun} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>term()</string></subtype>
        <subtype><typename>Options</typename><string>Options = Option | [Option]</string></subtype>
        <subtype><typename>Option</typename><string>Option = {min_no_slots, <seealso marker="#type-no_slots">no_slots()</seealso>} | {format, term | bchunk}</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
        <subtype><typename>Data</typename><string>Data = binary() | tuple()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Arg</anno>
  <anno>Data</anno>
  <anno>InitFun</anno>
  <anno>Name</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>Reason</anno>
  <anno>Res</anno>
</spec>
<spec>
  <name>insert</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>insert(Name, Objects) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Objects</typename><string>Objects = <seealso marker="#type-object">object()</seealso> | [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Objects</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>insert_new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>insert_new(Name, Objects) -&gt; boolean() | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Objects</typename><string>Objects = <seealso marker="#type-object">object()</seealso> | [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Objects</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>internal_close</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>internal_open</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>is_compatible_bchunk_format</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>is_compatible_bchunk_format(Name, BchunkFormat) -&gt; boolean()</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>BchunkFormat</typename><string>BchunkFormat = binary()</string></subtype>
      </guard></clause>
  </contract>
  <anno>BchunkFormat</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>is_dets_file</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>is_dets_file(Filename) -&gt; boolean() | {error, Reason}</head>
      <guard>
        <subtype><typename>Filename</typename><string>Filename = <seealso marker="file#type-name">file:name()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Filename</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>istart_link</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>lookup</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup(Name, Key) -&gt; Objects | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Key</typename><string>Key = term()</string></subtype>
        <subtype><typename>Objects</typename><string>Objects = [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Name</anno>
  <anno>Objects</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>lookup_keys</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>match</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>match(Continuation) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[Match], Continuation2} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = Continuation2 = <seealso marker="#type-bindings_cont">bindings_cont()</seealso></string></subtype>
        <subtype><typename>Continuation2</typename><string/></subtype>
        <subtype><typename>Match</typename><string>Match = [term()]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Continuation2</anno>
  <anno>Match</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>match</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>match(Name, Pattern) -&gt; [Match] | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Pattern</typename><string>Pattern = <seealso marker="#type-pattern">pattern()</seealso></string></subtype>
        <subtype><typename>Match</typename><string>Match = [term()]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Match</anno>
  <anno>Name</anno>
  <anno>Pattern</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>match</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>match(Name, Pattern, N) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[Match], Continuation} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Pattern</typename><string>Pattern = <seealso marker="#type-pattern">pattern()</seealso></string></subtype>
        <subtype><typename>N</typename><string>N = default | integer() &gt;= 0</string></subtype>
        <subtype><typename>Continuation</typename><string>Continuation = <seealso marker="#type-bindings_cont">bindings_cont()</seealso></string></subtype>
        <subtype><typename>Match</typename><string>Match = [term()]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Match</anno>
  <anno>N</anno>
  <anno>Name</anno>
  <anno>Pattern</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>match_delete</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>match_delete(Name, Pattern) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Pattern</typename><string>Pattern = <seealso marker="#type-pattern">pattern()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Pattern</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>match_object</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>match_object(Continuation) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Objects, Continuation2} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = Continuation2 = <seealso marker="#type-object_cont">object_cont()</seealso></string></subtype>
        <subtype><typename>Continuation2</typename><string/></subtype>
        <subtype><typename>Objects</typename><string>Objects = [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Continuation2</anno>
  <anno>Objects</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>match_object</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>match_object(Name, Pattern) -&gt; Objects | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Pattern</typename><string>Pattern = <seealso marker="#type-pattern">pattern()</seealso></string></subtype>
        <subtype><typename>Objects</typename><string>Objects = [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Objects</anno>
  <anno>Pattern</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>match_object</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>match_object(Name, Pattern, N) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Objects, Continuation} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Pattern</typename><string>Pattern = <seealso marker="#type-pattern">pattern()</seealso></string></subtype>
        <subtype><typename>N</typename><string>N = default | integer() &gt;= 0</string></subtype>
        <subtype><typename>Continuation</typename><string>Continuation = <seealso marker="#type-object_cont">object_cont()</seealso></string></subtype>
        <subtype><typename>Objects</typename><string>Objects = [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>N</anno>
  <anno>Name</anno>
  <anno>Objects</anno>
  <anno>Pattern</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>member</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>member(Name, Key) -&gt; boolean() | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Key</typename><string>Key = Reason = term()</string></subtype>
        <subtype><typename>Reason</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>next</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>next(Name, Key1) -&gt; Key2 | '$end_of_table'</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Key1</typename><string>Key1 = Key2 = term()</string></subtype>
        <subtype><typename>Key2</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Key1</anno>
  <anno>Key2</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>open_file</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>open_file(Filename) -&gt; {ok, Reference} | {error, Reason}</head>
      <guard>
        <subtype><typename>Filename</typename><string>Filename = <seealso marker="file#type-name">file:name()</seealso></string></subtype>
        <subtype><typename>Reference</typename><string>Reference = reference()</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Filename</anno>
  <anno>Reason</anno>
  <anno>Reference</anno>
</spec>
<spec>
  <name>open_file</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>open_file(Name, Args) -&gt; {ok, Name} | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Args</typename><string>Args = [OpenArg]</string></subtype>
        <subtype><typename>OpenArg</typename><string>OpenArg = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{access, <seealso marker="#type-access">access()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{auto_save, <seealso marker="#type-auto_save">auto_save()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{estimated_no_objects, integer() &gt;= 0} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{file, <seealso marker="file#type-name">file:name()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{max_no_slots, <seealso marker="#type-no_slots">no_slots()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{min_no_slots, <seealso marker="#type-no_slots">no_slots()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{keypos, <seealso marker="#type-keypos">keypos()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{ram_file, boolean()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{repair, boolean() | force} |<br/><nbsp/><nbsp/><nbsp/><nbsp/>{type, <seealso marker="#type-type">type()</seealso>}</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Args</anno>
  <anno>Name</anno>
  <anno>OpenArg</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>pid2name</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>pid2name(Pid) -&gt; {ok, Name} | undefined</head>
      <guard>
        <subtype><typename>Pid</typename><string>Pid = pid()</string></subtype>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Pid</anno>
</spec>
<spec>
  <name>remove_user</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>repair_continuation</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>repair_continuation(Continuation, MatchSpec) -&gt; Continuation2</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = Continuation2 = <seealso marker="#type-select_cont">select_cont()</seealso></string></subtype>
        <subtype><typename>Continuation2</typename><string/></subtype>
        <subtype><typename>MatchSpec</typename><string>MatchSpec = <seealso marker="#type-match_spec">match_spec()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Continuation2</anno>
  <anno>MatchSpec</anno>
</spec>
<spec>
  <name>safe_fixtable</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>safe_fixtable(Name, Fix) -&gt; ok</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Fix</typename><string>Fix = boolean()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Fix</anno>
  <anno>Name</anno>
</spec>
<spec>
  <name>select</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>select(Continuation) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Selection, Continuation2} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = Continuation2 = <seealso marker="#type-select_cont">select_cont()</seealso></string></subtype>
        <subtype><typename>Continuation2</typename><string/></subtype>
        <subtype><typename>Selection</typename><string>Selection = [term()]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Continuation2</anno>
  <anno>Reason</anno>
  <anno>Selection</anno>
</spec>
<spec>
  <name>select</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>select(Name, MatchSpec) -&gt; Selection | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>MatchSpec</typename><string>MatchSpec = <seealso marker="#type-match_spec">match_spec()</seealso></string></subtype>
        <subtype><typename>Selection</typename><string>Selection = [term()]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>MatchSpec</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Selection</anno>
</spec>
<spec>
  <name>select</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>select(Name, MatchSpec, N) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Selection, Continuation} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>'$end_of_table' |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>MatchSpec</typename><string>MatchSpec = <seealso marker="#type-match_spec">match_spec()</seealso></string></subtype>
        <subtype><typename>N</typename><string>N = default | integer() &gt;= 0</string></subtype>
        <subtype><typename>Continuation</typename><string>Continuation = <seealso marker="#type-select_cont">select_cont()</seealso></string></subtype>
        <subtype><typename>Selection</typename><string>Selection = [term()]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>MatchSpec</anno>
  <anno>N</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
  <anno>Selection</anno>
</spec>
<spec>
  <name>select_delete</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>select_delete(Name, MatchSpec) -&gt; N | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>MatchSpec</typename><string>MatchSpec = <seealso marker="#type-match_spec">match_spec()</seealso></string></subtype>
        <subtype><typename>N</typename><string>N = integer() &gt;= 0</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>MatchSpec</anno>
  <anno>N</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>slot</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>slot(Name, I) -&gt; '$end_of_table' | Objects | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>I</typename><string>I = integer() &gt;= 0</string></subtype>
        <subtype><typename>Objects</typename><string>Objects = [<seealso marker="#type-object">object()</seealso>]</string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>I</anno>
  <anno>Name</anno>
  <anno>Objects</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>stop</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>sync</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>sync(Name) -&gt; ok | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>system_code_change</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>system_continue</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>system_terminate</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>table</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>table(Name) -&gt; QueryHandle</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>QueryHandle</typename><string>QueryHandle = <seealso marker="qlc#type-query_handle">qlc:query_handle()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Name</anno>
  <anno>QueryHandle</anno>
</spec>
<spec>
  <name>table</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>table(Name, Options) -&gt; QueryHandle</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = Option | [Option]</string></subtype>
        <subtype><typename>Option</typename><string>Option = {n_objects, Limit} | {traverse, TraverseMethod}</string></subtype>
        <subtype><typename>Limit</typename><string>Limit = default | integer() &gt;= 1</string></subtype>
        <subtype><typename>TraverseMethod</typename><string>TraverseMethod = first_next | select | {select, <seealso marker="#type-match_spec">match_spec()</seealso>}</string></subtype>
        <subtype><typename>QueryHandle</typename><string>QueryHandle = <seealso marker="qlc#type-query_handle">qlc:query_handle()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Limit</anno>
  <anno>Name</anno>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>QueryHandle</anno>
  <anno>TraverseMethod</anno>
</spec>
<spec>
  <name>to_ets</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>to_ets(Name, EtsTab) -&gt; EtsTab | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>EtsTab</typename><string>EtsTab = <seealso marker="ets#type-tab">ets:tab()</seealso></string></subtype>
        <subtype><typename>Reason</typename><string>Reason = term()</string></subtype>
      </guard></clause>
  </contract>
  <anno>EtsTab</anno>
  <anno>Name</anno>
  <anno>Reason</anno>
</spec>
<spec>
  <name>traverse</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>traverse(Name, Fun) -&gt; Return | {error, Reason}</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Fun</typename><string>Fun = fun((Object) -&gt; FunReturn)</string></subtype>
        <subtype><typename>Object</typename><string>Object = <seealso marker="#type-object">object()</seealso></string></subtype>
        <subtype><typename>FunReturn</typename><string>FunReturn = <br/><nbsp/><nbsp/><nbsp/><nbsp/>continue | {continue, Val} | {done, Value} | OtherValue</string></subtype>
        <subtype><typename>Return</typename><string>Return = [term()] | OtherValue</string></subtype>
        <subtype><typename>Val</typename><string>Val = Value = OtherValue = Reason = term()</string></subtype>
        <subtype><typename>Value</typename><string></string></subtype>
        <subtype><typename>OtherValue</typename><string></string></subtype>
        <subtype><typename>Reason</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Fun</anno>
  <anno>FunReturn</anno>
  <anno>Name</anno>
  <anno>Object</anno>
  <anno>OtherValue</anno>
  <anno>Reason</anno>
  <anno>Return</anno>
  <anno>Val</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>update_counter</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>update_counter(Name, Key, Increment) -&gt; Result</head>
      <guard>
        <subtype><typename>Name</typename><string>Name = <seealso marker="#type-tab_name">tab_name()</seealso></string></subtype>
        <subtype><typename>Key</typename><string>Key = term()</string></subtype>
        <subtype><typename>Increment</typename><string>Increment = {Pos, Incr} | Incr</string></subtype>
        <subtype><typename>Pos</typename><string>Pos = Incr = Result = integer()</string></subtype>
        <subtype><typename>Incr</typename><string></string></subtype>
        <subtype><typename>Result</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>Incr</anno>
  <anno>Increment</anno>
  <anno>Key</anno>
  <anno>Name</anno>
  <anno>Pos</anno>
  <anno>Result</anno>
</spec>
<spec>
  <name>verbose</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>verbose</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>view</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>where</name>
  <arity>2</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:27:12.</timestamp>
</module>