<module name="wxJoystickEvent">
<type>
  <name>wxJoystickEvent</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-wxJoystickEvent">wxJoystickEvent()</marker> = <seealso marker="wx#type-wx_object">wx:wx_object()</seealso></typehead></typedecl>
</type>
<spec>
  <name>buttonDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>buttonDown(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonDown</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>buttonDown(This, Options :: [Option]) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
        <subtype><typename>Option</typename><string>Option = {but, integer()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonIsDown</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>buttonIsDown(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonIsDown</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>buttonIsDown(This, Options :: [Option]) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
        <subtype><typename>Option</typename><string>Option = {but, integer()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonUp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>buttonUp(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>buttonUp</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>buttonUp(This, Options :: [Option]) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
        <subtype><typename>Option</typename><string>Option = {but, integer()}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Option</anno>
  <anno>Options</anno>
  <anno>This</anno>
</spec>
<spec>
  <name>getButtonChange</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getButtonChange(This) -&gt; integer()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getButtonState</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getButtonState(This) -&gt; integer()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getId</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getJoystick</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getJoystick(This) -&gt; integer()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>getPosition</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getPosition(This) -&gt; {X :: integer(), Y :: integer()}</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
  <anno>X</anno>
  <anno>Y</anno>
</spec>
<spec>
  <name>getSkipped</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getTimestamp</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>getZPosition</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>getZPosition(This) -&gt; integer()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isButton</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isButton(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isCommandEvent</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>isMove</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isMove(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>isZMove</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>isZMove(This) -&gt; boolean()</head>
      <guard>
        <subtype><typename>This</typename><string>This = <seealso marker="#type-wxJoystickEvent">wxJoystickEvent()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>This</anno>
</spec>
<spec>
  <name>parent_class</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>resumePropagation</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>shouldPropagate</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>skip</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>stopPropagation</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, Jul 12 2017, 20:30:21.</timestamp>
</module>