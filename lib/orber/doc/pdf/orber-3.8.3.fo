<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
  <fo:layout-master-set>
    <fo:simple-page-master master-name="cover" margin="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin="0mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="left-page" margin-top="25mm" margin-bottom="15mm" margin-left="20mm" margin-right="25mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="left-header" extent="10mm"/>
      <fo:region-after region-name="left-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:simple-page-master master-name="right-page" margin-top="25mm" margin-bottom="15mm" margin-left="25mm" margin-right="20mm" page-height="297mm" page-width="210mm">
      <fo:region-body margin-top="15mm" margin-bottom="20mm"/>
      <fo:region-before region-name="right-header" extent="10mm"/>
      <fo:region-after region-name="right-footer" extent="10mm"/>
    </fo:simple-page-master>
    <fo:page-sequence-master master-name="document">
      <fo:repeatable-page-master-alternatives>
        <fo:conditional-page-master-reference master-reference="left-page" odd-or-even="even"/>
        <fo:conditional-page-master-reference master-reference="right-page" odd-or-even="odd"/>
      </fo:repeatable-page-master-alternatives>
    </fo:page-sequence-master>
  </fo:layout-master-set>
  <fo:bookmark-tree>
    <fo:bookmark internal-destination="cover-page" starting-state="show">
      <fo:bookmark-title>orber</fo:bookmark-title>
      <fo:bookmark internal-destination="idp1987264" starting-state="hide">
        <fo:bookmark-title>Orber User's Guide</fo:bookmark-title>
        <fo:bookmark internal-destination="idp6128" starting-state="hide">
          <fo:bookmark-title>The Orber Application</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3056" starting-state="hide">
            <fo:bookmark-title>Content Overview</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp725136" starting-state="hide">
            <fo:bookmark-title>Brief Description of the User's Guide</fo:bookmark-title>
            <fo:bookmark internal-destination="idp1491408" starting-state="hide">
              <fo:bookmark-title>ORB Kernel and IIOP Support</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp1489200" starting-state="hide">
              <fo:bookmark-title>Interface Repository</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp1488272" starting-state="hide">
              <fo:bookmark-title>IDL to Erlang Mapping</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp1003744" starting-state="hide">
              <fo:bookmark-title>CosNaming Service</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp1003040" starting-state="hide">
              <fo:bookmark-title>Resolving Initial References from Java or C++</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp610384" starting-state="hide">
              <fo:bookmark-title>Orber Stub/Skeleton</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp609248" starting-state="hide">
              <fo:bookmark-title>CORBA Exceptions</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp608192" starting-state="hide">
              <fo:bookmark-title>Interceptors</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp606880" starting-state="hide">
              <fo:bookmark-title>OrberWeb</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp1514144" starting-state="hide">
              <fo:bookmark-title>Debugging</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp972608" starting-state="hide">
          <fo:bookmark-title>Introduction to Orber</fo:bookmark-title>
          <fo:bookmark internal-destination="idp1004288" starting-state="hide">
            <fo:bookmark-title>Overview</fo:bookmark-title>
            <fo:bookmark internal-destination="idp25712" starting-state="hide">
              <fo:bookmark-title>Benefits</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp721232" starting-state="hide">
              <fo:bookmark-title>Purpose and Dependencies</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp1443376" starting-state="hide">
              <fo:bookmark-title>Prerequisites</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp1016880" starting-state="hide">
          <fo:bookmark-title>The Orber Application</fo:bookmark-title>
          <fo:bookmark internal-destination="idp852384" starting-state="hide">
            <fo:bookmark-title>ORB Kernel and IIOP </fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp460336" starting-state="hide">
            <fo:bookmark-title>The Object Request Broker (ORB)</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp504928" starting-state="hide">
            <fo:bookmark-title>Internet Inter-Object Protocol (IIOP)</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp613536" starting-state="hide">
          <fo:bookmark-title>Interface Repository</fo:bookmark-title>
          <fo:bookmark internal-destination="idp826672" starting-state="hide">
            <fo:bookmark-title>Interface Repository(IFR)</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp679600" starting-state="hide">
          <fo:bookmark-title>Installing Orber</fo:bookmark-title>
          <fo:bookmark internal-destination="idp436048" starting-state="hide">
            <fo:bookmark-title>Installation Process </fo:bookmark-title>
            <fo:bookmark internal-destination="idp437200" starting-state="hide">
              <fo:bookmark-title>Preparation</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp416496" starting-state="hide">
              <fo:bookmark-title>Jump Start Orber</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp542928" starting-state="hide">
              <fo:bookmark-title>Install Single Node Orber</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp969120" starting-state="hide">
              <fo:bookmark-title>Install RAM Based Multi Node Orber</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2030928" starting-state="hide">
              <fo:bookmark-title>Install Disk Based Multi Node Orber</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2038688" starting-state="hide">
            <fo:bookmark-title>Configuration</fo:bookmark-title>
            <fo:bookmark internal-destination="idp2286560" starting-state="hide">
              <fo:bookmark-title>Orber Environment Flags</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2348496" starting-state="hide">
            <fo:bookmark-title>Firewall Configuration</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2401456" starting-state="hide">
            <fo:bookmark-title>Interface Configuration</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2425008" starting-state="hide">
          <fo:bookmark-title>OMG IDL to Erlang Mapping</fo:bookmark-title>
          <fo:bookmark internal-destination="idp2427696" starting-state="hide">
            <fo:bookmark-title>OMG IDL to Erlang Mapping - Overview</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2430544" starting-state="hide">
            <fo:bookmark-title>OMG IDL Mapping Elements</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2437296" starting-state="hide">
            <fo:bookmark-title>Getting Started</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2444656" starting-state="hide">
            <fo:bookmark-title>Basic OMG IDL Types</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2509648" starting-state="hide">
            <fo:bookmark-title>Template OMG IDL Types and Complex Declarators</fo:bookmark-title>
            <fo:bookmark internal-destination="idp2541664" starting-state="hide">
              <fo:bookmark-title>String/WString Data Types</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2549488" starting-state="hide">
              <fo:bookmark-title>Sequence Data Type</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2551792" starting-state="hide">
              <fo:bookmark-title>Array Data Type</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2554032" starting-state="hide">
              <fo:bookmark-title>Fixed Data Type</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2567968" starting-state="hide">
            <fo:bookmark-title>Constructed OMG IDL Types</fo:bookmark-title>
            <fo:bookmark internal-destination="idp2591424" starting-state="hide">
              <fo:bookmark-title>Struct Data Type</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2594288" starting-state="hide">
              <fo:bookmark-title>Enum Data Type</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2595856" starting-state="hide">
              <fo:bookmark-title>Union Data Type</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2620624" starting-state="hide">
            <fo:bookmark-title>Scoped Names and Generated Files</fo:bookmark-title>
            <fo:bookmark internal-destination="idp2621376" starting-state="hide">
              <fo:bookmark-title>Scoped Names</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2641824" starting-state="hide">
              <fo:bookmark-title>Generated Files</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2667680" starting-state="hide">
            <fo:bookmark-title>Typecode, Identity and Name Access Functions</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2684896" starting-state="hide">
            <fo:bookmark-title>References to Constants</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2692016" starting-state="hide">
            <fo:bookmark-title>References to Objects Defined in OMG IDL</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2694784" starting-state="hide">
            <fo:bookmark-title>Exceptions</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2698720" starting-state="hide">
            <fo:bookmark-title>Access to Attributes</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2705552" starting-state="hide">
            <fo:bookmark-title>Invocations of Operations</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2724576" starting-state="hide">
            <fo:bookmark-title>Implementing the DB Application</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2750752" starting-state="hide">
            <fo:bookmark-title>Reserved Compiler Names and Keywords</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2840160" starting-state="hide">
            <fo:bookmark-title>Type Code Representation</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp2917408" starting-state="hide">
          <fo:bookmark-title>CosNaming Service</fo:bookmark-title>
          <fo:bookmark internal-destination="idp2920064" starting-state="hide">
            <fo:bookmark-title>Overview of the CosNaming Service</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2937152" starting-state="hide">
            <fo:bookmark-title>The Basic Use-cases of the Naming Service</fo:bookmark-title>
            <fo:bookmark internal-destination="idp2941936" starting-state="hide">
              <fo:bookmark-title>Fetch Initial Reference to the Naming Service</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2945120" starting-state="hide">
              <fo:bookmark-title>Creating a Naming Context</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2948736" starting-state="hide">
              <fo:bookmark-title>Binding and Unbinding Names to Objects</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2958048" starting-state="hide">
              <fo:bookmark-title>Resolving a Name to an Object</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2965872" starting-state="hide">
              <fo:bookmark-title>Listing the Bindings in a NamingContext</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2974752" starting-state="hide">
              <fo:bookmark-title>Destroying a Naming Context</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp2978816" starting-state="hide">
            <fo:bookmark-title>Interoperable Naming Service</fo:bookmark-title>
            <fo:bookmark internal-destination="idp2982832" starting-state="hide">
              <fo:bookmark-title>IOR</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp2984480" starting-state="hide">
              <fo:bookmark-title>corbaloc</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3041328" starting-state="hide">
              <fo:bookmark-title>corbaname</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3079760" starting-state="hide">
          <fo:bookmark-title>How to use security in Orber</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3082432" starting-state="hide">
            <fo:bookmark-title>Security in Orber</fo:bookmark-title>
            <fo:bookmark internal-destination="idp3083168" starting-state="hide">
              <fo:bookmark-title>Introduction</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3084944" starting-state="hide">
              <fo:bookmark-title>Enable Usage of Secure Connections</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3088784" starting-state="hide">
              <fo:bookmark-title>Configurations when Orber is Used on the Server Side</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3094176" starting-state="hide">
              <fo:bookmark-title>Configurations when Orber is Used on the Client Side</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3106448" starting-state="hide">
          <fo:bookmark-title>Orber Stubs/Skeletons</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3109264" starting-state="hide">
            <fo:bookmark-title>Orber Stubs and Skeletons Description</fo:bookmark-title>
            <fo:bookmark internal-destination="idp3110528" starting-state="hide">
              <fo:bookmark-title>Server Start</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3144112" starting-state="hide">
              <fo:bookmark-title>Pseudo Objects</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3164912" starting-state="hide">
              <fo:bookmark-title>Call-back Module</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3176064" starting-state="hide">
          <fo:bookmark-title>CORBA System and User Defined Exceptions</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3178752" starting-state="hide">
            <fo:bookmark-title>System Exceptions</fo:bookmark-title>
            <fo:bookmark internal-destination="idp3181232" starting-state="hide">
              <fo:bookmark-title>Status Field</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3194272" starting-state="hide">
              <fo:bookmark-title>Minor Field</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3196352" starting-state="hide">
              <fo:bookmark-title>Supported System Exceptions</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3231152" starting-state="hide">
            <fo:bookmark-title>User Defined Exceptions</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3233584" starting-state="hide">
            <fo:bookmark-title>Throwing Exceptions</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3237376" starting-state="hide">
            <fo:bookmark-title>Catching Exceptions</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3247888" starting-state="hide">
          <fo:bookmark-title>Orber Interceptors</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3250704" starting-state="hide">
            <fo:bookmark-title>Using Interceptors</fo:bookmark-title>
            <fo:bookmark internal-destination="idp3253344" starting-state="hide">
              <fo:bookmark-title>Configure Orber to Use Interceptors</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3257984" starting-state="hide">
              <fo:bookmark-title>Creating Interceptors</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3276672" starting-state="hide">
            <fo:bookmark-title>Interceptor Example</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3305456" starting-state="hide">
          <fo:bookmark-title>OrberWeb</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3308272" starting-state="hide">
            <fo:bookmark-title>Using OrberWeb</fo:bookmark-title>
            <fo:bookmark internal-destination="idp3315392" starting-state="hide">
              <fo:bookmark-title>The Menu Frame</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3325808" starting-state="hide">
              <fo:bookmark-title>The Configuration Data Frame</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3331600" starting-state="hide">
              <fo:bookmark-title>The IFR Data Frame</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3338960" starting-state="hide">
              <fo:bookmark-title>The NameService Data Frame</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3363056" starting-state="hide">
              <fo:bookmark-title>The Object Creation Data Frame</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3378816" starting-state="hide">
            <fo:bookmark-title>Starting OrberWeb</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3386720" starting-state="hide">
          <fo:bookmark-title>Debugging</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3389376" starting-state="hide">
            <fo:bookmark-title>Tools and FAQ</fo:bookmark-title>
            <fo:bookmark internal-destination="idp3390896" starting-state="hide">
              <fo:bookmark-title>Tools</fo:bookmark-title>
            </fo:bookmark>
            <fo:bookmark internal-destination="idp3425856" starting-state="hide">
              <fo:bookmark-title>FAQ</fo:bookmark-title>
            </fo:bookmark>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
      <fo:bookmark internal-destination="idp531712" starting-state="hide">
        <fo:bookmark-title>Reference Manual</fo:bookmark-title>
        <fo:bookmark internal-destination="idp576000" starting-state="hide">
          <fo:bookmark-title>any</fo:bookmark-title>
          <fo:bookmark internal-destination="idp311376" starting-state="hide">
            <fo:bookmark-title>create/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1008016" starting-state="hide">
            <fo:bookmark-title>create/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1286656" starting-state="hide">
            <fo:bookmark-title>set_typecode/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp744528" starting-state="hide">
            <fo:bookmark-title>get_typecode/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp673696" starting-state="hide">
            <fo:bookmark-title>set_value/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp413664" starting-state="hide">
            <fo:bookmark-title>get_value/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp408992" starting-state="hide">
          <fo:bookmark-title>fixed</fo:bookmark-title>
          <fo:bookmark internal-destination="idp387632" starting-state="hide">
            <fo:bookmark-title>create/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1418720" starting-state="hide">
            <fo:bookmark-title>get_typecode/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp675152" starting-state="hide">
            <fo:bookmark-title>add/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp421200" starting-state="hide">
            <fo:bookmark-title>subtract/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idm17088" starting-state="hide">
            <fo:bookmark-title>multiply/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp947248" starting-state="hide">
            <fo:bookmark-title>divide/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp471936" starting-state="hide">
            <fo:bookmark-title>unary_minus/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp1285904" starting-state="hide">
          <fo:bookmark-title>corba</fo:bookmark-title>
          <fo:bookmark internal-destination="idp583120" starting-state="hide">
            <fo:bookmark-title>create/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp583536" starting-state="hide">
            <fo:bookmark-title>create/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1978592" starting-state="hide">
            <fo:bookmark-title>create/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1979008" starting-state="hide">
            <fo:bookmark-title>create_link/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1979472" starting-state="hide">
            <fo:bookmark-title>create_link/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1979888" starting-state="hide">
            <fo:bookmark-title>create_link/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1916624" starting-state="hide">
            <fo:bookmark-title>dispose/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1920512" starting-state="hide">
            <fo:bookmark-title>create_nil_objref/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1923840" starting-state="hide">
            <fo:bookmark-title>create_subobject_key/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1930512" starting-state="hide">
            <fo:bookmark-title>get_subobject_key/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3524128" starting-state="hide">
            <fo:bookmark-title>get_pid/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3528016" starting-state="hide">
            <fo:bookmark-title>raise/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3532320" starting-state="hide">
            <fo:bookmark-title>reply/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3538256" starting-state="hide">
            <fo:bookmark-title>resolve_initial_references/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3538736" starting-state="hide">
            <fo:bookmark-title>resolve_initial_references/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3548992" starting-state="hide">
            <fo:bookmark-title>add_initial_service/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3554912" starting-state="hide">
            <fo:bookmark-title>remove_initial_service/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3559088" starting-state="hide">
            <fo:bookmark-title>list_initial_services/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3562288" starting-state="hide">
            <fo:bookmark-title>resolve_initial_references_remote/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3562704" starting-state="hide">
            <fo:bookmark-title>resolve_initial_references_remote/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1798400" starting-state="hide">
            <fo:bookmark-title>list_initial_services_remote/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1798880" starting-state="hide">
            <fo:bookmark-title>list_initial_services_remote/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1809952" starting-state="hide">
            <fo:bookmark-title>object_to_string/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1813680" starting-state="hide">
            <fo:bookmark-title>string_to_object/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1814144" starting-state="hide">
            <fo:bookmark-title>string_to_object/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp1828288" starting-state="hide">
            <fo:bookmark-title>print_object/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3587632" starting-state="hide">
            <fo:bookmark-title>add_alternate_iiop_address/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3595648" starting-state="hide">
            <fo:bookmark-title>orb_init/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3608352" starting-state="hide">
          <fo:bookmark-title>corba_object</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3610816" starting-state="hide">
            <fo:bookmark-title>get_interface/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3614480" starting-state="hide">
            <fo:bookmark-title>is_nil/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3617888" starting-state="hide">
            <fo:bookmark-title>is_a/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3618352" starting-state="hide">
            <fo:bookmark-title>is_a/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3629744" starting-state="hide">
            <fo:bookmark-title>is_remote/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3633008" starting-state="hide">
            <fo:bookmark-title>non_existent/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3633472" starting-state="hide">
            <fo:bookmark-title>non_existent/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3645456" starting-state="hide">
            <fo:bookmark-title>not_existent/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3645920" starting-state="hide">
            <fo:bookmark-title>not_existent/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3656064" starting-state="hide">
            <fo:bookmark-title>is_equivalent/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3660864" starting-state="hide">
            <fo:bookmark-title>hash/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3672128" starting-state="hide">
          <fo:bookmark-title>orber</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3674704" starting-state="hide">
            <fo:bookmark-title>start/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3675152" starting-state="hide">
            <fo:bookmark-title>start/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3679856" starting-state="hide">
            <fo:bookmark-title>jump_start/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3687200" starting-state="hide">
            <fo:bookmark-title>stop/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3689472" starting-state="hide">
            <fo:bookmark-title>info/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3689920" starting-state="hide">
            <fo:bookmark-title>info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3696064" starting-state="hide">
            <fo:bookmark-title>exception_info/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3698544" starting-state="hide">
            <fo:bookmark-title>is_system_exception/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3700960" starting-state="hide">
            <fo:bookmark-title>get_tables/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3703344" starting-state="hide">
            <fo:bookmark-title>get_ORBInitRef/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3706352" starting-state="hide">
            <fo:bookmark-title>get_ORBDefaultInitRef/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3709328" starting-state="hide">
            <fo:bookmark-title>domain/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3711664" starting-state="hide">
            <fo:bookmark-title>iiop_port/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3714560" starting-state="hide">
            <fo:bookmark-title>iiop_out_ports/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3717664" starting-state="hide">
            <fo:bookmark-title>iiop_out_ports_random/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3720720" starting-state="hide">
            <fo:bookmark-title>iiop_out_ports_attempts/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3723808" starting-state="hide">
            <fo:bookmark-title>iiop_ssl_port/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3726832" starting-state="hide">
            <fo:bookmark-title>iiop_timeout/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3734992" starting-state="hide">
            <fo:bookmark-title>iiop_connection_timeout/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3739072" starting-state="hide">
            <fo:bookmark-title>iiop_connections/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3739536" starting-state="hide">
            <fo:bookmark-title>iiop_connections/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3745760" starting-state="hide">
            <fo:bookmark-title>iiop_connections_pending/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3751616" starting-state="hide">
            <fo:bookmark-title>iiop_in_connection_timeout/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3755744" starting-state="hide">
            <fo:bookmark-title>iiop_acl/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3765200" starting-state="hide">
            <fo:bookmark-title>activate_audit_trail/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3765664" starting-state="hide">
            <fo:bookmark-title>activate_audit_trail/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3774128" starting-state="hide">
            <fo:bookmark-title>deactivate_audit_trail/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3777920" starting-state="hide">
            <fo:bookmark-title>add_listen_interface/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3778400" starting-state="hide">
            <fo:bookmark-title>add_listen_interface/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3778880" starting-state="hide">
            <fo:bookmark-title>add_listen_interface/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3801920" starting-state="hide">
            <fo:bookmark-title>remove_listen_interface/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3806256" starting-state="hide">
            <fo:bookmark-title>close_connection/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3806720" starting-state="hide">
            <fo:bookmark-title>close_connection/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3815168" starting-state="hide">
            <fo:bookmark-title>secure/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3818160" starting-state="hide">
            <fo:bookmark-title>ssl_server_options/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3821024" starting-state="hide">
            <fo:bookmark-title>ssl_client_options/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3823904" starting-state="hide">
            <fo:bookmark-title>set_ssl_client_options/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3827152" starting-state="hide">
            <fo:bookmark-title>objectkeys_gc_time/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3833024" starting-state="hide">
            <fo:bookmark-title>orber_nodes/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3836272" starting-state="hide">
            <fo:bookmark-title>install/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3836720" starting-state="hide">
            <fo:bookmark-title>install/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3852304" starting-state="hide">
            <fo:bookmark-title>uninstall/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3855648" starting-state="hide">
            <fo:bookmark-title>add_node/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3872480" starting-state="hide">
            <fo:bookmark-title>remove_node/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3876208" starting-state="hide">
            <fo:bookmark-title>configure/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp3891424" starting-state="hide">
          <fo:bookmark-title>orber_ifr</fo:bookmark-title>
          <fo:bookmark internal-destination="idp3896208" starting-state="hide">
            <fo:bookmark-title>init/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3899984" starting-state="hide">
            <fo:bookmark-title>find_repository/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3904752" starting-state="hide">
            <fo:bookmark-title>get_def_kind/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3908704" starting-state="hide">
            <fo:bookmark-title>destroy/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3912560" starting-state="hide">
            <fo:bookmark-title>get_id/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3916288" starting-state="hide">
            <fo:bookmark-title>set_id/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3919984" starting-state="hide">
            <fo:bookmark-title>get_name/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3923696" starting-state="hide">
            <fo:bookmark-title>set_name/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3927408" starting-state="hide">
            <fo:bookmark-title>get_version/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3931120" starting-state="hide">
            <fo:bookmark-title>set_version/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3934832" starting-state="hide">
            <fo:bookmark-title>get_defined_in/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3938608" starting-state="hide">
            <fo:bookmark-title>get_absolute_name/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3942368" starting-state="hide">
            <fo:bookmark-title>get_containing_repository/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3946240" starting-state="hide">
            <fo:bookmark-title>describe/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3950016" starting-state="hide">
            <fo:bookmark-title>move/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3955424" starting-state="hide">
            <fo:bookmark-title>lookup/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3959632" starting-state="hide">
            <fo:bookmark-title>contents/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3964608" starting-state="hide">
            <fo:bookmark-title>lookup_name/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3970544" starting-state="hide">
            <fo:bookmark-title>describe_contents/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3975648" starting-state="hide">
            <fo:bookmark-title>create_module/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3980752" starting-state="hide">
            <fo:bookmark-title>create_constant/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3986784" starting-state="hide">
            <fo:bookmark-title>create_struct/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3992368" starting-state="hide">
            <fo:bookmark-title>create_union/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp3998448" starting-state="hide">
            <fo:bookmark-title>create_enum/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4004000" starting-state="hide">
            <fo:bookmark-title>create_alias/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4009568" starting-state="hide">
            <fo:bookmark-title>create_interface/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4015216" starting-state="hide">
            <fo:bookmark-title>create_exception/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4020816" starting-state="hide">
            <fo:bookmark-title>get_type/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4024656" starting-state="hide">
            <fo:bookmark-title>lookup_id/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4028784" starting-state="hide">
            <fo:bookmark-title>get_primitive/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4033120" starting-state="hide">
            <fo:bookmark-title>create_string/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4037280" starting-state="hide">
            <fo:bookmark-title>create_wstring/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4041440" starting-state="hide">
            <fo:bookmark-title>create_fixed/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4045616" starting-state="hide">
            <fo:bookmark-title>create_sequence/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4050256" starting-state="hide">
            <fo:bookmark-title>create_array/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4054896" starting-state="hide">
            <fo:bookmark-title>create_idltype/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4059072" starting-state="hide">
            <fo:bookmark-title>get_type_def/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4062896" starting-state="hide">
            <fo:bookmark-title>set_type_def/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4067088" starting-state="hide">
            <fo:bookmark-title>get_value/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4070800" starting-state="hide">
            <fo:bookmark-title>set_value/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4074976" starting-state="hide">
            <fo:bookmark-title>get_members/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4078912" starting-state="hide">
            <fo:bookmark-title>set_members/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4083376" starting-state="hide">
            <fo:bookmark-title>get_discriminator_type/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4087120" starting-state="hide">
            <fo:bookmark-title>get_discriminator_type_def/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4090944" starting-state="hide">
            <fo:bookmark-title>set_discriminator_type_def/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4094816" starting-state="hide">
            <fo:bookmark-title>get_original_type_def/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4098560" starting-state="hide">
            <fo:bookmark-title>set_original_type_def/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4102784" starting-state="hide">
            <fo:bookmark-title>get_kind/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4106496" starting-state="hide">
            <fo:bookmark-title>get_bound/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4110416" starting-state="hide">
            <fo:bookmark-title>set_bound/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4114816" starting-state="hide">
            <fo:bookmark-title>get_element_type/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4118576" starting-state="hide">
            <fo:bookmark-title>get_element_type_def/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4122400" starting-state="hide">
            <fo:bookmark-title>set_element_type_def/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4126736" starting-state="hide">
            <fo:bookmark-title>get_length/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4130432" starting-state="hide">
            <fo:bookmark-title>set_length/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4134112" starting-state="hide">
            <fo:bookmark-title>get_mode/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4138080" starting-state="hide">
            <fo:bookmark-title>set_mode/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4142512" starting-state="hide">
            <fo:bookmark-title>get_result/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4146288" starting-state="hide">
            <fo:bookmark-title>get_result_def/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4150048" starting-state="hide">
            <fo:bookmark-title>set_result_def/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4154288" starting-state="hide">
            <fo:bookmark-title>get_params/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4158112" starting-state="hide">
            <fo:bookmark-title>set_params/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4162352" starting-state="hide">
            <fo:bookmark-title>get_contexts/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4166064" starting-state="hide">
            <fo:bookmark-title>set_contexts/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4170224" starting-state="hide">
            <fo:bookmark-title>get_exceptions/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4174000" starting-state="hide">
            <fo:bookmark-title>set_exceptions/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4178192" starting-state="hide">
            <fo:bookmark-title>get_base_interfaces/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4181952" starting-state="hide">
            <fo:bookmark-title>set_base_interfaces/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4186128" starting-state="hide">
            <fo:bookmark-title>is_a/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4190368" starting-state="hide">
            <fo:bookmark-title>describe_interface/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4194128" starting-state="hide">
            <fo:bookmark-title>create_attribute/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4200240" starting-state="hide">
            <fo:bookmark-title>create_operation/9</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4215488" starting-state="hide">
          <fo:bookmark-title>orber_tc</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4219120" starting-state="hide">
            <fo:bookmark-title>null/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4219568" starting-state="hide">
            <fo:bookmark-title>void/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4220016" starting-state="hide">
            <fo:bookmark-title>short/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4220464" starting-state="hide">
            <fo:bookmark-title>unsigned_short/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4220912" starting-state="hide">
            <fo:bookmark-title>long/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4221360" starting-state="hide">
            <fo:bookmark-title>unsigned_long/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4221808" starting-state="hide">
            <fo:bookmark-title>long_long/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4222256" starting-state="hide">
            <fo:bookmark-title>unsigned_long_long/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4222720" starting-state="hide">
            <fo:bookmark-title>wchar/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4223168" starting-state="hide">
            <fo:bookmark-title>float/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4223616" starting-state="hide">
            <fo:bookmark-title>double/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4224064" starting-state="hide">
            <fo:bookmark-title>boolean/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4224512" starting-state="hide">
            <fo:bookmark-title>char/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4224960" starting-state="hide">
            <fo:bookmark-title>octet/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4225408" starting-state="hide">
            <fo:bookmark-title>any/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4225856" starting-state="hide">
            <fo:bookmark-title>typecode/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4226304" starting-state="hide">
            <fo:bookmark-title>principal/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4228592" starting-state="hide">
            <fo:bookmark-title>object_reference/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4233168" starting-state="hide">
            <fo:bookmark-title>struct/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4239552" starting-state="hide">
            <fo:bookmark-title>union/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4249216" starting-state="hide">
            <fo:bookmark-title>enum/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4255600" starting-state="hide">
            <fo:bookmark-title>string/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4259264" starting-state="hide">
            <fo:bookmark-title>wstring/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4262928" starting-state="hide">
            <fo:bookmark-title>fixed/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4266624" starting-state="hide">
            <fo:bookmark-title>sequence/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4271216" starting-state="hide">
            <fo:bookmark-title>array/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4275776" starting-state="hide">
            <fo:bookmark-title>alias/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4281264" starting-state="hide">
            <fo:bookmark-title>exception/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4287648" starting-state="hide">
            <fo:bookmark-title>get_tc/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4288096" starting-state="hide">
            <fo:bookmark-title>get_tc/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4293264" starting-state="hide">
            <fo:bookmark-title>check_tc/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4302768" starting-state="hide">
          <fo:bookmark-title>orber_acl</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4307408" starting-state="hide">
            <fo:bookmark-title>match/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4307872" starting-state="hide">
            <fo:bookmark-title>match/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4315232" starting-state="hide">
            <fo:bookmark-title>verify/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4320912" starting-state="hide">
            <fo:bookmark-title>range/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4332464" starting-state="hide">
          <fo:bookmark-title>CosNaming</fo:bookmark-title>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4346432" starting-state="hide">
          <fo:bookmark-title>CosNaming_NamingContext</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4370880" starting-state="hide">
            <fo:bookmark-title>bind/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4375984" starting-state="hide">
            <fo:bookmark-title>rebind/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4381152" starting-state="hide">
            <fo:bookmark-title>bind_context/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4385904" starting-state="hide">
            <fo:bookmark-title>rebind_context/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4390720" starting-state="hide">
            <fo:bookmark-title>resolve/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4395504" starting-state="hide">
            <fo:bookmark-title>unbind/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4399616" starting-state="hide">
            <fo:bookmark-title>new_context/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4403264" starting-state="hide">
            <fo:bookmark-title>bind_new_context/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4407456" starting-state="hide">
            <fo:bookmark-title>destroy/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4411232" starting-state="hide">
            <fo:bookmark-title>list/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4425008" starting-state="hide">
          <fo:bookmark-title>CosNaming_NamingContextExt</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4431056" starting-state="hide">
            <fo:bookmark-title>to_string/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4436064" starting-state="hide">
            <fo:bookmark-title>to_name/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4441968" starting-state="hide">
            <fo:bookmark-title>to_url/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4447184" starting-state="hide">
            <fo:bookmark-title>resolve_str/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4458656" starting-state="hide">
          <fo:bookmark-title>CosNaming_BindingIterator</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4469984" starting-state="hide">
            <fo:bookmark-title>next_one/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4473808" starting-state="hide">
            <fo:bookmark-title>next_n/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4478480" starting-state="hide">
            <fo:bookmark-title>destroy/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4489168" starting-state="hide">
          <fo:bookmark-title>lname</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4497200" starting-state="hide">
            <fo:bookmark-title>create/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4500368" starting-state="hide">
            <fo:bookmark-title>insert_component/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4504976" starting-state="hide">
            <fo:bookmark-title>get_component/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4509520" starting-state="hide">
            <fo:bookmark-title>delete_component/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4514096" starting-state="hide">
            <fo:bookmark-title>num_component/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4517776" starting-state="hide">
            <fo:bookmark-title>equal/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4521472" starting-state="hide">
            <fo:bookmark-title>less_than/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4525184" starting-state="hide">
            <fo:bookmark-title>to_idl_form/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4528944" starting-state="hide">
            <fo:bookmark-title>from_idl_form/1</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4539696" starting-state="hide">
          <fo:bookmark-title>lname_component</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4547744" starting-state="hide">
            <fo:bookmark-title>create/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4550928" starting-state="hide">
            <fo:bookmark-title>get_id/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4554144" starting-state="hide">
            <fo:bookmark-title>set_id/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4557824" starting-state="hide">
            <fo:bookmark-title>get_kind/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4561040" starting-state="hide">
            <fo:bookmark-title>set_kind/2</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4571344" starting-state="hide">
          <fo:bookmark-title>Module_Interface</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4602192" starting-state="hide">
            <fo:bookmark-title>Module_Interface:typeID/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4605440" starting-state="hide">
            <fo:bookmark-title>Module_Interface:oe_create/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4608608" starting-state="hide">
            <fo:bookmark-title>Module_Interface:oe_create_link/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4611824" starting-state="hide">
            <fo:bookmark-title>Module_Interface:oe_create/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4615920" starting-state="hide">
            <fo:bookmark-title>Module_Interface:oe_create_link/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4620048" starting-state="hide">
            <fo:bookmark-title>Module_Interface:oe_create/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4635872" starting-state="hide">
            <fo:bookmark-title>Module_Interface:oe_create_link/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4651584" starting-state="hide">
            <fo:bookmark-title>Module_Interface:own_functions/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4652080" starting-state="hide">
            <fo:bookmark-title>Module_Interface:own_functions/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4669520" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:init/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4675104" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:terminate/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4678816" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:code_change/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4684304" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:handle_info/2</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4693216" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:own_functions/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4693728" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:own_functions/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4694240" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:own_functions/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4694752" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:own_functions/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4703456" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:own_functions/4</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4703968" starting-state="hide">
            <fo:bookmark-title>Module_Interface_impl:own_functions/5</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4718064" starting-state="hide">
          <fo:bookmark-title>interceptors</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4732592" starting-state="hide">
            <fo:bookmark-title>new_in_connection/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4733072" starting-state="hide">
            <fo:bookmark-title>new_in_connection/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4741840" starting-state="hide">
            <fo:bookmark-title>new_out_connection/3</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4742320" starting-state="hide">
            <fo:bookmark-title>new_out_connection/5</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4747744" starting-state="hide">
            <fo:bookmark-title>closed_in_connection/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4752976" starting-state="hide">
            <fo:bookmark-title>closed_out_connection/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4758208" starting-state="hide">
            <fo:bookmark-title>in_reply/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4765312" starting-state="hide">
            <fo:bookmark-title>in_reply_encoded/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4771408" starting-state="hide">
            <fo:bookmark-title>in_request/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4776976" starting-state="hide">
            <fo:bookmark-title>in_request_encoded/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4782608" starting-state="hide">
            <fo:bookmark-title>out_reply/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4789680" starting-state="hide">
            <fo:bookmark-title>out_reply_encoded/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4795712" starting-state="hide">
            <fo:bookmark-title>out_request/6</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4801712" starting-state="hide">
            <fo:bookmark-title>out_request_encoded/6</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
        <fo:bookmark internal-destination="idp4814768" starting-state="hide">
          <fo:bookmark-title>orber_diagnostics</fo:bookmark-title>
          <fo:bookmark internal-destination="idp4818480" starting-state="hide">
            <fo:bookmark-title>nameservice/0</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4818928" starting-state="hide">
            <fo:bookmark-title>nameservice/1</fo:bookmark-title>
          </fo:bookmark>
          <fo:bookmark internal-destination="idp4824880" starting-state="hide">
            <fo:bookmark-title>missing_modules/0</fo:bookmark-title>
          </fo:bookmark>
        </fo:bookmark>
      </fo:bookmark>
    </fo:bookmark>
  </fo:bookmark-tree>
  <fo:page-sequence font-family="sans-serif" force-page-count="even" master-reference="cover" font-size="10pt">
    <fo:flow flow-name="xsl-region-body">
      <fo:block space-before="130mm" space-before.conditionality="retain" text-align="end">
        <fo:external-graphic src="/root/download/otp_src_20.0/bootstrap/lib/erl_docgen/priv/images/erlang-logo.gif"/>
      </fo:block>
      <fo:block id="cover-page" border-before-style="solid" border-before-width="10pt" border-color="#960003" font-size="2.3em" padding-before="0.5em" text-align="end">orber</fo:block>
      <fo:block font-size="0.9em" text-align="end">Copyright © 1997-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em" text-align="end">orber 3.8.3</fo:block>
      <fo:block font-size="0.9em" text-align="end">July 12, 2017</fo:block>
      <fo:block padding-before="2.5em" font-size="1.33em" font-weight="bold" color="#C00" text-align="end"/>
      <fo:block break-before="page" border-before-style="solid" border-before-width="1pt" border-color="#960003" font-weight="bold" padding-before="0.5em" space-before="200mm" space-before.conditionality="retain">Copyright © 1997-2017 Ericsson AB. All Rights Reserved.</fo:block>
      <fo:block font-size="0.9em">
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    Ericsson AB. All Rights Reserved..
        </fo:block>
      <fo:block font-size="0.9em" font-weight="bold" space-before="2em">July 12, 2017</fo:block>
    </fo:flow>
  </fo:page-sequence>
  <fo:page-sequence font-family="serif" master-reference="document" initial-page-number="1" font-size="10pt">
    <fo:static-content flow-name="left-header">
      <fo:block text-align="start" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-header">
      <fo:block text-align="end" border-after-style="solid" border-after-width="2pt" border-color="#960003" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">
        <fo:retrieve-marker retrieve-boundary="page-sequence" retrieve-class-name="chapter-title" retrieve-position="first-including-carryover"/>
      </fo:block>
    </fo:static-content>
    <fo:static-content flow-name="left-footer">
      <fo:block text-align="start" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold"><fo:page-number/> | Ericsson AB. All Rights Reserved.:
            orber</fo:block>
    </fo:static-content>
    <fo:static-content flow-name="right-footer">
      <fo:block text-align="end" font-family="DejaVuSans, sans-serif" font-size="0.9em" font-weight="bold">Ericsson AB. All Rights Reserved.:
            orber | <fo:page-number/></fo:block>
    </fo:static-content>
    <fo:flow flow-name="xsl-region-body"><fo:block/><fo:block id="idp1987264" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">1   
      Orber User's Guide</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">Orber</fo:inline> application is an Erlang implementation of a
      CORBA Object Request Broker.</fo:block>
  <fo:block id="idp6128" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.1  The Orber Application</fo:marker>1.1  The Orber Application</fo:block><fo:block id="idp3056" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.1 
      Content Overview</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Orber documentation is divided into three sections:
      </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">PART ONE - The User's Guide  
                    <fo:block/>
Description of the Orber Application including IDL-to-Erlang
          language mapping, services and a small tutorial demonstrating 
          the development of a simple service.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">PART TWO - Release Notes
                    <fo:block/>
A concise history of Orber.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">PART THREE - The Reference Manual
                    <fo:block/>
 A quick reference guide, including a
          brief description, to all the functions available in Orber.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  <fo:block id="idp725136" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.1.2 
      Brief Description of the User's Guide</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The User's Guide  contains the following parts:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">ORB kernel and IIOP support</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Interface Repository</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">IDL to Erlang mapping</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CosNaming Service</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Resolving initial reference from Java or C++</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Tutorial - creating a simple service </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CORBA Exceptions </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Interceptors</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">OrberWeb</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Debugging
          </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>

    <fo:block id="idp1491408" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">ORB Kernel and IIOP Support</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ORB kernel which has IIOP support will allow the creation
        of persistent server objects in Erlang. These objects can also
        be accessed via Erlang and Java environments. For the moment a
        Java enabled ORB is needed to generate Java from IDL to use
        Java server objects (this has been tested using OrbixWeb).</fo:block>
    

    <fo:block id="idp1489200" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Interface Repository</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The IFR is an interface repository used for some type-checking
        when coding/decoding IIOP. The IFR is capable of  storing all
        interfaces and declarations of OMG IDL.</fo:block>
    

    <fo:block id="idp1488272" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">IDL to Erlang Mapping</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The OMG IDL mapping for Erlang, which is necessary to access the
        functionality of Orber, is described, The mapping structure is 
        included as the basic and the constructed OMG IDL types 
        references, invocations and Erlang characteristics. An example is
        also provided.</fo:block>
    

    <fo:block id="idp1003744" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">CosNaming Service</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber contains a CosNaming compliant service.</fo:block>
    

    <fo:block id="idp1003040" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Resolving Initial References from Java or C++</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A couple of classes are added to Orber to simplify initial 
        reference access from Java or C++.
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Resolving initial reference from Java</fo:inline>        <fo:block/>
 A class with only one method which returns an Interoperable Object Referenceon the
        external string format to the INIT object (see "Interoperable
        Naming Service" specification).</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Resolving initial reference from C++</fo:inline>        <fo:block/>

        A class (and header file) with only one method which returns
        an IOR on the external  string format to the INIT object (see
        "Interoperable Naming Service" specification).</fo:block>
    

    <fo:block id="idp610384" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Orber Stub/Skeleton</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An example which describes the API and behavior of Orber stubs and skeletons. </fo:block>
    

    <fo:block id="idp609248" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">CORBA Exceptions</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A listing of all system exceptions supported by Orber and how one should
        handle them. This chapter also describe how to generate user defined 
        exceptions.</fo:block>
    

    <fo:block id="idp608192" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Interceptors</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Descibes how to implement and activate interceptors.</fo:block>
    

    <fo:block id="idp606880" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">OrberWeb</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Offers the possibility to administrate and supervise Orber via a GUI.</fo:block>
    

    <fo:block id="idp1514144" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Debugging</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Describes how to use different tools when debugging and/or developing
        new applications using Orber. Also includes a FAQ, which deal with
        the most common mistakes when using Orber.
        </fo:block>
    
  <fo:block id="idp972608" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.2  Introduction to Orber</fo:marker>1.2  Introduction to Orber</fo:block><fo:block id="idp1004288" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.2.1 
      Overview</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Orber application is a CORBA compliant Object Request Brokers
      (ORB), which provides CORBA functionality in an Erlang
      environment. Essentially, the ORB channels communication or
      transactions between nodes in a
      heterogeneous environment.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Common Object Request Broker Architecture is a common communication standard developed by the OMG (Object Management Group)(Common Object Request Broker
      Architecture) provides an interface definition language  allowing
      efficient system integration and also supplies standard
      specifications for some services.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Orber application contains the following parts:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">ORB kernel and IIOP support</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Interface Repository</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Interface Definition Language Mapping for Erlang</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CosNaming Service</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>

    <fo:block id="idp25712" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Benefits</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber provides CORBA functionality in an Erlang environment that enables:
        </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Platform interoperability and transparency</fo:inline></fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber enables communication between
            OTP applications or Erlang environment applications and
            other platforms; for example,  Windows NT, Solaris
            etc, allowing platform  transparency. This is especially helpful in situations where there
            are many users with  different platforms.  For example,
            booking airline tickets would require the airline database
            and hundreds of travel agents (who may not have the same
            platform) to book seats on flights. </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Application level interoperability and transparency</fo:inline></fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">As Orber is a CORBA compliant application, its purpose is
            to provide interoperability and transparency on the application
            level. 
            Orber simplifies the distributed system software  by defining the
            environment as  objects, which in effect, views
            everything as identical regardless of programming
            languages.            <fo:block/>
 Previously, time-consuming programming was
            required to facilitate communication between different languages.
            However, with CORBA compliant Orber the Application
            Programmer is relieved of this task. This makes 
            communication on an application level relatively transparent to the user.</fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    

    <fo:block id="idp721232" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Purpose and Dependencies</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The system architecture and OTP dependencies of Orber are illustrated in figure 1 below:</fo:block>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dependent.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        2.1:
         
        
Figure 1: Orber Dependencies and Structure.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber  is dependent on  Mnesia (see the Mnesia
        documentation) - an Erlang database management application
        used to store object information.</fo:block>
      <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Although Orber does not have a  run-time
          application dependency to IC (an Interface Definition Language - IDL is the OMG specified interface definition language, used to define the CORBA object interfaces.compiler for
          Erlang), it is necessary when building
          services and applications.  See the IC documentation for
          further details.</fo:block>
      </fo:block>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="orbs.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        2.2:
         
        
Figure 2: ORB interface between Java and Erlang Environment Nodes.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This simplified illustration in figure 2 demonstrates how Orber can facilitate communication in a heterogeneous environment. The Erlang Nodes running 
        OTP and the other Node running applications written in Java  can
        communicate via an Object Request Broker - ORB open software bus architecture specified by the OMG which allows object components to communicate in a heterogeneous environment.(Object Request Broker). Using
        Orber means that CORBA functions can be used to achieve this
        communication.
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For example, if one of the above nodes requests an object, it does not
        need to know if that object is located on the same, or 
        different, Erlang or Java nodes. The ORB will channel the
        information creating platform and application transparency for
        the user.
        </fo:block>
    

    <fo:block id="idp1443376" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Prerequisites</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To fully understand the concepts presented in the
        documentation, it is recommended that the user is familiar
        with distributed programming and CORBA (Common Object Request
        Broker Architecture).  
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Recommended reading includes <fo:inline font-weight="bold">Open Telecom Platform Documentation Set</fo:inline> and <fo:inline font-weight="bold">Concurrent Programming in Erlang</fo:inline>.
        </fo:block>
    
  <fo:block id="idp1016880" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.3  The Orber Application</fo:marker>1.3  The Orber Application</fo:block><fo:block id="idp852384" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.1 
      ORB Kernel and IIOP </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This chapter gives a brief overview of the ORB and its relation
      to objects in a distributed environment and the usage of Domains
      in Orber.
      Also Internet-Inter ORB Protocol (Internet-Inter ORB Protocol) is discussed and how this
      protocol facilitates communication between ORBs to
      allow the accessory of persistent server objects in Erlang. </fo:block>
  <fo:block id="idp460336" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.2 
      The Object Request Broker (ORB)</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An ORB kernel can be best described as the middle-ware, which
      creates relationships between clients and servers, but is
      defined by its interfaces.  This allows transparency for the
      user, as they do not have to be aware of where the requested
      object is located. Thus, the programmer can work with any other
      platform provided that an IDL mapping and interfaces exist. 
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The IDL mapping which is described in a later chapter is the
      translator between other platforms, and languages. However, it
      is the ORB, which provides  objects with a structure by which
      they can communicate with other objects.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">ORBs intercept and direct messages from one object, pass this
      message using IIOP to another ORB, which then directs the
      message to the indicated object.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An ORB is the base on which interfaces, communication stubs
      and mapping can be built to enable communication between
      objects. Orber uses A domain allows a more efficient communication protocol to be used between objects not on the same node without the need of an ORBto group objects of different nodes
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">How the ORB provides communication is shown very simply in figure 1 below: </fo:block>
    
    <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="theORB.gif"/>
      <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        3.1:
         
        
Figure 1: How the Object Request Broker works.</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The domain in Orber  gives an extra aspect to the distributed object
      environment as each domain has one ORB, but it is distributed over
      a number of object in different nodes. The domain binds objects on
      nodes  more closely than distributed objects in different domains.  The
      advantage of a domain is that a faster communication  exists between
      nodes and objects of the same domain. An internal communication protocol
      (other than IIOP)  allows a
      more efficient communication between these objects. </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Unlike objects, domains can only have one name
        so that no communication ambiguities exist between  domains.</fo:block>
    </fo:block>
  <fo:block id="idp504928" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.3.3 
      Internet Inter-Object Protocol (IIOP)</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">IIOP is a communication protocol developed by the OMG to
      facilitate communication in a distributed object-oriented
      environment.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Figure 2 below demonstrates how IIOP works between objects:</fo:block>
    
    <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="iiop.gif"/>
      <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        3.2:
         
        
Figure 2: IIOP communication between domains and objects.</fo:block>
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Within the Orber domains the objects communicate without
        using the IIOP.  However,  the user is unaware of the difference in protocols, as this difference is not visible. </fo:block>
    </fo:block>
  <fo:block id="idp613536" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.4  Interface Repository</fo:marker>1.4  Interface Repository</fo:block><fo:block id="idp826672" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.4.1 
      Interface Repository(IFR)</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The IFR is an interface repository built on the Mnesia
      application. Orber uses the  IFR for some type-checking
      when coding/decoding IIOP. The IFR is capable of storing all
      interfaces and declarations of OMG IDL.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The interface repository is mainly used for dynamical
      interfaces, and as none are currently supported this function
      is only really used for retrieving information about interfaces.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Functions relating to the manipulation of the IFR including,
      initialization of the IFR, as well as, locating, creating and
      destroying initial references are detailed further in the Manual
      Pages.
      </fo:block>
  <fo:block id="idp679600" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.5  Installing Orber</fo:marker>1.5  Installing Orber</fo:block><fo:block id="idp436048" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.1 
      Installation Process </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This chapter describes how to install Orber in an Erlang
      Environment.</fo:block>

    <fo:block id="idp437200" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Preparation</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To begin with, you must decide if you want to run Orber as a:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Single node (non-distributed)</fo:inline> - all communication with other
         Orber instances and ORB's supplied by other vendors use the OMG
         GIOP protocol.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Multi node (distributed)</fo:inline> - all Orber nodes, within the same
        <fo:inline font-family="monospace">domain</fo:inline>, communicate via the Erlang distribution protocol.
         For all other Orber instances, i.e. not part of the same <fo:inline font-family="monospace">domain</fo:inline>,
         and ORB's supplied by other vendors, the OMG GIOP protocol
         is used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Which approach to use is highly implementation specific, but a few
        things you should consider:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>All nodes within an Orber domain should have the same
         security level.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the capacity is greater than load (volume of traffic)
         a single-node Orber might be a good solution.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>In some cases the distributed system architecture requires a
         single-node is the structure of the ORB or ORBs as defined during the install process is called the "installation"..</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>A multi-node Orber makes it possible to load balance
         and create a more fault tolerant system. The Objects
         can also have a uniform view if you use distributed
         Mnesia tables.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Since the GIOP protocol creates a larger overhead than the
         Erlang distribution protocol, the performance will be better
         when communicating with Objects within the same Orber domain
         compared with inter ORB communication (GIOP).</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">You also have to decide if you want Orber to store internal data using
        <fo:inline font-family="monospace">disc_copies</fo:inline> and/or <fo:inline font-family="monospace">ram_copies</fo:inline>. Which storage type you should
        depends if/how you intend to use Mnesia in your application. If you
        intend to use <fo:inline font-family="monospace">disc_copies</fo:inline> you must start with creating a Mnesia
        schema, which contain information about the location of the Erlang nodes
        where Orber is planned to be run. For more background information, 
        see the Mnesia documentation.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In some cases it is absolutely necessary to change the default configuration
        of Orber. For example, if two Orber-ORB's shall be able to communicate
        via GIOP, they must have a unique <fo:inline font-family="monospace">domain</fo:inline> domain. Consult the
        <fo:inline font-style="italic">configuration settings</fo:inline>
        section. If  you encounter any problems; see the chapter about 
        <fo:inline font-weight="bold">Debugging</fo:inline> in this User's Guide.</fo:block>
    

    <fo:block id="idp416496" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Jump Start Orber</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The easiest way to start Orber is to use <fo:inline font-family="monospace">orber:jump_start(Port)</fo:inline>,
        which start a single-node ORB with (most likely) a unique
        domain (i.e. "IP-number:Port"). This function may only be used
        during development and testing. For any other situation, install and
        start Orber as described in the following sections.
        The listen port, i.e. iiop_port configuration parameter, is set to
        the supplied Port.</fo:block>
      <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">How Orber is configured when using <fo:inline font-family="monospace">orber:jump_start(Port)</fo:inline>
          may change at any time without warning. Hence, this operation must
          not be used in systems delivered to a customer.</fo:block>
      </fo:block>
    

    <fo:block id="idp542928" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Install Single Node Orber</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since a single node Orber communicate via the OMG GIOP protocol it is not
        necessary to start the Erlang distribution (i.e. using <fo:inline font-family="monospace">-name/-sname</fo:inline>).</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If we use <fo:inline font-family="monospace">ram_copies</fo:inline> there is no need for creating a disk based
        schema. Simply use:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
erl&gt; mnesia:start().
erl&gt; corba:orb_init([{domain, "MyRAMSingleNodeORB"}]).
erl&gt; orber:install([node()], [{ifr_storage_type, ram_copies}]).
erl&gt; orber:start().
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you installation requires <fo:inline font-family="monospace">disc_copies</fo:inline> you must begin with
        creating a Mnesia schema. Otherwise, the installation is similar
        to a RAM installation:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
erl&gt; mnesia:create_schema([node()]).
erl&gt; mnesia:start().
erl&gt; corba:orb_init([{domain, "MyDiskSingleNodeORB"}]).
erl&gt; orber:install([node()], [{ifr_storage_type, disc_copies},
                              {nameservice_storage_type, disc_copies}]).
erl&gt; orber:start().
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">You can still choose to store the IFR data as ram_copies, but then
        the data must be re-installed (i.e. invoke <fo:inline font-family="monospace">orber:install/2</fo:inline>)
        if the node is restarted. Hence, since the IFR data is rather static
        you should use <fo:inline font-family="monospace">disc_copies</fo:inline>. For more information see the
        <fo:inline font-family="monospace">orber</fo:inline> section in the reference manual.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you do not need to change Orber's configuration you can skip
        <fo:inline font-style="italic">orb_init/1</fo:inline>. 
        But, you <fo:inline font-weight="bold">should</fo:inline> at least set the IIOP timeout parameters.</fo:block>
    

    <fo:block id="idp969120" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Install RAM Based Multi Node Orber</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Within a domain Orber uses the Erlang distribution protocol. Hence, you
        <fo:inline font-weight="bold">must</fo:inline> start it first by, for example, using:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
hostA&gt; erl -sname nodeA
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In this example, we assume that we want to use two nodes; <fo:inline font-family="monospace">nodeA</fo:inline> and
        <fo:inline font-family="monospace">nodeB</fo:inline>. Since Mnesia must know which other nodes should a part
        of the distribution we either need to add the Mnesia configuration
        parameter <fo:inline font-family="monospace">extra_db_nodes</fo:inline> or use <fo:inline font-family="monospace">mnesia:change_config/2</fo:inline>. To 
        begin with, Mnesia must be started on all nodes before we can install
        Orber:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
nodeA@hostA&gt; mnesia:start().
nodeA@hostA&gt; mnesia:change_config(extra_db_nodes, 
                                  [nodeA@hostA, nodeB@hostB]).
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After that the above have been repeated on <fo:inline font-family="monospace">nodeB</fo:inline> we must
        first make sure that both nodes will use the same domain name, then
        we can install Orber:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
nodeA@hostA&gt; corba:orb_init([{domain, "MyRAMMultiNodeORB"}]).
nodeA@hostA&gt; orber:install([nodeA@hostA, nodeB@hostB],
                           [{ifr_storage_type, ram_copies}]).
nodeA@hostA&gt; orber:start().
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note that you can only invoke <fo:inline font-family="monospace">orber:install/1/2</fo:inline> on one of the
        nodes. Now we can start Orber on the other node:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
nodeB@hostB&gt; corba:orb_init([{domain, "MyRAMMultiNodeORB"}]).
nodeB@hostB&gt; orber:start().
      </fo:block>
    

    <fo:block id="idp2030928" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Install Disk Based Multi Node Orber</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">As for RAM based multi-node Orber installations, the Erlang distribution
        must be started (e.g. erl -sname nodeA). The major difference is that
        when it is disk based a Mnesia schema must be created:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
nodeA@hostA&gt; mnesia:create_schema([nodeA@hostA, nodeB@hostB]).
nodeA@hostA&gt; mnesia:start().
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In this example, we assume that we want to use two nodes; <fo:inline font-family="monospace">nodeA</fo:inline> and
        <fo:inline font-family="monospace">nodeB</fo:inline>. Since it is not possible to create a schema on more than 
        one node. Hence, all we have to do is to start Mnesia (i.e. invoke 
        <fo:inline font-family="monospace">mnesia:start()</fo:inline>) on <fo:inline font-family="monospace">nodeB</fo:inline>.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After Mnesia have been started on all nodes, you must confirm that all 
        nodes have the same domain name, then Orber is ready to be installed:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
nodeA@hostA&gt; corba:orb_init([{domain, "MyDiskMultiNodeORB"}]).
nodeA@hostA&gt; orber:install([nodeA@hostA, nodeB@hostB],
                           [{ifr_storage_type, disc_copies}]).
nodeA@hostA&gt; orber:start().
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note that you can only invoke <fo:inline font-family="monospace">orber:install/1/2</fo:inline> on one of the
        nodes. Now we can start Orber on the other node:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
nodeB@hostB&gt; corba:orb_init([{domain, "MyDiskMultiNodeORB"}]).
nodeB@hostB&gt; orber:start().
      </fo:block>
    

  <fo:block id="idp2038688" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.2 
      Configuration</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is essential that one configure Orber properly, to avoid, for example,
      malicious attacks and automatically terminate IIOP connections no longer
      in use. An easy way to extract information about Orber's configuration
      parameters is to invoke the operation
      <fo:inline font-style="italic">orber:info/1/2</fo:inline>.
      Orber offer the following configuration parameters:</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Key</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Range</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Default</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">domain</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">string()</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"ORBER"</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_port</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt;= 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">4001</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">nat_iiop_port</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | {local, integer(), [{integer(), integer()}]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">The same as <fo:inline font-family="monospace">iiop_port</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_out_ports</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0 | {integer(),integer()}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_out_ports_attempts</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_out_ports_random</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">true | false</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">false</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_max_fragments</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_max_in_requests</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_max_in_connections</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_backlog</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">5</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_packet_size</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ip_address</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">string() | {multiple, [string()]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">All interfaces</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ip_address_local</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">string()</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Defined by the underlying system</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">nat_ip_address</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">string() | {multiple, [string()]} |  {local, string(), [{string(), string()}]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">The same as <fo:inline font-family="monospace">ip_address</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">objectkeys_gc_time</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">giop_version</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{1,0} | {1,1} | {1,2}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{1,1}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_setup_connection_timeout</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_connection_timeout</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_in_connection_timeout</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_out_keepalive</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">true | false</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">false</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_in_keepalive</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">true | false</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">false</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_timeout</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">interceptors</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{native, [atom()]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">-</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">local_interceptors</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{native, [atom()]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">-</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">orbInitRef</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">[string()] | undefined</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">undefined</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">orbDefaultInitRef</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">string() | undefined</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">undefined</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">orber_debug_level</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0 - 10</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">flags</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt;= 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_acl</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">[{atom(), string()}] | [{atom(), string(), [string()]}]</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">[]</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">secure</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">no | ssl</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">no</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ssl_generation</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">2 | 3</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">2</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_ssl_port</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt;= 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">4002</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_ssl_accept_timeout</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | infinity</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">infinity</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_ssl_backlog</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">5</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_ssl_ip_address_local</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">string()</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Defined by the underlying system</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">nat_iiop_ssl_port</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">integer() &gt; 0 | {local, integer(), [{integer(), integer()}]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">The same as <fo:inline font-family="monospace">iiop_ssl_port</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ssl_server_options</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">list()</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">See the <fo:inline font-style="italic">SSL application</fo:inline> 
	for valid options.</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ssl_client_options</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">list()</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">See the <fo:inline font-style="italic">SSL application</fo:inline> 
	for valid options.</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_ssl_out_keepalive</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">true | false</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">false</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">iiop_ssl_in_keepalive</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">true | false</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">false</fo:block></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        5.1:
         
        Orber Configuration Parameters</fo:block>
    <fo:block/>
    <fo:block/>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Comments on the table 'Orber Configuration Parameters':</fo:inline></fo:block>
    <fo:block space-after="0.25em" space-before="0.25em">
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">domain</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Since Orber domains, they are supposed to communicate via IIOP,
      <fo:inline font-weight="bold">MUST</fo:inline> have unique names, communication will
       fail if two domains have the same name. The domain name <fo:inline font-weight="bold">MAY NOT</fo:inline>
       contain <fo:inline font-family="monospace">^G</fo:inline> (i.e. <fo:inline font-family="monospace">\007</fo:inline>).</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_port</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">If set to 0 the OS will pick any vacant port. 
            <fo:block/>
<fo:inline font-weight="bold">Note:</fo:inline>On a UNIX system it is preferable to
       have a IIOP port higher than 1023, since it is not recommended to 
       run Erlang as a root user.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">nat_iiop_port</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The value is either an integer or <fo:inline font-family="monospace">{local, DefaultNATPort, [{Port, NATPort}]}</fo:inline>. See also
      <fo:inline font-style="italic">Firewall Configuration</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_out_ports</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">When set to 0 any available port will be used. 
       If a range is specified, Orber will only
       use the local ports within the interval when trying to connect to
       another ORB (Orber acts as a client ORB). If all ports are in use
       communication will fail. Hence, it is <fo:inline font-weight="bold">absolutely necessary</fo:inline> to
       set <fo:inline font-family="monospace">iiop_connection_timeout</fo:inline> as well. Otherwise, connections
       no longer in use will block further communication. If one use, for
       example, <fo:inline font-family="monospace">erl -orber iiop_out_ports "{5000,5020}"</fo:inline>, Orber
       will only use port 5000 to 5020 when connecting.
       If communicating via SSL, make sure you use a version that supports
       the local <fo:inline font-family="monospace">{port, Port}</fo:inline> option. See also
      <fo:inline font-style="italic">Firewall Configuration</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_out_ports_random</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Requires that <fo:inline font-family="monospace">iiop_out_ports</fo:inline> define a port range. If that is the
       case Orber will select a port randomly from that sequence.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_out_ports_attempts</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Requires that <fo:inline font-family="monospace">iiop_out_ports</fo:inline> define a port range. If so Orber will
       accept a number of timeouts, defined by this parameter, when trying to connect
       to another ORB.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_max_fragments</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Limits the number of IIOP fragments allowed per request.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_max_in_requests</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Limits the number of concurrent incoming requests per incoming connection.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_max_in_connections</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Limits the number of concurrent incoming connections.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_backlog</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Defines  the maximum length the queue of pending incoming
       connections may grow to.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_packet_size</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Defines the maximum size of incoming requests.
       If this limit is exceeded, the connection is closed.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">ip_address</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">This option is used if orber only should 
       listen on a specific ip interface on a multi-interface host or if
       exported IOR:s should contain multiple components. The value is
       the IPv4 or IPv6 address as a string or <fo:inline font-family="monospace">{multiple, IPList}</fo:inline>.
       The latter requires that the object is available via the all IP addresses
       found in the list.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">ip_address_local</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">This option defines the default local interface Orber will
       use when connecting to another ORB via IIOP, i.e., Orber act as the
       client side ORB. The value is a IPv4 or IPv6 address as a string.
       It is possible to override <fo:inline font-family="monospace">ip_address_local</fo:inline> by defining
      <fo:inline font-family="monospace">iiop_acl</fo:inline> or passing the Orber generic <fo:inline font-family="monospace">interface</fo:inline> Context.
       If this option is not used, the underlying OS will choose which interface to
       use. For more information, see the
      <fo:inline font-style="italic">Interface Configuration</fo:inline>
       section.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">nat_ip_address</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The value is the ip address as
       a string (IPv4 or IPv6), <fo:inline font-family="monospace">{multiple, IPList}</fo:inline> or 
      <fo:inline font-family="monospace">{local, DefaultNATIPAddress, [{IPAddress, NATIPAddress}]}</fo:inline>. See also
      <fo:inline font-style="italic">Firewall Configuration</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">objectkeys_gc_time</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">This option should be set if objects are started
       using the option <fo:inline font-family="monospace">{persistent, true}</fo:inline>.
       The value is <fo:inline font-family="monospace">integer()</fo:inline> seconds.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">giop_version</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Defines the default GIOP protocol version.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_setup_connection_timeout</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The value is an integer (seconds) or the atom infinity. 
       This option is only valid for client-side 
       connections. If this option is set, attempts to connect to other ORB's
       will timeout after the given time limit. Note, if the time limit is large
       the TCP protocol may timeout before the supplied value.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_connection_timeout</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The value is an integer (timeout in seconds between 0 and 1000000) 
       or the atom infinity. This option is only valid for client object 
       connections, i.e., will have no effect on server connections. Setting this
       option will cause client connections to be terminated, if and only if,
       there are no pending requests. If there are a client still waiting for
       a reply, Orber will try again after the given seconds have passed. The main
       purpose for this option is to reduce the number of open connections; it is,
       for example, not necessary to keep a connection, only used once a day,
       open at all time.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_in_connection_timeout</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The same as for <fo:inline font-family="monospace">iiop_connection_timeout</fo:inline>. The only difference is
       that this option only affects incoming connections (i.e. Orber act as
       server-side ORB).</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_out_keepalive</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Enables periodic transmission on a connected socket, when no other 
       data is being exchanged. If the other end does not respond, the 
       connection is considered broken and will be terminated. 
       When enabled the SO_KEEPALIVE socket level option is set.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_in_keepalive</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The same as for <fo:inline font-family="monospace">iiop_out_keepalive</fo:inline>. The only difference is
       that this option only affects incoming connections.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_timeout</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The value is an integer (timeout in seconds between 0 and 1000000) 
       or the atom infinity. This option is only valid on the client side.
       Setting this option, cause all intra-ORB requests to timeout and
       raise a system exception, e.g. <fo:inline font-family="monospace">TIMEOUT</fo:inline>, if no replies are delivered
       within the given time limit.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">interceptors</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">If one set this parameter, e.g.,
      <fo:inline font-family="monospace">erl -orber interceptors "{native, ['myInterceptor']}"</fo:inline>,
       Orber will use the supplied interceptor(s) for all inter-ORB 
       communication. <fo:inline font-family="monospace">'myInterceptor'</fo:inline> is the module name of the
       interceptor. For more information, see the interceptor chapter
       in the User's Guide and the Reference Manual.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">local_interceptors</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">If defined, its value will be
       used when activating local interceptors via
      <fo:inline font-style="italic">Orber Environment Flags</fo:inline>.
       If not defined, but the flag is set, Orber will use the value of
       the <fo:inline font-family="monospace">interceptors</fo:inline> parameter.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">orbInitRef</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Setting this option, e.g., 
      <fo:inline font-family="monospace">erl -orber orbInitRef [\"NameService=corbaloc::host.com/NameService\"]</fo:inline>, 
       will alter the location from where <fo:inline font-family="monospace">corba:resolve_initial_references(Key)</fo:inline> 
       tries to find an object matching the given Key. The keys will also appear when
       invoking <fo:inline font-family="monospace">corba:list_initial_services()</fo:inline>. This variable overrides
      <fo:inline font-family="monospace">orbDefaultInitRef</fo:inline></fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">orbDefaultInitRef</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">If a matching Key for <fo:inline font-family="monospace">orbInitRef</fo:inline> is not
       found, and this variable is set, it determines the location from where 
      <fo:inline font-family="monospace">orber:resolve_initial_references(Key)</fo:inline> tries to find an object 
       matching the given Key. Usage:
      <fo:inline font-family="monospace">erl -orber orbDefaultInitRef \"corbaloc::host.com\"</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">orber_debug_level</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The range is 0 to 10.
       Using level 10 is the most verbose configuration.
       This option will generate reports, using the <fo:inline font-family="monospace">error_logger</fo:inline>,
       for abnormal situations. It is not recommended to use this option
       for delivered systems since some of the reports is not to be considered
       as errors. The main purpose is to assist during development.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">flags</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">No flags are activated in the default case.
       The available configuration settings are described in
      <fo:inline font-style="italic">Orber Environment Flags</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_acl</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">This option must be activated by setting 
      <fo:inline font-style="italic">Orber Environment Flags</fo:inline> parameter.
       The value of this parameter shall be a list of <fo:inline font-family="monospace">[{Direction, Filter}]</fo:inline> 
       and/or <fo:inline font-family="monospace">[{Direction, Filter, [Interfaces]}]</fo:inline>. The <fo:inline font-family="monospace">Direction</fo:inline>, 
      <fo:inline font-family="monospace">tcp_in</fo:inline>, <fo:inline font-family="monospace">ssl_in</fo:inline>, <fo:inline font-family="monospace">tcp_out</fo:inline> or <fo:inline font-family="monospace">ssl_out</fo:inline>, determines if
       the Access Control List (ACL) applies to incoming or outgoing connections
       and IIOP or IIOP over SSL. The <fo:inline font-family="monospace">Filter</fo:inline> uses a extended format of 
       Classless Inter Domain Routing (CIDR). For example, <fo:inline font-family="monospace">"123.123.123.10"</fo:inline> limits
       the connection to that particular host, while <fo:inline font-family="monospace">"123.123.123.10/17"</fo:inline> allows
       connections to or from any host equal to the 17 most significant bits. Orber
       also allow the user to specify a certain port or port range, for example,
      <fo:inline font-family="monospace">"123.123.123.10/17#4001"</fo:inline> and <fo:inline font-family="monospace">"123.123.123.10/17#4001/5001"</fo:inline>
       respectively. IPv4 or none compressed IPv6 strings are accepted.      <fo:block/>

       The list of <fo:inline font-family="monospace">Interfaces</fo:inline>, IPv4 or IPv6 strings, may only contain 
      <fo:inline font-weight="bold">one</fo:inline> address for outgoing connections. For incoming connections,
       the <fo:inline font-family="monospace">Interfaces</fo:inline> list may contain several IP strings. If set for
       outgoing connections, and access is granted, Orber will use that local
       interface when connecting to the server-side ORB. For incoming connections,
       the client-side ORB is required to use one of the listed interfaces locally.
       If it fail to do so, access will be denied. The module 
      <fo:inline font-style="italic">orber_acl</fo:inline> provides operations for
       evaluating the access control for filters and addresses. See also the
      <fo:inline font-style="italic">Interface Configuration</fo:inline>
       and
      <fo:inline font-style="italic">Firewall Configuration</fo:inline>
       chapters.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">secure</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Determines the security mode Orber will use, which is either 
      <fo:inline font-family="monospace">no</fo:inline> if it is an insecure domain or the type of security 
       mechanism used. Currently, per default, Orber is compliant with
      <fo:inline font-family="monospace">CSIv1</fo:inline> level 0, which means IIOP via SSL/TLS. 
       The security chapter later in this manual describes how to get security
       in Orber and how the options are used.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">ssl_generation</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Defines which SSL version, i.e. available API, is installed. The
      default value, <fo:inline font-family="monospace">2</fo:inline>, refers to SSL-3.1 or later, but earlier than SSL-4.0.
      If set to <fo:inline font-family="monospace">3</fo:inline> SSL-4.0, or later, must be available. Currently it not possible
      to use <fo:inline font-family="monospace">1</fo:inline>, it is only reserved for future use.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_ssl_port</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">If set, the value must be an
       integer greater than zero and not equal to <fo:inline font-weight="bold">iiop_port</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_ssl_accept_timeout</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The value is an integer (timeout in seconds) or the atom infinity and
       determine how long the SSL handshake may take. This option should
       be set to avoid if a client never initiate the handshake.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_ssl_backlog</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Defines  the maximum length the queue of pending incoming
       connections may grow to.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_ssl_ip_address_local</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">This option defines the default local interface Orber will
       use when connecting to another ORB via IIOP SSL, i.e., Orber act as the
       client side ORB. The value is a IPv4 or IPv6 address as a string.
       It is possible to override <fo:inline font-family="monospace">iiop_ssl_ip_address_local</fo:inline> by defining
      <fo:inline font-family="monospace">iiop_acl</fo:inline> or passing the Orber generic <fo:inline font-family="monospace">interface</fo:inline> Context.
       If this option is not used, the underlying OS will choose which interface to
       use. For more information, see the
      <fo:inline font-style="italic">Interface Configuration</fo:inline>
       section.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">nat_iiop_ssl_port</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">If set, the value must be an integer greater than zero or 
      <fo:inline font-family="monospace">{local, DefaultNATPort, [{Port, NATPort}]}</fo:inline>. See also
      <fo:inline font-style="italic">Firewall Configuration</fo:inline>.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">ssl_server_options</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">A list of the SSL options when Orber is the server. 
        In general it's just to remove the 'ssl_server_' prefix from the old options,
	i.e. <fo:inline font-family="monospace">ssl_server_verify</fo:inline> will just be <fo:inline font-family="monospace">verify</fo:inline> in this option list.
        See the <fo:inline font-style="italic">SSL application</fo:inline> for the correct list of possible 
        options and their values.
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">ssl_client_options</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">A list of the SSL options when Orber is the client. 
        In general it's just to remove the <fo:inline font-family="monospace">ssl_client_</fo:inline> prefix from the old options,
	i.e. <fo:inline font-family="monospace">ssl_client_depth</fo:inline> will just be <fo:inline font-family="monospace">depth</fo:inline> in this option list.
        See the <fo:inline font-style="italic">SSL application</fo:inline> for the correct list of possible 
        options and their values.
      </fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_ssl_out_keepalive</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">Enables periodic transmission on a connected socket, when no other 
       data is being exchanged. If the other end does not respond, the 
       connection is considered broken and will be terminated. 
       When enabled the SO_KEEPALIVE socket level option is set. Requires that
       the installed SSL version support the <fo:inline font-weight="bold">keepalive</fo:inline> option
       and that the <fo:inline font-weight="bold">ssl_generation</fo:inline> points to this version.</fo:block></fo:block-container>
      <fo:block keep-with-next.within-page="always"><fo:inline font-weight="bold">iiop_ssl_in_keepalive</fo:inline></fo:block>
      <fo:block-container><fo:block start-indent="2em">The same as for <fo:inline font-family="monospace">iiop_ssl_out_keepalive</fo:inline>. The only difference is
       that this option only affects incoming connections.</fo:block></fo:block-container>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is possible to invoke operations using the extra timeout parameter:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
erl&gt; module_interface:function(ObjRef, Timeout, ..Arguments..).
erl&gt; module_interface:function(ObjRef, [{timeout, Timeout}], ..Arguments..).
erl&gt; module_interface:function(ObjRef, ..Arguments..).    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The extra Timeout argument will override the configuration parameter 
      <fo:inline font-family="monospace">iiop_timeout</fo:inline>. It is, however, not possible to use <fo:inline font-family="monospace">infinity</fo:inline>
      to override the Timeout parameter. The Timeout option is also valid for 
      objects which resides within the same A domain containing several Erlang nodes, which are communicating  by using the Erlang internal format. An Orber domain looks as one ORB from the environment..</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">iiop_setup_connection_timeout</fo:inline>, <fo:inline font-family="monospace">iiop_timeout</fo:inline>,
      <fo:inline font-family="monospace">iiop_connection_timeout</fo:inline> and <fo:inline font-family="monospace">iiop_in_connection_timeout</fo:inline>
      variables should be used. The specified values is implementation specific, 
      i.e., WAN or LAN, but they should range from 
      <fo:inline font-family="monospace">iiop_setup_connection_timeout</fo:inline> to <fo:inline font-family="monospace">iiop_connection_timeout</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To change these settings in the configuration file, the
      <fo:inline font-family="monospace">-config</fo:inline> flag must be added to the erl command. See the
      Reference Manual 
      <fo:inline font-weight="bold">config(4)</fo:inline> for further information. The values can also
      be sent separately as
      options  to the Erlang node when it is started, see the Reference
      Manual 
      <fo:inline font-weight="bold">erl(1)</fo:inline> for further information. </fo:block>

    <fo:block id="idp2286560" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Orber Environment Flags</fo:block>
      
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">Environment Flags</fo:inline> allows the user to activate debugging
        facilities or change Orber's behavior. The latter may result in that
        Orber is no longer compliant with the OMG standard, which may be necessary
        when communicating with a non-compliant ORB.</fo:block>
      <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Hexadecimal Value</fo:inline></fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">OMG Compliant</fo:inline></fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Description</fo:inline></fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0001</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">no</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Exclude CodeSet Component</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0002</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Local Typechecking</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0004</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Use Host Name in IOR</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0008</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Enable NAT</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0020</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Local Interceptors</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0080</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Light IFR</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0100</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Use IPv6</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0200</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">EXIT Tolerance</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0400</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Enable Incoming ACL</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0800</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Enable Outgoing ACL</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">1000</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">yes</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Use Current Interface in IOR</fo:block></fo:table-cell>
        </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        5.2:
         
        Orber Environment Flags</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any combination of the flags above may be used and changes the
        behavior as follows:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Exclude CodeSet Component</fo:inline> - instruct Orber to exclude
         the CodeSet component in exported IOR:s. When activated, no
         negotiating regarding character and wide character conversions 
         between the client and the server will occur. This flag will,
         most likely, cause problems if your IDL specification contains
         the data types wchar and/or wstring.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Local Typechecking</fo:inline> -
         If activated, parameters, replies and raised exceptions
         will be checked to ensure that the data is correct. If an error
         occurs, the <fo:inline font-family="monospace">error_logger</fo:inline> is used to generate reports.
         One <fo:inline font-weight="bold">MAY NOT</fo:inline> use this option for delivered systems due
         to the extra overhead. Since this option activates typechecking
         for all objects generated on the target node, it is also possible
         to use the option <fo:inline font-family="monospace">{local_typecheck, boolean()}</fo:inline>, when
         invoking <fo:inline font-family="monospace">oe_create/2</fo:inline>, <fo:inline font-family="monospace">oe_create_link/2</fo:inline>,
        <fo:inline font-family="monospace">corba:create/4</fo:inline> or <fo:inline font-family="monospace">corba:create_link/4</fo:inline>, to override
         the configuration parameter.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Use Host Name in IOR</fo:inline> - normally Orber inserts the IP-number
         in IOR:s when they are exported. In some cases, this will cause
         the clients to open two connections instead of one.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Enable NAT</fo:inline> - if this flag is set, it is possible to use
         the NAT (Network Address Translation) configuration parameters
         (<fo:inline font-family="monospace">nat_iiop_port</fo:inline>, <fo:inline font-family="monospace">nat_iiop_ssl_port</fo:inline> and 
        <fo:inline font-family="monospace">nat_ip_address</fo:inline>).</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Local Interceptors</fo:inline> - use interceptors for local
         invocations.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Light IFR</fo:inline> - if the IFR is not explicitly used and this 
         flag is set, Orber will use a minimal IFR to reduce memory usage
         and installation time.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Use IPv6</fo:inline> - when this option is activated, Orber will use
        <fo:inline font-family="monospace">IPv6</fo:inline> for inter-ORB communication.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">EXIT Tolerance</fo:inline> - servers will survive even though the
         call-back module caused an EXIT.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Enable Incoming ACL</fo:inline> - activates access control for incoming
         connections.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Enable Outgoing ACL</fo:inline> - activates access control for outgoing
         connections.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Use Current Interface in IOR</fo:inline> - when set, Orber will add
         the interface the request came via to exported local IOR:s.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Invoking the operation
        <fo:inline font-style="italic">orber:info/1/2</fo:inline> will display the currently
        set flags in a readable way.</fo:block>
    
  <fo:block id="idp2348496" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.3 
      Firewall Configuration</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Firewalls are used to protect objects from clients in other networks or 
      sub-networks, but also to restrict which hosts internal objects may connect to
      (i.e. <fo:inline font-family="monospace">inbound protection</fo:inline> and <fo:inline font-family="monospace">outbound protection</fo:inline>). A firewall
      can limit access based on:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Transport Level</fo:inline> - performs access control decisions based on
       address information in TCP headers.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Application Level</fo:inline> - understands GIOP messages and the specific
       transport level inter-ORB Protocol supported e.g. IIOP.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This section describes how to configure a <fo:inline font-family="monospace">Transport Level</fo:inline> firewall. It
      must have prior knowledge of the source to destination mappings, and
      conceptually has a configuration table containing tuples of the form: 
      <fo:inline font-family="monospace">({inhost:inport}, {outhost:outport})</fo:inline>. If there are no port restrictions
      it is rather easy to configure the firewall. Otherwise, we must consider the
      following alternatives:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Incoming Requests</fo:inline> - Orber only uses the port-numbers specified 
       by the configuration parameters <fo:inline font-weight="bold">iiop_port</fo:inline> and 
      <fo:inline font-weight="bold">iiop_ssl_port</fo:inline>. Other ORB's may use several ports but it should
       be possible to change this behavior. Consult the other ORBs 
       documentation.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Outgoing Requests</fo:inline> - Most ORB's, Orber included,
       ask the OS to supply a vacant local port when connecting to the
       server-side ORB. It is possible to change this behavior when using
       Orber (i.e. set the configuration parameter <fo:inline font-weight="bold">iiop_out_ports</fo:inline>).</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using the option <fo:inline font-family="monospace">iiop_out_ports</fo:inline> may result in that Orber runs out of
        valid ports numbers. For example, other applications may steal some of the
        ports or the number of concurrent outgoing connections to other ORBs may be 
        higher than expected. To reduce, but not eliminate, the risk you should use 
        <fo:inline font-family="monospace">iiop_connection_timeout</fo:inline>.</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Firewall configuration example:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
# "Plain" IIOP
To: Orber-IPNo:(iiop_port)     From: ORB-IPNo:X
To: ORB-IPNo:Z                 From: Orber-IPNo:(iiop_out_ports | Any Port)

# IIOP via SSL
To: Orber-IPNo:(iiop_port)     From: ORB-IPNo:X
To: Orber-IPNo:(iiop_ssl_port) From: ORB-IPNo:Y
To: ORB-IPNo:Z                 From: Orber-IPNo:(iiop_out_ports | Any Port)
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the communication take place via a
      <fo:inline font-style="italic">TCP Firewall with NAT</fo:inline>
      (Network Address Translation), we must activate this behavior and define
      the external address and/or ports.</fo:block>
    
    <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="firewall_nat.gif"/>
      <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        5.1:
         
        
TCP Firewall With NAT</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using NAT makes it possible to use different host data for different network
      domains. This way we can share Internet Protocol address resources or
      obscure resources. To enable this feature the 
      <fo:inline font-style="italic">Enable NAT</fo:inline> flag must be set and
      <fo:inline font-family="monospace">nat_iiop_port</fo:inline>, <fo:inline font-family="monospace">nat_iiop_ssl_port</fo:inline> and <fo:inline font-family="monospace">nat_ip_address</fo:inline>
      configured, which maps to <fo:inline font-family="monospace">iiop_port</fo:inline>, <fo:inline font-family="monospace">iiop_ssl_port</fo:inline> and 
      <fo:inline font-family="monospace">ip_address</fo:inline> respectively. Hence, the firewall must be configured to
      translate the external to the internal representation correctly. If these NAT parameters 
      are assigned a single port number or IP address, only those will be used when
      an IOR is exported to another ORB. When <fo:inline font-family="monospace">ip_address</fo:inline> is set to 
      <fo:inline font-family="monospace">{multiple, [IPAddress]}</fo:inline>, <fo:inline font-family="monospace">nat_ip_address</fo:inline> should be configured in the same 
      way, so that each NAT IP address can be translated to a valid address by the firewall.
      If objects are supposed to be accessible via different interfaces and port, see also
      <fo:inline font-style="italic">Interface Configuration</fo:inline>, 
      the options <fo:inline font-family="monospace">{local, DefaultNATIPAddress, [{IPAddress, NATIPAddress}]}</fo:inline> and/or
      <fo:inline font-family="monospace">{local, DefaultNATPort, [{Port, NATPort}]}</fo:inline> shall be used. The default NAT IP address
      and port, should be translated to the value of <fo:inline font-family="monospace">ip_address_local</fo:inline> and the default 
      listen port by the firewall. If the IP address and/or port is not found in the list,
      the default values will be inserted in the IOR. The firewall must be able to translate
      these correctly.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If it is necessary to limit the access to an ORB within a secure network,
      but other applications running on the same host may not be blocked out,
      one can use a <fo:inline font-weight="bold">Application Level</fo:inline> firewall or Orber Access Control 
      List (ACL). The latter makes it possible for the user to define which hosts
      may communicate, either as server or client, with Orber. This is achieved by
      defining the configuration parameter
      <fo:inline font-style="italic">iiop_acl</fo:inline>. The Classless Inter
      Domain Routing (CIDR) <fo:inline font-family="monospace">Filter</fo:inline> determines which peer interfaces and 
      ports the other ORB may use.</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Filter</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Peer Interface(s)</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Peer Port(s)</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"10.1.1.1"</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">10.1.1.1</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">any</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"10.1.1.1/8"</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">10.0.0.0-10.255.255.255</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">any</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"10.1.1.1/8#4001"</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">10.0.0.0-10.255.255.255</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">4001</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"10.1.1.1/8#4001/5001"</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">10.0.0.0-10.255.255.255</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">4001-5001</fo:block></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        5.3:
         
        Orber ACL Filters</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber ACL, also allows the user to define which local interface(s) may be used,
      but will not detect <fo:inline font-family="monospace">spoofing</fo:inline>. The operation
      <fo:inline font-style="italic">orber_acl:match/2/3</fo:inline> makes it easy to
      verify whether access would be granted or not. For example, if Orber would
      be started with the ACL <fo:inline font-family="monospace">[{tcp_out, "10.1.1.1/8#4001/5001"}]</fo:inline>, then 
      <fo:inline font-family="monospace">orber_acl:match/2</fo:inline> would behave as follows:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
erl&gt; orber_acl:match({11,1,1,1}, tcp_out).
false

erl&gt; orber_acl:match({10,1,1,1}, tcp_out).
true

erl&gt; orber_acl:match({11,1,1,1}, tcp_out, true).
{false,[],0}

erl&gt; orber_acl:match({10,1,1,1}, tcp_out, true).
{true,[],{4001,5001}}
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Only if the returned boolean is true the extra return values makes a 
      difference. In the example above, <fo:inline font-family="monospace">{true,[],{4001,5001}}</fo:inline> means that
      Orber may connect to <fo:inline font-family="monospace">"10.1.1.1"</fo:inline>, using any local interface,
      if the server-side ORB listens for incoming connect requests on a port
      within the range 4001-5001. Note, invoking the <fo:inline font-family="monospace">orber_acl:match/2/3</fo:inline>
      operation, will not result in a connect attempt by Orber. The reason for 
      this, is that this function may be used on a live node as well as in test
      environment. Hence, if a local interface is currently not available or no 
      server-side ORB available via the given host/port(s), will not be detected
      by Orber.</fo:block>
  <fo:block id="idp2401456" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.5.4 
      Interface Configuration</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In many cases it is sufficient to simply configure the underlying OS which
      local interfaces shall be used for all applications. But, in some cases
      it is required, due to, for example, the firewall configuration, that different
      local interfaces are used for different applications. Some times, it is even
      necessary to use a specific interface for a single CORBA object. This section
      describe how one can alter this in different ways.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The default behavior is that Orber lets the OS configuration decide which interface
      will be added in IOR:s exported to another ORB and the local interface used
      when connecting to another ORB (Orber act as client side ORB). The latter can be
      overridden by setting the configuration parameters <fo:inline font-family="monospace">iiop_ssl_ip_address_local</fo:inline>
      and/or <fo:inline font-family="monospace">ip_address_local</fo:inline>, which will affect IIOP via SSL and IIOP 
      respectively. These parameters can be overridden by using the Orber generic 
      <fo:inline font-family="monospace">interface</fo:inline> Context or defining an ACL (Access Control List). The latter
      always takes precedence if a local interface is included (e.g. 
      <fo:inline font-family="monospace">[{tcp_out, "10.0.0.0/8", ["10.0.0.1"]}]</fo:inline>). If the interface is excluded
      (e.g. <fo:inline font-family="monospace">[{tcp_out, "10.0.0.0/8"}]</fo:inline>), the interface chosen will, in the following
      order, be determined by
      <fo:inline font-family="monospace">#'IOP_ServiceContext'{}</fo:inline>, <fo:inline font-family="monospace">ip_address_local/iiop_ssl_ip_address_local</fo:inline> or
      the configuration of the underlying system.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Adding the interface context, for generated stubs/skeletons, is done in the 
      following way:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
Ctx = #'IOP_ServiceContext'{context_id = ?ORBER_GENERIC_CTX_ID, 
                            context_data = {interface, "10.0.0.1"}},
'CosNaming_NamingContext':resolve(NS, [{context, [Ctx]}], Name),
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is also possible to add the context to 
      <fo:inline font-family="monospace">corba:string_to_object/2, corba:resolve_initial_references/2, corba:resolve_initial_references_remote/3,  corba:list_initial_services_remote/2, corba_object:not_existent/2,  corba_object:non_existent/2</fo:inline> and <fo:inline font-family="monospace">corba_object:is_a/3</fo:inline>. 
      The operations exported by <fo:inline font-family="monospace">corba_object</fo:inline> are affected
      if the supplied IOR is external. The function <fo:inline font-family="monospace">corba:string_to_object/2</fo:inline>
      might require the interface context if a <fo:inline font-family="monospace">corbaloc</fo:inline> or a <fo:inline font-family="monospace">corbaloc</fo:inline>
      string is passed (See the
      <fo:inline font-style="italic">INS</fo:inline> chapter),
      while <fo:inline font-family="monospace">corba:resolve_initial_references_remote/3</fo:inline> and
      <fo:inline font-family="monospace">corba:list_initial_services_remote/2</fo:inline> always connect to another ORB and
      it might be necessary to add the context.
      The remaining <fo:inline font-family="monospace">corba</fo:inline> operations are affected if calls are re-directed
      by setting the <fo:inline font-family="monospace">orbInitRef</fo:inline> and/or <fo:inline font-family="monospace">orbDefaultInitRef</fo:inline> configuration
      parameters. For more information, see the Reference Manual for each module.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Configuring which interface(s) that shall be used when exporting an IOR to
      another ORB, is determined by <fo:inline font-family="monospace">nat_ip_address</fo:inline>, setting the flag 
      <fo:inline font-style="italic">16#1000</fo:inline>
      and <fo:inline font-family="monospace">ip_address</fo:inline>, in that order. Orber listens for incoming connections
      either via all interfaces or the interface defined by <fo:inline font-family="monospace">ip_address</fo:inline>. It is
      also possible to add and remove extra listen interfaces by using
      <fo:inline font-family="monospace">orber:add_listen_interface/2/3</fo:inline> and <fo:inline font-family="monospace">orber:remove_listen_interface/1</fo:inline>.
      In this case one should set the 16#1000 flag and, if necessary, set the
      configuration parameters
      <fo:inline font-family="monospace">{local, DefaultNATIPAddress, [{IPAddress, NATIPAddress}]}</fo:inline> and/or
      <fo:inline font-family="monospace">{local, DefaultNATPort, [{Port, NATPort}]}</fo:inline>.</fo:block>
  <fo:block id="idp2425008" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.6  OMG IDL to Erlang Mapping</fo:marker>1.6  OMG IDL to Erlang Mapping</fo:block><fo:block id="idp2427696" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.1 
      OMG IDL to Erlang Mapping - Overview</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The purpose of OMG IDL, <fo:inline font-weight="bold">Interface Definition Language</fo:inline>, mapping
      is to act as translator between platforms and languages. An IDL 
      specification is supposed to describe data types, object types etc.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CORBA is independent of the programming language used to construct
      clients or implementations. In order to use the ORB, it is
      necessary for programmers to know how to access ORB functionality 
      from their programming languages. It translates different IDL constructs
      to  a specific programming language. This chapter 
      describes the mapping of OMG IDL constructs to the Erlang programming
      language.</fo:block>
  <fo:block id="idp2430544" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.2 
      OMG IDL Mapping Elements</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A complete language mapping will allow the programmer to have
      access to all ORB functionality in a way that is convenient for
      a specified programming language. 
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All mapping must define the following elements: 
      </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>All OMG IDL basic and constructed types</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>References to constants defined in OMG IDL</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>References to objects defined in OMG IDL</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Invocations of operations, including passing of
       parameters and receiving of results</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Exceptions, including what happens when an operation
       raises an exception and how the exception parameters are
       accessed</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Access to attributes</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Signatures for operations defined by the ORB, such as
       dynamic invocation interface, the object adapters etc.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Scopes;
       OMG IDL has several levels of scopes, which are mapped to Erlang's 
       two scopes.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  <fo:block id="idp2437296" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.3 
      Getting Started</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To begin with, we should decide which type of objects (i.e. servers) we
      need and if two, or more, should export the same functionality. Let us
      assume that we want to create a system for DB (database) access for different
      kind of users. For example, anyone with a valid password may extract 
      data, but only a few may update the DB. Usually, an application
      is defined within a <fo:inline font-family="monospace">module</fo:inline>, and all global datatypes are defined
      on the top-level. To begin with we create a module and the interfaces we
      need:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// DB IDL
#ifndef _DB_IDL_
#define _DB_IDL_
// A module is simply a container
module DB {

  // An interface maps to a CORBA::Object.
  interface CommonUser {

  };

  // Inherit the Consumer interface
  interface Administrator : CommonUser {

  };

  interface Access {

  };

};
#endif    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since the <fo:inline font-family="monospace">Administrator</fo:inline> should be able to do the same things as the
      <fo:inline font-family="monospace">CommonUser</fo:inline>, the previous inherits from the latter. The <fo:inline font-family="monospace">Access</fo:inline>
      interface will grant access to the DB.
      Now we are ready to define the functionality and data types we need. But, this
      requires that we know a little bit more about the OMG IDL.</fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The OMG defines a set of reserved case insensitive key-words, which may
        <fo:inline font-weight="bold">NOT</fo:inline> be used as identifiers (e.g. module name). For more
        information, see
        <fo:inline font-style="italic">Reserved Compiler Names and Keywords</fo:inline></fo:block>
    </fo:block>
  <fo:block id="idp2444656" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.4 
      Basic OMG IDL Types</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The OMG IDL mapping is strongly typed and, even if you have a good knowledge
      of CORBA types, it is essential to read carefully the following mapping to
      Erlang types.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The mapping of basic types is straightforward. Note that the
      OMG IDL double type is mapped to an Erlang float which does not
      support the full double value range.</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">OMG IDL type</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang type</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Note</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">float</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang float</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">double</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang float</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">value range not supported</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">short</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">-2^15 .. 2^15-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">unsigned short</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0 .. 2^16-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">long</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">-2^31 .. 2^31-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">unsigned long</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0 .. 2^32-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">long long</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">-2^63 .. 2^63-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">unsigned long long</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">0 .. 2^64-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">char</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ISO-8859-1</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">wchar</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">UTF-16 (ISO-10646-1:1993)</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">boolean</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang atom</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">true/false</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">octet</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang integer</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">any</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang record</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">#any{typecode, value}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">long double</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Not supported</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Object</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Orber object reference</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Internal Representation</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">void</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang atom</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok</fo:block></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        6.1:
         
        OMG IDL basic types</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">any</fo:inline> value is written as a record with the field typecode which
      contains the Type Code is a full definition of a type representation,
      <fo:inline font-style="italic">see also the Type Code table</fo:inline>,
      and the value field itself.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Functions with return type <fo:inline font-family="monospace">void</fo:inline> will return the atom <fo:inline font-family="monospace">ok</fo:inline>.</fo:block>
  <fo:block id="idp2509648" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.5 
      Template OMG IDL Types and Complex Declarators</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Constructed types all have native mappings as shown in the table
      below.</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Type</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">IDL code</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Maps to</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Erlang code</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">string</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typedef string S;        <fo:block/>
void op(in S a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang string</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, "Hello World"),</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">wstring</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typedef wstring S;        <fo:block/>
void op(in S a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang list of Integers</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, "Hello World"),</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">sequence</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typedef sequence &lt;long, 3&gt; S;        <fo:block/>
void op(in S a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang list</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, [1, 2, 3]),</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">array</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typedef string S[2];        <fo:block/>
void op(in S a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang tuple</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, {"one", "two"}),</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">fixed</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typedef fixed&lt;3,2&gt; myFixed;        <fo:block/>
void op(in myFixed a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang tuple</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">MF = fixed:create(3, 2, 314),        <fo:block/>
ok = op(Obj, MF),</fo:block></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        6.2:
         
        OMG IDL Template and Complex Declarators</fo:block>

    <fo:block id="idp2541664" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">String/WString Data Types</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-family="monospace">string</fo:inline> consists of all possible 8-bit quantities except null.
        Most ORB:s uses, including Orber, the character set Latin-1 (ISO-8859-1).
        The <fo:inline font-family="monospace">wstring</fo:inline> type is represented as a list of integers, where
        each integer represents a wide character. In this case Orber uses, as
        most other ORB:s, the UTF-16 (ISO-10646-1:1993) character set.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When defining a a string or wstring they can be of limited length or
        null terminated:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// Null terminated
typedef string myString;
typedef wstring myWString;
// Maximum length 10 
typedef string&lt;10&gt; myString10;
typedef wstring&lt;10&gt; myWString10;
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If we want to define a char/string or wchar/wstring constant, we can
        use octal (\OOO - one, two or three octal digits), 
        hexadecimal (\xHH - one or two hexadecimal digits) and unicode (\uHHHH -
        one, two, three or four hexadecimal digits.) representation as well.
        For example:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
const string  SwedensBestSoccerTeam = "\101" "\x49" "\u004B";
const wstring SwedensBestHockeyTeam = L"\101\x49\u004B";
const char  aChar  = '\u004B';  
const wchar aWchar = L'\u004C';
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Naturally, we can use <fo:inline font-family="monospace">"Erlang"</fo:inline>, <fo:inline font-family="monospace">L"Rocks"</fo:inline>, <fo:inline font-family="monospace">'A'</fo:inline>
        and <fo:inline font-family="monospace">L'A'</fo:inline> as well.</fo:block>
    

    <fo:block id="idp2549488" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Sequence Data Type</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A sequence can be defined to be of a maximum length or unbounded, and may 
        contain Basic and Template types and scoped names:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
typedef sequence &lt;short, 1&gt; aShortSequence;
typedef sequence &lt;long&gt; aLongSequence;
typedef sequence &lt;aLongSequence&gt; anEvenLongerSequence;
      </fo:block>
    

    <fo:block id="idp2551792" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Array Data Type</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Arrays are multidimensional, fixed-size arrays. The indices is language
        mapping specific, which is why one should not pass them as arguments
        to another ORB.</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
typedef long myMatrix[2][3];
      </fo:block>
    

    <fo:block id="idp2554032" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Fixed Data Type</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A Fixed Point literal consists of an integer part (decimal digits), 
        decimal point and a fraction part (decimal digits),
        followed by a <fo:inline font-family="monospace">D</fo:inline> or <fo:inline font-family="monospace">d</fo:inline>. Either the integer part or the
        fraction part may be missing; the decimal point may be missing, 
        but not d/D. The integer part must be a positive integer less than 32.
        The Fraction part must be a positive integer less than or equal to
        the Integer part.</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
const fixed myFixed1 = 3.14D;
const fixed myFixed2 = .14D;
const fixed myFixed3 = 0.14D;
const fixed myFixed4 = 3.D;
const fixed myFixed5 = 3D;
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is also possible to use unary (+-) and binary (+-*/) operators:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
const fixed myFixed6 = 3D + 0.14D;
const fixed myFixed7 = -3.14D;
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Fixed Point examples above are, so called, <fo:inline font-weight="bold">anonymous</fo:inline> 
        definitions. In later CORBA specifications these have been deprecated
        as function parameters or return values. Hence, we strongly recommend that
        you do not use them. Instead, you should use:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
typedef fixed&lt;5,3&gt; myFixed53;
const myFixed53 myFixed53constant = 03.140d;
typedef fixed&lt;3,2&gt; myFixed32;
const myFixed32 myFixed32constant = 3.14d;

myFixed53 foo(in myFixed32 MF); // OK
void bar(in fixed&lt;5,3&gt; MF); // Illegal
      </fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information, see <fo:inline font-style="italic">Fixed</fo:inline> in 
      Orber's Reference Manual.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Now we continue to work on our IDL specification. To begin with, we want
      to limit the size of the logon parameters (Id and password). Since the
      <fo:inline font-family="monospace">UserID</fo:inline> and <fo:inline font-family="monospace">Password</fo:inline> parameters, only will be used when
      invoking operations on the <fo:inline font-family="monospace">Access</fo:inline> interface, we may choose to define
      them within the scope that interface. To keep it simple our DB will contain
      employee information. Hence, as the DB key we choose an integer
      (<fo:inline font-family="monospace">EmployeeNo</fo:inline>).</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// DB IDL
#ifndef _DB_IDL_
#define _DB_IDL_
module DB {

  typedef unsigned long EmployeeNo;

  interface CommonUser {

     any lookup(in EmployeeNo ENo);

  };

  interface Administrator : CommonUser {

     void delete(in EmployeeNo ENo);

  };

  interface Access {

      typedef string&lt;10&gt; UserID;
      typedef string&lt;10&gt; Password;

      CommonUser logon(in UserID ID, in Password PW);

  };

};
#endif    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">But what should, for example, the <fo:inline font-family="monospace">lookup</fo:inline> operation return? One option
      is to use the <fo:inline font-family="monospace">any</fo:inline> data type. But, depending on what kind of data it
      encapsulates, this datatype can be rather expensive to use. We might find a 
      solution to our problems among the <fo:inline font-family="monospace">Constructed</fo:inline> IDL types.</fo:block>
  <fo:block id="idp2567968" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.6 
      Constructed OMG IDL Types</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Constructed types all have native mappings as shown in the table
      below.</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Type</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">IDL code</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Maps to</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Erlang code</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">struct</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">struct myStruct {        <fo:block/>
long a;         <fo:block/>
short b;        <fo:block/>
};        <fo:block/>
void op(in myStruct a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang record</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, #'myStruct'{a=300, b=127}),</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">union</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">union myUnion switch(long) {        <fo:block/>
case 1: long a;        <fo:block/>
};        <fo:block/>
void op(in myUnion a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang record</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, #'myUnion'{label=1, value=66}),</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">enum</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">enum myEnum {one, two};        <fo:block/>
void op(in myEnum a);</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Erlang atom</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ok = op(Obj, one),</fo:block></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        6.3:
         
        OMG IDL constructed types</fo:block>

    <fo:block id="idp2591424" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Struct Data Type</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-family="monospace">struct</fo:inline> may have Basic, Template, Scoped Names and Constructed 
        types as members. By using forward declaration we can define a recursive struct:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
struct myStruct; // Forward declaration
typedef sequence&lt;myStruct&gt; myStructSeq;
struct myStruct {
    myStructSeq chain;
};

// Deprecated definition (anonymous) not supported by IC
struct myStruct {
    sequence&lt;myStruct&gt; chain;
};
      </fo:block>
    

    <fo:block id="idp2594288" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Enum Data Type</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The maximum number of identifiers which may defined in an enumeration
        is 2³². The order in which the identifiers are named in the
        specification of an enumeration defines the relative order of the
        identifiers.</fo:block>
    

    <fo:block id="idp2595856" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Union Data Type</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-family="monospace">union</fo:inline> may consist of:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Identifier</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Switch - may be an integer, char, boolean, enum or scoped name.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Body - with or without a <fo:inline font-family="monospace">default</fo:inline> case; may appear at 
         most once.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A case label must match the defined type of the discriminator, and may only
        contain a default case if the values given in the non-default labels do
        not cover the entire range of the union's discriminant type. For example:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// Illegal default; all cases covered by 
// non-default cases.
union BooleanUnion switch(boolean) {
  case TRUE:  long TrueValue;
  case FALSE: long FalseValue;
  default: long DefaultValue; 
};
// OK
union BooleanUnion2 switch(boolean) {
  case TRUE:  long TrueValue;
  default: long DefaultValue; 
};
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is not necessary to list all possible values of the union discriminator
        in the body. Hence, the value of a union is the value of the discriminator
        and, in given order, one of the following:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the discriminator match a label, explicitly listed in a 
         case statement, the value must be of the same type.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the union contains a default label, the value must match the
         type of the default label.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>No value. Orber then inserts the Erlang atom <fo:inline font-family="monospace">undefined</fo:inline>
         in the value field when receiving a union from an external 
         ORB.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The above can be summed up to:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// If the discriminator equals 1 or 2 the value 
// is a long. Otherwise, the atom undefined.
union LongUnion switch(long) {
  case 1:
  case 2:  long TrueValue;
};
// If the discriminator equals 1 or 2 the value 
// is a long. Otherwise, a boolean.
union LongUnion2 switch(long) {
  case 1:
  case 2:  long TrueValue;
  default: boolean DefaultValue; 
};
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In the same way as structs, unions can be recursive if forward
         declaration is used (anonymous types is deprecated and not supported):</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// Forward declaration
union myUnion;
typedef sequence&lt;myUnion&gt;myUnionSeq;
union myUnion switch (long) {
    case 1 : myUnionSeq chain;
    default: boolean DefaultValue;
};
      </fo:block>

    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Recursive types (union and struct) require Light IFR. I.e. the
         IC option {light_ifr, true} is used and that Orber is configured in such a way that
         Light IFR is activated. Recursive TypeCode is currently not supported, which is
         why these cannot be encapsulated in an any data type.</fo:block>
    </fo:block>

    
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Every field in, for example, a struct must be initiated. Otherwise
        it will be set to the atom <fo:inline font-family="monospace">undefined</fo:inline>, which Orber cannot
        encode when communicating via IIOP. In the example above, invoking
        the operation with #'myStruct'{a=300} will fail (equal to 
        #'myStruct'{a=300, b=undefined})</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Now we can continue to work on our IDL specification. To begin with, we should
      determine the return value of the <fo:inline font-family="monospace">lookup</fo:inline> operation. Since the <fo:inline font-family="monospace">any</fo:inline>
      type can be rather expensive we can use a <fo:inline font-family="monospace">struct</fo:inline> or a <fo:inline font-family="monospace">union</fo:inline> instead.
      If we intend to return the same information about a employee every time we can
      use a struct. Let us assume that the DB contains the name, address, employee 
      number and department.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// DB IDL
#ifndef _DB_IDL_
#define _DB_IDL_
module DB {

  typedef unsigned long EmployeeNo;

  enum Department {Department1, Department2};

  struct employee {
        EmployeeNo No;
        string Name; 
        string Address; 
        Department Dpt;
  };

  typedef employee EmployeeData;

  interface CommonUser {

     EmployeeData lookup(in EmployeeNo ENo);

  };

  interface Administrator : CommonUser {

     void delete(in EmployeeNo ENo);

  };

  interface Access {

      typedef string&lt;10&gt; UserID;
      typedef string&lt;10&gt; Password;

      // Since Administrator inherits from CommonUser
      // the returned Object can be of either type.
      CommonUser logon(in UserID ID, in Password PW);

  };

};
#endif    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">We can also define exceptions (i.e. not system exception) thrown by
      each interface. Since exceptions are thoroughly described in the chapter
      <fo:inline font-style="italic">System and User Defined Exceptions</fo:inline>,
      we choose not to. Hence, we are now ready to compile our IDL-file by 
      invoking:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
$ <fo:inline font-weight="bold">erlc DB.idl</fo:inline>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">or:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
$ <fo:inline font-weight="bold">erl</fo:inline>
Erlang (BEAM) emulator version 5.1.1 [threads:0]

Eshell V5.1.1  (abort with ^G)
1&gt; <fo:inline font-weight="bold">ic:gen('DB').</fo:inline>
ok
2&gt; <fo:inline font-weight="bold">halt().</fo:inline>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The next step is to implement our servers. But, to be able to do that,
      we need to know how we can access data type definitions. For example,
      since a struct is mapped to an Erlang record we must include an hrl-file
      in our callback module.</fo:block>
  <fo:block id="idp2620624" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.7 
      Scoped Names and Generated Files</fo:block>
    

    <fo:block id="idp2621376" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Scoped Names</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Within a scope all identifiers must be unique. The following kinds of
        definitions form scopes in the OMG IDL:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">module</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">interface</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">operation</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">valuetype</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">struct</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">union</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">exception</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For example, since enumerants do not form a scope, the following IDL code
        is not valid:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
module MyModule {
     // 'two' is not unique
     enum MyEnum {one, two};
     enum MyOtherEnum {two, three};
};
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">But, since Erlang only has two levels of scope, <fo:inline font-weight="bold">module</fo:inline> and 
        <fo:inline font-weight="bold">function</fo:inline>, the OMG IDL scope is mapped as follows:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Function Scope</fo:inline> - used for constants, operations and attributes.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Erlang Module Scope</fo:inline> - the Erlang module scope
         handles the remaining OMG IDL scopes.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An Erlang module, corresponding to an IDL global name, is derived by 
        converting occurrences of "::" to underscore, and eliminating
        the leading "::". Hence, accessing <fo:inline font-family="monospace">MyEnum</fo:inline> from another module, one 
        use <fo:inline font-family="monospace">MyModule::MyEnum</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For example, an operation <fo:inline font-family="monospace">foo</fo:inline> defined in interface <fo:inline font-family="monospace">I</fo:inline>, which
        is defined in module <fo:inline font-family="monospace">M</fo:inline>, would be written in IDL as <fo:inline font-family="monospace">M::I::foo</fo:inline>
        and as <fo:inline font-family="monospace">'M_I':foo</fo:inline> in Erlang - <fo:inline font-family="monospace">foo</fo:inline> is the function
        name and <fo:inline font-family="monospace">'M_I'</fo:inline> is the name of the Erlang module. Applying this
        knowledge to a stripped version of the DB.idl gives:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// DB IDL
#ifndef _DB_IDL_
#define _DB_IDL_
// ++ topmost scope ++ 
// IC generates oe_XX.erl and oe_XX.hrl.
// XX is equal to the name of the IDL-file.
// Tips: create one IDL-file for each top module
// and give the file the same name (DB.idl).
// The oe_XX.erl module is used to register data
// in the IFR.
module DB {

  // ++ Module scope ++
  // To access 'EmployeeNo' from another scope, use:
  // DB::EmployeeNo, DB::Access etc.
  typedef unsigned long EmployeeNo;

  enum Department {Department1, Department2};

  // Definitions of this struct is contained in:
  // DB.hrl
  // Access functions exported by:
  // DB_employee.erl
  struct employee {
     ... CUT ...
  };

  typedef employee EmployeeData;

  ... CUT ...

  // If this interface should inherit an interface
  // in another module (e.g. OtherModule) use:
  // interface Access : OtherModule::OtherInterface
  interface Access {

      // ++ interface scope ++
      // Types within this scope is accessible via:
      // DB::Access::UserID
      // The Stub/Skeleton for this interface is
      // placed in the module:
      // DB_Access.erl
      typedef string&lt;10&gt; UserID;
      typedef string&lt;10&gt; Password;

      // Since Administrator inherits from CommonUser
      // the returned Object can be of either type.
      // This operation is exported from:
      // DB_Access.erl
      CommonUser logon(in UserID ID, in Password PW);

  };

};
#endif      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using underscores in IDL names can lead to ambiguities
        due to the name mapping described above. It is advisable to 
        avoid the use of underscores in identifiers. For example, the following
        definition would generate two structures named <fo:inline font-family="monospace">x_y_z</fo:inline>.</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
module x {

    struct y_z {
    ...
    };

    interface y {

    struct z {
        ...
    };
    };
};
      </fo:block>
    

    <fo:block id="idp2641824" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Generated Files</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Several files can be generated for each scope.</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>An Erlang source code file (<fo:inline font-family="monospace">.erl</fo:inline>) is generated
         for top level scope as well as the Erlang header file.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>An Erlang header file (<fo:inline font-family="monospace">.hrl</fo:inline>) will be generated for 
         each scope. The header file will contain record definitions 
         for all <fo:inline font-family="monospace">struct</fo:inline>, <fo:inline font-family="monospace">union</fo:inline> and <fo:inline font-family="monospace">exception</fo:inline> 
         types in that scope.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Modules that contain at least one constant definition,
         will produce Erlang source code files (<fo:inline font-family="monospace">.erl</fo:inline>).
         That Erlang file will contain constant functions for 
         that scope.
         Modules that contain no constant definitions are considered
         empty and no code will be produced for them, but only for
         their included modules/interfaces.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Interfaces will produce Erlang source code files (<fo:inline font-family="monospace">.erl</fo:inline>),
         this code will contain all operation stub code and implementation
         functions.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>In addition to the scope-related files, an Erlang source file will
         be generated for each definition of the types <fo:inline font-family="monospace">struct</fo:inline>,
        <fo:inline font-family="monospace">union</fo:inline> and <fo:inline font-family="monospace">exception</fo:inline> (these are the types that
         will be represented in Erlang as records).
         This file will contain special access functions for that record.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The top level scope will produce two files, one header file
         (<fo:inline font-family="monospace">.hrl</fo:inline>) and one Erlang source file (<fo:inline font-family="monospace">.erl</fo:inline>).
         These files are named as the IDL file, prefixed with <fo:inline font-family="monospace">oe_</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After compiling DB.idl, the following files have been generated:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">oe_DB.hrl</fo:inline> and <fo:inline font-family="monospace">oe_DB.erl</fo:inline> for the top scope level.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">DB.hrl</fo:inline> for the module <fo:inline font-family="monospace">DB</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">DB_Access.hrl</fo:inline> and <fo:inline font-family="monospace">DB_Access.erl</fo:inline> for the interface 
        <fo:inline font-family="monospace">DB_Access</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">DB_CommonUser.hrl</fo:inline> and <fo:inline font-family="monospace">DB_CommonUser.erl</fo:inline> for the interface 
        <fo:inline font-family="monospace">DB_CommonUser</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">DB_Administrator.hrl</fo:inline> and <fo:inline font-family="monospace">DB_Administrator.erl</fo:inline> for the interface 
        <fo:inline font-family="monospace">DB_Administrator</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">DB_employee.erl</fo:inline> for the structure <fo:inline font-family="monospace">employee</fo:inline> in module 
        <fo:inline font-family="monospace">DB</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since the <fo:inline font-family="monospace">employee</fo:inline> struct is defined in the top level scope,
        the Erlang record definition is found in <fo:inline font-family="monospace">DB.hrl</fo:inline>. IC also generates
        stubs/skeletons (e.g. <fo:inline font-family="monospace">DB_CommonUser.erl</fo:inline>) and access functions for
        some datatypes (e.g. <fo:inline font-family="monospace">DB_employee.erl</fo:inline>). How the stubs/skeletons are
        used is thoroughly described in
        <fo:inline font-style="italic">Stubs/Skeletons</fo:inline> and
        <fo:inline font-style="italic">Module_Interface</fo:inline>.</fo:block>
    
  <fo:block id="idp2667680" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.8 
      Typecode, Identity and Name Access Functions</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">As mentioned in a previous section, <fo:inline font-family="monospace">struct</fo:inline>, <fo:inline font-family="monospace">union</fo:inline> and 
      <fo:inline font-family="monospace">exception</fo:inline> types yield record definitions and access code 
      for that record. 
      For <fo:inline font-family="monospace">struct</fo:inline>, <fo:inline font-family="monospace">union</fo:inline>, <fo:inline font-family="monospace">exception</fo:inline>, <fo:inline font-family="monospace">array</fo:inline> and 
      <fo:inline font-family="monospace">sequence</fo:inline> types, a special file is generated that holds access
      functions for <fo:inline font-family="monospace">TypeCode</fo:inline>, <fo:inline font-family="monospace">Identity</fo:inline> and <fo:inline font-family="monospace">Name</fo:inline>.
      These functions are put in the file corresponding to the scope where 
      they are defined. For example, the module <fo:inline font-family="monospace">DB_employee.erl</fo:inline>, 
      representing the <fo:inline font-family="monospace">employee</fo:inline> struct, exports the following functions:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>tc/0 - returns the type code for the struct.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>id/0 - returns the IFR identity of the struct. In this case
       the returned value is <fo:inline font-family="monospace">"IDL:DB/employee:1.0"</fo:inline>, but
       if the struct was defined in the scope of <fo:inline font-family="monospace">CommonUser</fo:inline>,
       the result would be <fo:inline font-family="monospace">"IDL:DB/CommonUser/employee:1.0"</fo:inline>.
       However, the user usually do not need to know the Id, just
       which Erlang module contains the correct Id.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>name/0 - returns the scoped name of the struct. The <fo:inline font-family="monospace">employee</fo:inline>
       struct name is <fo:inline font-family="monospace">"DB_employee"</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type codes give a complete description  of the type including all its components and structure.are, for example, used in <fo:inline font-style="italic">Any</fo:inline> values.
      Hence, we can encapsulate the <fo:inline font-family="monospace">employee</fo:inline> struct in an <fo:inline font-family="monospace">any</fo:inline>
      type by:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
%% Erlang code
....
AnEmployee = #'DB_employee'{'No'      = 1,
                            'Name'    = "Adam Ivan Kendall",
                            'Address' = "Rasunda, Solna",
                            'Dpt'     = 'Department1'},
EmployeeTC = 'DB_employee':tc(),
EmployeeAny = any:create(EmployeeTC, AnEmployee),
....
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information, see the
      <fo:inline font-style="italic">Type Code listing</fo:inline>.</fo:block>
  <fo:block id="idp2684896" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.9 
      References to Constants</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Constants are generated as Erlang functions, and are accessed by a
      single function call. The functions are put in the file
      corresponding to the scope where they are defined. There is no
      need for an object to be started to access a constant.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// m.idl
module m {
    const float pi = 3.14;

    interface i {
    const float pi = 3.1415;
    };
};
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since the two constants are defined in different scopes, the IDL code
      above is valid, but not necessarily a good approach. After compiling
      <fo:inline font-family="monospace">m.idl</fo:inline>, the constant definitions can be extracted by invoking:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
$ <fo:inline font-weight="bold">erlc m.idl</fo:inline>
$ <fo:inline font-weight="bold">erlc m.erl</fo:inline>
$ <fo:inline font-weight="bold">erl</fo:inline>
Erlang (BEAM) emulator version 5.1.1 [threads:0]

Eshell V5.1.1  (abort with ^G)
1&gt; <fo:inline font-weight="bold">m:pi().</fo:inline>
3.14
2&gt; <fo:inline font-weight="bold">m_i:pi().</fo:inline>
3.1415
3&gt; <fo:inline font-weight="bold">halt().</fo:inline>
    </fo:block>
  <fo:block id="idp2692016" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.10 
      References to Objects Defined in OMG IDL</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objects are accessed by object references. An object reference
      is an opaque Erlang term created and maintained by the ORB.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objects are implemented by providing implementations for all
      operations and attributes of the Object, <fo:inline font-style="italic">see operation implementation</fo:inline>.</fo:block>
  <fo:block id="idp2694784" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.11 
      Exceptions</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exceptions are handled as Erlang catch and throws. Exceptions
      are translated to messages over an IIOP bridge but converted
      back to a throw on the receiving side. Object implementations
      that invoke operations on other objects must be aware of the
      possibility of a non-local return. This includes invocation of
      ORB and IFR services. See also the
      <fo:inline font-style="italic">Exceptions</fo:inline> section.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Exception parameters are mapped as an Erlang record and accessed
      as such.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An object implementation that raises an exception will use the
      <fo:inline font-family="monospace">corba:raise/1</fo:inline> function, passing the exception record as
      parameter.</fo:block>
  <fo:block id="idp2698720" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.12 
      Access to Attributes</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Attributes are accessed through their access functions. An
      attribute implicitly defines the <fo:inline font-family="monospace">_get</fo:inline> and <fo:inline font-family="monospace">_set</fo:inline>
      operations. These operations are handled in the same way as
      normal operations. The <fo:inline font-family="monospace">_get</fo:inline> operation is defined as a <fo:inline font-family="monospace">readonly</fo:inline> 
      attribute.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
readonly attribute long RAttribute;
attribute long RWAttribute;
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">RAttribute</fo:inline> requires that you implement, in your call-back module,
      <fo:inline font-family="monospace">_get_RAttribute</fo:inline>. For the <fo:inline font-family="monospace">RWAttribute</fo:inline> it is necessary to implement
      <fo:inline font-family="monospace">_get_RWAttribute</fo:inline> and <fo:inline font-family="monospace">_set_RWAttribute</fo:inline>.</fo:block>
  <fo:block id="idp2705552" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.13 
      Invocations of Operations</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A standard Erlang <fo:inline font-family="monospace">gen_server</fo:inline> behavior is used for
      object implementation. The <fo:inline font-family="monospace">gen_server</fo:inline> state is then
      used as the object internal state. Implementation of the object 
      function is achieved by implementing its methods and attribute operations.
      These functions will usually have the internal state as their first parameter, 
      followed by any <fo:inline font-family="monospace">in</fo:inline> and <fo:inline font-family="monospace">inout</fo:inline> parameters. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Do not confuse the
      object internal state with its object reference. The object internal state is
      an Erlang term which has a format defined by the user.</fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is not always the case that the internal state will be the first parameter, as stubs can use their own object reference as the first parameter (see the IC documentation).</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A function call will invoke an operation. The first
      parameter of the function should be the object reference and then
      all <fo:inline font-family="monospace">in</fo:inline> and <fo:inline font-family="monospace">inout</fo:inline> parameters follow in the same
      order as specified in the IDL specification. The result will be a return value
      unless the function has <fo:inline font-family="monospace">inout</fo:inline> or <fo:inline font-family="monospace">out</fo:inline> parameters specified; 
      in which case, a tuple of the return value, followed by the parameters will
      be returned.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Example:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
// IDL
module m {
  interface i {
      readonly attribute long RAttribute;
      attribute long RWAttribute;
      long foo(in short a);
      long bar(in char c, inout string s, out long count);
      void baz(out long Id);
  };
};
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Is used in Erlang as :</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
%% Erlang code
....
Obj = ...    %% get object reference
RAttr  = m_i:'_get_RAttribute'(Obj),
RWAttr = m_i:'_get_RWAttribute'(Obj),
ok = m_i:'_set_RWAttribute'(Obj, Long),
R1 = m_i:foo(Obj, 55),
{R2, S, Count} = m_i:bar(Obj, $a, "hello"),
....
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note how the <fo:inline font-family="monospace">inout</fo:inline> parameter is passed <fo:inline font-weight="bold">and</fo:inline>
      returned. There is no way to use a single occurrence of a
      variable for this in Erlang. Also note, that <fo:inline font-family="monospace">ok</fo:inline>, Orber's 
      representation of the IDL-type <fo:inline font-family="monospace">void</fo:inline>, must be returned by
      <fo:inline font-family="monospace">baz</fo:inline> and <fo:inline font-family="monospace">'_set_RWAttribute'</fo:inline>. 
      These operations can be implemented in the call-back module as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
'_set_RWAttribute'(State, Long) -&gt;
    {reply, ok, State}.

'_get_RWAttribute'(State) -&gt;
    {reply, Long, State}.

'_get_RAttribute'(State) -&gt;
    {reply, Long, State}.

foo(State, AShort) -&gt;
    {reply, ALong, State}.
 
bar(State, AShort, AString) -&gt;
    {reply, {ALong, "MyString", ALong}, State}.
 
baz(State) -&gt;
    {reply, {ok, AId}, State}.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The operations may require more arguments (depends on IC options used). For
      more information, see <fo:inline font-style="italic">Stubs/Skeletons</fo:inline>
      and <fo:inline font-style="italic">Module_Interface</fo:inline>.</fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A function can also be defined to be <fo:inline font-family="monospace">oneway</fo:inline>, i.e. 
        asynchronous. But, since the behavior of a oneway operation is not
        defined in the OMG specifications (i.e. the behavior can differ depending on
        which other ORB Orber is communicating with), one should avoid using it.</fo:block>
    </fo:block>
  <fo:block id="idp2724576" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.14 
      Implementing the DB Application</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Now we are ready to implement the call-back modules. There are three modules
      we must create:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>DB_Access_impl.erl</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>DB_CommonUser_impl.erl</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>DB_Administrator_impl.erl</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An easy way to accomplish that, is to use the IC backend <fo:inline font-family="monospace">erl_template</fo:inline>,
      which will generate a complete call-back module. One should also add
      the same compile options, for example <fo:inline font-family="monospace">this</fo:inline> or <fo:inline font-family="monospace">from</fo:inline>,
      used when generating the stub/skeleton modules:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
$&gt; erlc +"{be,erl_template}" DB.idl
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">We begin with implementing the <fo:inline font-family="monospace">DB_Access_impl.erl</fo:inline> module, which,
      if we used <fo:inline font-family="monospace">erl_template</fo:inline>, will look like the following. All we need
      to do is to add the logic to the <fo:inline font-family="monospace">logon</fo:inline> operation.</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
%%----------------------------------------------------------------------
%% &lt;LICENSE&gt;
%% 
%%     $Id$
%%
%%----------------------------------------------------------------------
%% Module       : DB_Access_impl.erl
%% 
%% Source       : /home/user/example/DB.idl
%% 
%% Description  : 
%% 
%% Creation date: 2005-05-20
%%
%%----------------------------------------------------------------------
-module('DB_Access_impl').

-export([logon/3]).

%%----------------------------------------------------------------------
%% Internal Exports
%%----------------------------------------------------------------------
-export([init/1,
         terminate/2,
         code_change/3,
         handle_info/2]).

%%----------------------------------------------------------------------
%% Include Files
%%----------------------------------------------------------------------


%%----------------------------------------------------------------------
%% Macros
%%----------------------------------------------------------------------


%%----------------------------------------------------------------------
%% Records
%%----------------------------------------------------------------------
-record(state, {}).

%%======================================================================
%% API Functions
%%======================================================================
%%----------------------------------------------------------------------
%% Function   : logon/3
%% Arguments  : State - term()
%%              ID = String()
%%              PW = String()
%% Returns    : ReturnValue = OE_Reply
%%              OE_Reply = Object_Ref()
%% Raises     : 
%% Description: 
%%----------------------------------------------------------------------
logon(State, ID, PW) -&gt;
    %% Check if the ID/PW is valid and what 
    %% type of user it is (Common or Administrator).
    OE_Reply
            = case check_user(ID, PW) of
             {ok, administrator} -&gt;
                'DB_Administrator':oe_create();
             {ok, common} -&gt;
                'DB_CommonUser':oe_create();
             error -&gt;
                %% Here we should throw an exception              
                corba:raise(....)
        end,
    {reply, OE_Reply, State}.

%%======================================================================
%% Internal Functions
%%======================================================================
%%----------------------------------------------------------------------
%% Function   : init/1
%% Arguments  : Env = term()
%% Returns    : {ok, State}          |
%%              {ok, State, Timeout} |
%%              ignore               |
%%              {stop, Reason}
%% Raises     : -
%% Description: Initiates the server
%%----------------------------------------------------------------------
init(_Env) -&gt;
    {ok, #state{}}.


%%----------------------------------------------------------------------
%% Function   : terminate/2
%% Arguments  : Reason = normal | shutdown | term()
%%              State = term()
%% Returns    : ok
%% Raises     : -
%% Description: Invoked when the object is terminating.
%%----------------------------------------------------------------------
terminate(_Reason, _State) -&gt;
    ok.


%%----------------------------------------------------------------------
%% Function   : code_change/3
%% Arguments  : OldVsn = undefined | term()
%%              State = NewState = term()
%%              Extra = term()
%% Returns    : {ok, NewState}
%% Raises     : -
%% Description: Invoked when the object should update its internal state
%%              due to code replacement.
%%----------------------------------------------------------------------
code_change(_OldVsn, State, _Extra) -&gt;
    {ok, State}.


%%----------------------------------------------------------------------
%% Function   : handle_info/2
%% Arguments  : Info = normal | shutdown | term()
%%              State = NewState = term()
%% Returns    : {noreply, NewState}          |
%%              {noreply, NewState, Timeout} |
%%              {stop, Reason, NewState}
%% Raises     : -
%% Description: Invoked when, for example, the server traps exits.
%%----------------------------------------------------------------------
handle_info(_Info, State) -&gt;
    {noreply, State}.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since <fo:inline font-family="monospace">DB_Administrator</fo:inline> inherits from <fo:inline font-family="monospace">DB_CommonUser</fo:inline>,
      we must implement <fo:inline font-family="monospace">delete</fo:inline> in the <fo:inline font-family="monospace">DB_Administrator_impl.erl</fo:inline>
      module, and <fo:inline font-family="monospace">lookup</fo:inline> in <fo:inline font-family="monospace">DB_Administrator_impl.erl</fo:inline><fo:inline font-weight="bold">and</fo:inline><fo:inline font-family="monospace">DB_CommonUser_impl.erl</fo:inline>. But wait, is that really necessary? Actually,
      it is not. We simple use the IC compile option <fo:inline font-weight="bold">impl</fo:inline>:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
$ <fo:inline font-weight="bold">erlc +'{{impl, "DB::CommonUser"}, "DBUser_impl"}'\
 +'{{impl, "DB::Administrator"}, "DBUser_impl"}' DB.idl</fo:inline>
$ <fo:inline font-weight="bold">erlc *.erl</fo:inline>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Instead of creating, and not the least, maintaining two call-back modules,
      we only have to deal with <fo:inline font-family="monospace">DBUser_impl.erl</fo:inline>. If we generated the
      templates, we simply rename <fo:inline font-family="monospace">DB_Administrator_impl.erl</fo:inline> to
      <fo:inline font-family="monospace">DBUser_impl.erl</fo:inline>. See also the
      <fo:inline font-style="italic">Exceptions</fo:inline> chapter.
      In the following example, only the implementation of the API functions
      are shown:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
%%======================================================================
%% API Functions
%%======================================================================
%%----------------------------------------------------------------------
%% Function   : delete/2
%% Arguments  : State - term()
%%              ENo = unsigned_Long()
%% Returns    : ReturnValue = ok
%% Raises     : 
%% Description: 
%%----------------------------------------------------------------------
delete(State, ENo) -&gt;
        %% How we access the DB, for example mnesia, is not shown here.
        case delete_employee(No) of
            ok -&gt;
                {reply, ok, State};
            error -&gt;
                %% Here we should throw an exception if
                %% there is no match.
                corba:raise(....)
        end.

%%----------------------------------------------------------------------
%% Function   : lookup/2
%% Arguments  : State - term()
%%              ENo = unsigned_Long()
%% Returns    : ReturnValue = OE_Reply
%%              OE_Reply = #'DB_employee'{No,Name,Address,Dpt}
%%              No = unsigned_Long()
%%              Name = String()
%%              Address = String()
%%              Dpt = Department
%%              Department = 'Department1' | 'Department2' 
%% Raises     : 
%% Description: 
%%----------------------------------------------------------------------
lookup(State, ENo) -&gt;
        %% How we access the DB, for example mnesia, is not shown here.
        case lookup_employee(ENo) of
            %% We assume that we receive a 'DB_employee' struct
            {ok, Employee} -&gt;
                OE_Reply = Employee,
                {reply, OE_Reply, State};
            error -&gt;
                %% Here we should throw an exception if
                %% there is no match.
                corba:raise(....)
        end.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After you have compiled both call-back modules, and implemented the missing
      functionality (e.g. lookup_employee/1), we can test our application:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
%% Erlang code
....
%% Create an Access object
Acc = 'DB_Access':oe_create(),

%% Login is Common user and Administrator
Adm = 'DB_Access':logon(A, "admin", "pw"),
Com = 'DB_Access':logon(A, "comm", "pw"),

%% Lookup existing employee
Employee = 'DB_Administrator':lookup(Adm, 1),
Employee = 'DB_CommonUser':lookup(Adm, 1),

%% If we try the same using the DB_CommonUser interface 
%% it result in an exit since that operation is not exported.
{'EXIT', _} = (catch 'DB_CommonUser':delete(Adm, 1)),

%% Try to delete the employee via the CommonUser Object
{'EXCEPTION', _} = (catch 'DB_Administrator':delete(Com, 1)),

%% Invoke delete operation on the Administrator object
ok = 'DB_Administrator':delete(Adm, 1),
....
    </fo:block>
  <fo:block id="idp2750752" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.15 
      Reserved Compiler Names and Keywords</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The use of some names is  strongly discouraged due to 
      ambiguities. However, the use of some names is prohibited 
      when using the Erlang mapping , as they are strictly reserved for IC.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">IC reserves all identifiers starting with <fo:inline font-family="monospace">OE_</fo:inline> and <fo:inline font-family="monospace">oe_</fo:inline> 
      for internal use.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note also, that an identifier in IDL can  contain alphabetic,
      digits and underscore characters, but the first character 
      <fo:inline font-weight="bold">must</fo:inline> be alphabetic.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The OMG defines a set of reserved words, shown below, for use as keywords. 
      These may <fo:inline font-weight="bold">not</fo:inline> be used as, for example, identifiers. The keywords
      which are not in bold face was introduced in the OMG CORBA-3.0 
      specification.</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">abstract</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">exception</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">inout</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">provides</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">truncatable</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">any</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">emits</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">interface</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">public</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">typedef</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">attribute</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">enum</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">local</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">publishes</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typeid</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">boolean</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">eventtype</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">long</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">raises</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">typeprefix</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">case</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">factory</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">module</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">readonly</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">unsigned</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">char</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">FALSE</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">multiple</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">setraises</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">union</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">component</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">finder</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">native</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">sequence</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">uses</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">const</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">fixed</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Object</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">short</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">ValueBase</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">consumes</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">float</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">octet</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">string</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">valuetype</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">context</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">getraises</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">oneway</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">struct</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">void</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">custom</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">home</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">out</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">supports</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">wchar</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">default</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">import</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">primarykey</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">switch</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">wstring</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">double</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">in</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">private</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">TRUE</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        6.4:
         
        OMG IDL keywords</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The keywords listed above must be written exactly as shown. Any usage
      of identifiers that collide with a keyword is illegal. For example,
      <fo:inline font-weight="bold">long</fo:inline> is a valid keyword; <fo:inline font-weight="bold">Long</fo:inline> and <fo:inline font-weight="bold">LONG</fo:inline> are
      illegal as keywords and identifiers. But, since the OMG must be able
      to expand the IDL grammar, it is possible to use <fo:inline font-weight="bold">Escaped  Identifiers</fo:inline>. For example, it is not unlikely that <fo:inline font-family="monospace">native</fo:inline>
      have been used in IDL-specifications as identifiers. One option is to
      change all occurrences to <fo:inline font-family="monospace">myNative</fo:inline>. Usually, it is necessary
      to change programming language code that depends upon that IDL as well.
      Since Escaped Identifiers just disable type checking (i.e. if it is a reserved
      word or not) and leaves everything else unchanged, it is only necessary to
      update the IDL-specification. To escape an identifier, simply prefix it
      with <fo:inline font-weight="bold">_</fo:inline>. The following IDL-code is illegal:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
typedef string native;
interface i {
   void foo(in native Arg);
   };
};
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">With Escaped Identifiers the code will look like:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
typedef string _native;
interface i {
   void foo(in _native Arg);
   };
};
    </fo:block>
  <fo:block id="idp2840160" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.6.16 
      Type Code Representation</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type Codes are used in <fo:inline font-family="monospace">any</fo:inline> values. To avoid mistakes, you should
      use access functions exported by the Data Types modules
      (e.g. struct, union etc) or the <fo:inline font-style="italic">orber_tc</fo:inline>
      module.</fo:block>
    <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Type Code</fo:inline></fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"><fo:inline font-weight="bold">Example</fo:inline></fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_null</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_void</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_short</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_long</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_longlong</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_ushort</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_ulong</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_ulonglong</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_float</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_double</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_boolean</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_char</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_wchar</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_octet</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_any</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_TypeCode</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">tk_Principal</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start"/></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_objref, IFRId, Name}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_objref, "IDL:M1\I1:1.0", "I1"}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_struct, IFRId, Name, [{ElemName, ElemTC}]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_struct, "IDL:M1\S1:1.0", "S1", [{"a", tk_long}, {"b", tk_char}]}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_union, IFRId, Name, DiscrTC, DefaultNr, [{Label, ElemName, ElemTC}]}         <fo:block/>
Note: DefaultNr tells which of tuples in the case list that is default, or -1 if no default</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_union, "IDL:U1:1.0", "U1", tk_long, 1, [{1, "a", tk_long}, {default, "b", tk_char}]}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_enum, IFRId, Name, [ElemName]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_enum, "IDL:E1:1.0", "E1", ["a1", "a2"]}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_string, Length}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_string, 5}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_wstring, Length}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_wstring, 7}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_fixed, Digits, Scale}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_fixed, 3, 2}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_sequence, ElemTC, Length}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_sequence, tk_long, 4}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_array, ElemTC, Length}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_array, tk_char, 9}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_alias, IFRId, Name, TC}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_alias, "IDL:T1:1.0", "T1", tk_short}</fo:block></fo:table-cell>
      </fo:table-row><fo:table-row>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_except, IFRId, Name, [{ElemName, ElemTC}]}</fo:block></fo:table-cell>
        <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">{tk_except, "IDL:Exc1:1.0", "Exc1", [{"a", tk_long}, {"b", {tk_string, 0}}]}</fo:block></fo:table-cell>
      </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        6.5:
         
        Type Code tuples</fo:block>
  <fo:block id="idp2917408" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.7  CosNaming Service</fo:marker>1.7  CosNaming Service</fo:block><fo:block id="idp2920064" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.7.1 
      Overview of the CosNaming Service</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The CosNaming Service is a service developed to help users and
      programmers identify objects by human readable names rather than by a
      reference.  By  binding a name to a naming context (another object), a
      contextual reference is formed. This is helpful when navigating in the
      object space. In addition, identifying objects by name allows you to evolve
      and/or relocate objects without client code modification.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The CosNaming service has some concepts that are important:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">name binding</fo:inline> - a name to object association.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">naming context</fo:inline> - is an object that contains a set of
          name bindings in which each name is unique. Different names can be
          bound to the same object.  
          </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">to bind a name</fo:inline> - is to create a name binding in a given
          context.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">to resolve a name</fo:inline> - is to determine the object associated
          with the name in a given context.</fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A name is always resolved in a context, there no absolute names exist.
      Because a context is like any other object, it can also be bound to
      a name
      in a naming context. 
      This will result in a naming graph (a directed graph with notes and 
      labeled edges). The graph allows more complex names to refer to an
      object. Given a context, you can use a sequence to reference an object.
      This sequence is henceforth referred to as <fo:inline font-weight="bold">name</fo:inline> and the
      individual
      elements in the sequence as <fo:inline font-weight="bold">name components</fo:inline>. All but the 
      last name component are bound to naming contexts.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The diagram in figure 1 illustrates how the Naming Service provides a
      contextual relationship between objects, NamingContexts and
      NameBindings to create an object locality, as the
      object itself, has no name.
      </fo:block>
    
    <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="name.gif"/>
      <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        7.1:
         
        
Figure 1: Contextual object relationships using the Naming Service.</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The naming contexts provide a directory of contextual
      reference and naming for objects (an object can appear to 
      have more than one name).
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In figure 1 the object to the right can either be
      called <fo:inline font-family="monospace">alpha</fo:inline> from one context or <fo:inline font-family="monospace">gamma</fo:inline> from another.  
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Naming Service has an initial naming context, which is shown 
      in the diagram as the top-most object in the naming graph.
      It has two names <fo:inline font-family="monospace">beta</fo:inline> and <fo:inline font-family="monospace">epsilon</fo:inline>, which are bound to other
      naming contexts. The initial naming context is a well known location 
      used to share a common name space between multiple programs.
      You can traverse the naming graph until you reach a name, which is
      bound to an object, which is not a naming context.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">We recommend reading <fo:inline font-weight="bold">chapter 12, CORBA Fundamentals and Programming</fo:inline>, for detailed information regarding the 
      Naming Service. </fo:block>
  <fo:block id="idp2937152" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.7.2 
      The Basic Use-cases of the Naming Service</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The basic use-cases of the Naming Service are:
      </fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Fetch initial reference to the naming service.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Creating a naming context.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Binding and unbinding names to objects.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Resolving a name to an object.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Listing the bindings of a naming context.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Destroying a naming context.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>

    <fo:block id="idp2941936" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Fetch Initial Reference to the Naming Service</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In order to use the naming service you have to fetch an 
        initial reference to it. This is done with:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
NS = corba:resolve_initial_references("NameService").
      </fo:block>
      <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">NS in the other use-cases refers to this initial reference.</fo:block>
      </fo:block>
    

    <fo:block id="idp2945120" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Creating a Naming Context</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are two functions for creating a naming context.
        The first function, which only creates a naming context object is:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
NC = 'CosNaming_NamingContext':new_context(NS).
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The other function creates a naming context and binds it to a name in 
        an already existing naming context (the initial context in this 
        example):
        </fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
NC = 'CosNaming_NamingContext':bind_new_context(NS, lname:new(["new"])).
      </fo:block>
    

    <fo:block id="idp2948736" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Binding and Unbinding Names to Objects</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following steps illustrate how to bind/unbind an object reference 
        to/from a name. For the example below, assume that the NamingContexts 
        in the path are already bound to the name <fo:inline font-family="monospace">/workgroup/services</fo:inline>, 
        and that reference to the services context are in the variable 
        <fo:inline font-family="monospace">Sc</fo:inline>.</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use the naming library functions to create a name</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
Name = lname:new(["object"]).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use CosNaming::NamingContext::bind() to bind a name to an object</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
'CosNaming_NamingContext':bind(Sc, Name, Object).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use CosNaming::NamingContext::unbind() to remove the NameBinding from an object</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
'CosNaming_NamingContext':unbind(Sc, Name).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objects can have more than one name, to indicate different paths to 
          the same object.</fo:block>
      </fo:block>
    

    <fo:block id="idp2958048" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Resolving a Name to an Object</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following steps show how to  retrieve the object reference to the service context 
        above (/workgroup/services).    </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use the naming library functions to create a name path:</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
Name = lname:new(["workgroup", "services"]).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use CosNaming::NamingContext::resolve() to to resolve the name to an object</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
Sc = 'CosNaming_NamingContext':resolve(NS, Name).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">An alternative is to use:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
Sc = corba:string_to_object("corbaname:rir:/NameService#workgroup/services/").
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">corbaname</fo:inline> schema is described further in the Interoperable
        Naming Service section.</fo:block>
    

    <fo:block id="idp2965872" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Listing the Bindings in a NamingContext</fo:block>
      
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use CosNaming::NamingContext::list() to list all the bindings in a context</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following code retrieves and lists up to 10 bindings from a context.</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
{BList, BIterator} = 'CosNaming_NamingContext':list(Sc, 10).

lists:foreach(fun({{Id, Kind},BindingType}) -&gt; case BindingType of 
    nobject -&gt;
        io:format("id: %s, kind: %s, type: object~n", [Id, Kind]);
    _ -&gt;
        io:format("id: %s, kind: %s, type: ncontext~n", [Id, Kind])
    end end,
    Blist).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Normally a The binding iterator (Like a book mark) indicates which objects have been read from the list.is helpful in situations where you have a large number of objects 
          in a list, as the programmer then can traverse it more easily.
          In Erlang it is not needed, because lists are easily handled in the 
          language itself.</fo:block>
      </fo:block>
      <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Remember that the BindingIterator (BIterator in the example) is an object and therefore
          <fo:inline font-weight="bold">must be removed</fo:inline> otherwise dangling processes will occur.
          Use <fo:inline font-family="monospace">CosNaming::BindingIterator::destroy()</fo:inline> to remove it.</fo:block>
      </fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      'CosNaming_NamingContext':destroy(BIterator).
      </fo:block>
    

    <fo:block id="idp2974752" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Destroying a Naming Context</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The naming contexts are persistent and must be explicitly removed.
        (they are also removed if all Orber nodes in the domain are stopped).</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Use CosNaming::NamingContext::destroy() to remove a NamingContext</fo:block>
          <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
'CosNaming_NamingContext':destroy(Sc).
          </fo:block>
        </fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    
  <fo:block id="idp2978816" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.7.3 
      Interoperable Naming Service</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The OMG specifies URL schemes, which represent a CORBA object and a CORBA object
      bound in a NamingContext, for resolving references from other ORB:s. As of today,
      three schemes are defined:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>IOR</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>corbaloc</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>corbaname</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>

    <fo:block id="idp2982832" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">IOR</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A stringified IOR is a valid URL format but difficult for humans to handle
        through non-electronic means. This URL format does not depend on a specific
        Name Service and, thus, is robust and insulates the client from the encapsulated
        transport information and object key used to reference the object.</fo:block>
    

    <fo:block id="idp2984480" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">corbaloc</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The notation of this scheme is similar to the more well known URL <fo:inline font-family="monospace">HTTP</fo:inline>, and
        the full <fo:inline font-family="monospace">corbaloc</fo:inline> BNF is:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
&lt;corbaloc&gt;            =  "corbaloc:"&lt;obj_addr_list&gt;["/"&lt;key_string&gt;] 
&lt;obj_addr_list&gt;       = [&lt;obj_addr&gt;","]*&lt;obj_addr&gt; 
&lt;obj_addr&gt;            = &lt;prot_addr&gt; | &lt;future_prot_addr&gt; 
&lt;prot_addr&gt;           = &lt;rir_prot_addr&gt; | &lt;iiop_prot_addr&gt; 
&lt;rir_prot_addr&gt;       = &lt;rir_prot_token&gt;":"  
&lt;rir_prot_token&gt;      = rir  
&lt;future_prot_addr&gt;    = &lt;future_prot_id&gt;&lt;future_prot_addr&gt;
&lt;future_prot_id&gt;      = &lt;future_prot_token&gt;":" 
&lt;iiop_prot_addr&gt;      = &lt;iiop_id&gt;&lt;iiop_addr&gt;
&lt;iiop_id&gt;             = &lt;iiop_default&gt; | &lt;iiop_prot_token&gt;":"  
&lt;iiop_default&gt;        = ":"  
&lt;iiop_prot_token&gt;     = "iiop"  
&lt;iiop_addr&gt;           = &lt;version&gt;&lt;host&gt;[":"&lt;port&gt;] 
&lt;host&gt;                = &lt;DNS-style Host Name&gt; | &lt;ip_v4_address&gt; | "["&lt;ip_v6_address&gt;"]"
&lt;version&gt;             = &lt;major&gt;"."&lt;minor&gt;"@"  | empty_string 
&lt;port&gt;                = number 
&lt;major&gt;               = number 
&lt;minor&gt;               = number
&lt;DNS-style Host Name&gt; = string
&lt;ip_v4_address&gt;       = string
&lt;ip_v6_address&gt;       = string
&lt;key_string&gt;          = for example NameService
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">corbaloc</fo:inline> scheme consists of 3 parts:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Protocol - as of today <fo:inline font-family="monospace">iiop</fo:inline> or <fo:inline font-family="monospace">rir</fo:inline> is supported.
         Using <fo:inline font-family="monospace">rir</fo:inline> means that we will resolve the given Key locally, i.e.,
         the same as using <fo:inline font-family="monospace">corba:resolve_initial_references("NameService").</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>IIOP address - this address can be divided into <fo:inline font-family="monospace">Version</fo:inline>, <fo:inline font-family="monospace">Host</fo:inline> 
         and <fo:inline font-family="monospace">Port</fo:inline>. If the version or port are left out they will be set to the default
         values <fo:inline font-family="monospace">1.0</fo:inline> and <fo:inline font-family="monospace">2809</fo:inline> respectively.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>KeyString - an object key, e.g., "NameService". If no Key is 
         supplied the default value "NameService" will be used.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A <fo:inline font-family="monospace">corbaloc</fo:inline> can be passed used together with 
        <fo:inline font-family="monospace">corba:string_to_object("corbaloc::1.0@erlang.org:4001/NameService")</fo:inline> or set as the 
        configuration variables <fo:inline font-family="monospace">orbInitilRef</fo:inline> or <fo:inline font-family="monospace">orbDefaultInitilRef</fo:inline> and calling
        <fo:inline font-family="monospace">corba:resolve_initial_references("NameService")</fo:inline>. For more information see the Orber
        installation chapter. <fo:inline font-family="monospace">corbaloc</fo:inline> can also be used together with <fo:inline font-family="monospace">corbaname</fo:inline>
        to gain an easy access to a Name Service.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Currently, the OMG defines a set of reserved keys and the type of object,
        listed below, they should be associated with. The <fo:inline font-family="monospace">NameService</fo:inline>
        key may <fo:inline font-weight="bold">not</fo:inline> be changed in Orber. If you want to add one of the
        reserved keys as an initial service, simply use:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
1&gt; Factory = cosNotificationApp:start_global_factory().
2&gt; corba:add_initial_service("NotificationService", Factory).
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This object can then be easily resolved by any other ORB, supporting 
        the Interoperable Naming Service, by using:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
3&gt; NF = corba:string_to_object("corbaloc::1.0@erlang.org:4001/NotificationService").
      </fo:block>
      <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">String Name</fo:inline></fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Object Type</fo:inline></fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">RootPOA</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">PortableServer::POA</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">POACurrent</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">PortableServer::Current</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">InterfaceRepository</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CORBA::Repository</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">NameService</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CosNaming::NamingContext</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">TradingService</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CosTrading::Lookup</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">SecurityCurrent</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">SecurityLevel1::Current/SecurityLevel2::Current</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">TransactionCurrent</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CosTransaction::Current</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">DynAnyFactory</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">DynamicAny::DynAnyFactory</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ORBPolicyManager</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CORBA::PolicyManager</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">PolicyCurrent</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CORBA::PolicyCurrent</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">NotificationService</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CosNotifyChannelAdmin::EventChannelFactory</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">TypedNotificationService</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CosTypedNotifyChannelAdmin::TypedEventChannelFactory</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">CodecFactory</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">IOP::CodecFactory</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">PICurrent</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">PortableInterceptors::Current</fo:block></fo:table-cell>
        </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        7.1:
         
        Currently reserved key strings</fo:block>
    

    <fo:block id="idp3041328" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">corbaname</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">corbaname</fo:inline> URL scheme is an extension of the <fo:inline font-family="monospace">corbaloc</fo:inline> scheme, and
        the full <fo:inline font-family="monospace">corbaname</fo:inline> BNF is:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
&lt;corbaname&gt;     = "corbaname:"&lt;obj_addr_list&gt;["/"&lt;key_string&gt;]["#"&lt;string_name&gt;] 
&lt;obj_addr_list&gt; = as described above.
&lt;key_string&gt;    = as described above.
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">string_name</fo:inline>, concatenated to the <fo:inline font-family="monospace">corbaloc</fo:inline> string, identifies
        a binding in a naming context. A name component consists of two parts, i.e.,
        <fo:inline font-family="monospace">id</fo:inline> and <fo:inline font-family="monospace">kind</fo:inline>, which is represented as follows:</fo:block>
      <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">String Name</fo:inline></fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Name Sequence</fo:inline></fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Comment</fo:inline></fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"id1/./id3.kind3"</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">[{"id1",""},{"",""},{"id3","kind3"}]</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">The first component has no kind defined while the second component's both fields are empty.</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"id1//id3.kind3"</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ERROR</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Not allowed, must insert a '.' between the '//'.</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"id1.kind1/."</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">[{"id1","kind1"},{"",""}]</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">The first component's fields are both set while the second component's both fields are empty.</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"id1.kind1/id2."</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">ERROR</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">An Id with a trailing '.' is not allowed.</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">"i\\/d1/i\\.d2"</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">[{"i/d1",""},{"i.d2",""}]</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Since '.' and '/' are used to separate the components, these tokens must be escaped to be correctly converted.</fo:block></fo:table-cell>
        </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        7.2:
         
        Stringified Name representation</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After creating a stringified Name we can either use:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
NameStr = "org.erlang",
NS      = corba:resolve_initial_references("NameService"),
Obj     = 'CosNaming_NamingContextExt':resolve_str(NS, NameStr),
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">or concatenate the Name String using:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
NameStr = "Swedish/Soccer/Champions",
Address = "corbaname:iiop:1.0@www.aik.se:2000/NameService",
NS      = corba:resolve_initial_references("NameService"),
URLStr  = 'CosNaming_NamingContextExt':to_url(NS, Address, NameStr),
Obj     = corba:string_to_object(URLStr),
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using the first alternative, the configuration variables <fo:inline font-family="monospace">orbInitilRef</fo:inline> and
        <fo:inline font-family="monospace">orbDefaultInitilRef</fo:inline>, will determine which other ORB's or the local
        Name Service Orber will try to resolve the given string from. The second
        alternative allows us to override any settings of the configuration variables.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function <fo:inline font-family="monospace">to_url/3</fo:inline> will perform any necessary escapes compliant with
        IETF/RFC 2396. US-ASCII alphanumeric characters and 
        <fo:inline font-family="monospace">"," | "/" | ":" | "?" | "@" | "&amp;" | "=" | "+" | "$" | ";" | "-" | "_" | "." | "!" | "~" | "*" | "'" | "(" | ")"</fo:inline>
        are not escaped.</fo:block>
    
  <fo:block id="idp3079760" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.8  How to use security in Orber</fo:marker>1.8  How to use security in Orber</fo:block><fo:block id="idp3082432" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.8.1 
      Security in Orber</fo:block>
    

    <fo:block id="idp3083168" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Introduction</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber SSL provides authentication, privacy and integrity for your
        Erlang applications. Based on the Secure Sockets Layer protocol, the
        Orber SSL ensures that your Orber clients and servers can
        communicate securely over any network. 
        This is done by tunneling IIOP through an SSL connection. To get
        the node secure you will also need to have a firewall which
        only lets through connections to certain ports.</fo:block>
    

    <fo:block id="idp3084944" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Enable Usage of Secure Connections</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To enable a secure Orber domain you have to set the configuration variable 
        <fo:inline font-weight="bold">secure</fo:inline> which currently only can have one of two values;
        <fo:inline font-weight="bold">no</fo:inline> if no security for IIOP should be used and <fo:inline font-weight="bold">ssl</fo:inline> if 
        secure connections is needed (<fo:inline font-weight="bold">ssl</fo:inline> is currently the only supported 
        security mechanism).</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The default is no security.</fo:block>
    

    <fo:block id="idp3088784" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Configurations when Orber is Used on the Server Side</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There is a variable to conficure Orber's SSL behavior on the server side.</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">ssl_server_options</fo:inline> - which is a list of options to ssl. 
        See the <fo:inline font-style="italic">SSL</fo:inline> application for further 
	descriptions on these options.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There also exist an API function for accessing the value of this variable:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>orber:ssl_server_options/0</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    

    <fo:block id="idp3094176" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Configurations when Orber is Used on the Client Side</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When the Orber enabled application is the client side in the secure connection the 
        different configurations can be set per client process instead and not for the whole domain
        as for incoming calls.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There is a variable to set default values for the domain but they can be changed 
        per client process.</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">ssl_client_options</fo:inline> - which is a list of options to ssl.
        See the <fo:inline font-style="italic">SSL</fo:inline> application for further 
	descriptions on these options.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There also exist two API functions for accessing and changing the values of this 
        variable in the client processes.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Access function:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>orber:ssl_client_options/0</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Modify function:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>orber:set_ssl_client_options/1</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    
  <fo:block id="idp3106448" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.9  Orber Stubs/Skeletons</fo:marker>1.9  Orber Stubs/Skeletons</fo:block><fo:block id="idp3109264" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.9.1 
      Orber Stubs and Skeletons Description</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This example describes the API and behavior of Orber stubs and skeletons.
      </fo:block>

    <fo:block id="idp3110528" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Server Start</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber servers can be started in several ways. The chosen start functions determines
        how the server can be accessed and its behavior.
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using <fo:inline font-family="monospace">Module_Interface:oe_create()</fo:inline> or <fo:inline font-family="monospace">oe_create_link()</fo:inline>:
        </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>No initial data can be passed.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Cannot be used as a supervisor child start function.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Only accessible through the object reference returned by the start function.
         The object reference is no longer valid if the server dies and is restarted.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using <fo:inline font-family="monospace">Module_Interface:oe_create(Env)</fo:inline> or <fo:inline font-family="monospace">oe_create_link(Env)</fo:inline>:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Initial data can be passed using <fo:inline font-family="monospace">Env</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Cannot be used as a supervisor child start function.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Only accessible through the object reference returned by the start function.
         The object reference is no longer valid if the server dies and is restarted.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using <fo:inline font-family="monospace">Module_Interface:oe_create(Env, Options)</fo:inline>:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Initial data can be passed using <fo:inline font-family="monospace">Env</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Cannot be used as a supervisor child start function.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Accessible through the object reference returned by the start function. If the option 
        <fo:inline font-family="monospace">{regname, RegName}</fo:inline> is used the object reference stays valid even if the 
         server has been restarted.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the options <fo:inline font-family="monospace">{persistent, true}</fo:inline> and <fo:inline font-family="monospace">{regname, {global, Name}}</fo:inline> is used, 
         the result from an object invocation will be the exception 'OBJECT_NOT_EXIST' 
         only if the object has terminated with reason 
        <fo:inline font-family="monospace">normal</fo:inline> or <fo:inline font-family="monospace">shutdown</fo:inline>. If the object is in the process of restarting, the result 
         will be <fo:inline font-family="monospace">{error, Reason}</fo:inline> or a system exception is raised.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The option <fo:inline font-family="monospace">{pseudo, true}</fo:inline> makes it possible to start create non-server objects.
         There are, however, some limitations, which are further described in the
        <fo:inline font-family="monospace">Pseudo objects</fo:inline> section.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using <fo:inline font-family="monospace">Module_Interface:oe_create_link(Env, Options)</fo:inline>:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Initial data can be passed using <fo:inline font-family="monospace">Env</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Can be used as a supervisor child start function if the option <fo:inline font-family="monospace">{sup_child, true}</fo:inline> used.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Accessible through the object reference returned by the start function. If the option 
        <fo:inline font-family="monospace">{regname, RegName}</fo:inline> is used the object reference stays valid even if the 
         server has been restarted.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the options <fo:inline font-family="monospace">{persistent, true}</fo:inline> and <fo:inline font-family="monospace">{regname, {global, Name}}</fo:inline> is used, 
         the result from an object invocation will be the exception 'OBJECT_NOT_EXIST' 
         only if the object has terminated with reason 
        <fo:inline font-family="monospace">normal</fo:inline> or <fo:inline font-family="monospace">shutdown</fo:inline>. If the object is in the process of restarting, the result 
         will be <fo:inline font-family="monospace">{error, Reason}</fo:inline> or a system exception is raised.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>For starting a server as a supervisor child you should use the options 
        <fo:inline font-family="monospace">[{persistent, true}, {regname, {global, Name}}, {sup_child, true}]</fo:inline> and of type <fo:inline font-weight="bold">transient</fo:inline>.
         This configuration allows you to delegate restarts to the supervisor and still be able to
         use the same object reference and be able to see if the server is permanently terminated.
         Please note you must use <fo:inline font-weight="bold">supervisor/stdlib-1.7</fo:inline> or later and that the it returns 
        <fo:inline font-family="monospace">{ok, Pid, Object}</fo:inline> instead of just <fo:inline font-family="monospace">Object</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Using the option <fo:inline font-family="monospace">{pseudo, true}</fo:inline> have the same effect as using
        <fo:inline font-family="monospace">oe_create/2</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To avoid flooding Orber with old object references start erlang using the flag 
          <fo:inline font-weight="bold">-orber objectkeys_gc_time Time</fo:inline>, which will remove all object references
          related to servers being dead for Time seconds. To avoid extra overhead, i.e., performing
          garbage collect if no persistent objects are started, the objectkeys_gc_time default value 
          is <fo:inline font-weight="bold">infinity</fo:inline>. For more information, see the orber and corba documentation.</fo:block>
      </fo:block>
      <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber still allow <fo:inline font-family="monospace">oe_create(Env, {Type,RegName})</fo:inline> and <fo:inline font-family="monospace">oe_create_link(Env, {Type,RegName})</fo:inline> to be used,
          but may not in future releases.</fo:block>
      </fo:block>
    

    <fo:block id="idp3144112" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Pseudo Objects</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This section describes Orber pseudo objects.
        </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Orber stub can be used to start a <fo:inline font-family="monospace">pseudo object</fo:inline>, which will create a non-server implementation.
        A pseudo object introduce some limitations:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The functions <fo:inline font-family="monospace">oe_create_link/2</fo:inline> is equal to <fo:inline font-family="monospace">oe_create/2</fo:inline>, i.e.,
         no link can or will be created.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The <fo:inline font-family="monospace">BIF:s self()</fo:inline> and <fo:inline font-family="monospace">process_flag(trap_exit,true)</fo:inline> behaves incorrectly.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The <fo:inline font-family="monospace">IC</fo:inline> option <fo:inline font-family="monospace">{{impl, "M::I"}, "other_impl"}</fo:inline> has no effect. The call-back
         functions must be implemented in a file called <fo:inline font-family="monospace">M_I_impl.erl</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The call-back functions must be implemented as if the <fo:inline font-family="monospace">IC</fo:inline> option 
        <fo:inline font-family="monospace">{this, "M::I"}</fo:inline> was used.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The gen_server <fo:inline font-family="monospace">State</fo:inline> changes have no effect. The user can provide information via
         the <fo:inline font-family="monospace">Env</fo:inline> start parameter and the State returned from <fo:inline font-family="monospace">init/2</fo:inline> will be the State
         passed in following invocations.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The server reply <fo:inline font-family="monospace">Timeout</fo:inline> has no effect.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The compile option <fo:inline font-family="monospace">from</fo:inline> has no effect.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The option <fo:inline font-family="monospace">{pseudo, true}</fo:inline> overrides all other start options.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Only the functions, besides own definitions, <fo:inline font-family="monospace">init/2</fo:inline> (called via oe_create*/2) and 
        <fo:inline font-family="monospace">terminate/2</fo:inline> (called via corba:dispose/1) must be implemented.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By adopting the rules for <fo:inline font-family="monospace">pseudo</fo:inline> objects described above we can use <fo:inline font-family="monospace">oe_create/2</fo:inline>
        to create <fo:inline font-family="monospace">server</fo:inline> or <fo:inline font-family="monospace">pseudo</fo:inline> objects, by excluding or including the 
        option <fo:inline font-family="monospace">{pseudo, true}</fo:inline>, without changing the call-back module.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To create a pseudo object do the following:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
fingolfin 127&gt; erl 
Erlang (BEAM) emulator version 4.9
 
Eshell V4.9  (abort with ^G)
1&gt; ic:gen(myDefinition, [{this, "MyModule::MyInterface"}]).
Erlang IDL compiler version 20
ok
2&gt; make:all().
Recompile: oe_MyDefinition
Recompile: MyModule_MyInterface
Recompile: MyModule_MyInterface_impl
up_to_date
3&gt; PseudoObj = MyModule_MyInterface:oe_create(Env, [{pseudo, true}]).
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The call-back functions must be implemented as <fo:inline font-family="monospace">MyFunction(OE_THIS, State, Args)</fo:inline>,
        and called by <fo:inline font-family="monospace">MyModule_MyInterface:MyFunction(PseudoObj, Args)</fo:inline>.</fo:block>
    

    <fo:block id="idp3164912" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Call-back Module</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This section provides an example of how a call-back module may be implemented.</fo:block>
      <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Arguments and Replies are determined by the IDL-code and, hence, not
          further described here.</fo:block>
      </fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
%%%-----------------------------------------------------------
%%% File    : Module_Interface_impl.erl
%%% Author  : 
%%% Purpose : 
%%% Created : 
%%%-----------------------------------------------------------
 
-module('Module_Interface_impl').
 
%%--------------- INCLUDES -----------------------------------
-include_lib("orber/include/corba.hrl").
-include_lib(".. ..").
 
%%--------------- EXPORTS-------------------------------------
%% Arity depends on IC configuration parameters and the IDL
%% specification.
-export([own_function/X]).
 
 
%%--------------- gen_server specific ------------------------
-export([init/1, terminate/2, code_change/3, handle_info/2]).
 
%%------------------------------------------------------------
%% function : server specific
%%------------------------------------------------------------
init(InitialData) -&gt;
    %% 'trap_exit' optional (have no effect if pseudo object).
    process_flag(trap_exit,true),

    %%--- Possible replies ---
    %% Reply and await next request
    {ok, State}.

    %% Reply and if no more requests within Time the special 
    %% timeout message should be handled in the 
    %% Module_Interface_impl:handle_info/2 call-back function (use the 
    %% IC option {{handle_info, "Module::Interface"}, true}).
    {ok, State, Timeout} 

    %% Return ignore in order to inform the parent, especially if it is a 
    %% supervisor, that the server, as an example, did not start in 
    %% accordance with the configuration data. 
    ignore 
    %% If the initializing procedure fails, the reason 
    %% is supplied as StopReason.
    {stop, StopReason}

terminate(Reason, State) -&gt;
    ok.

code_change(OldVsn, State, Extra) -&gt;
    {ok, NewState}.

%% If use IC option {{handle_info, "Module::Interface"}, true}. 
%% (have no effect if pseudo object).
handle_info(Info, State) -&gt;
    %%--- Possible replies ---
    %% Await the next invocation.
    {noreply, State}.
    %% Stop with Reason.
    {stop, Reason, State}.

%%--- two-way ------------------------------------------------
%% If use IC option {this, "Module:Interface"} 
%% (Required for pseudo objects)
own_function(This, State, .. Arguments ..) -&gt;
%% IC options this and from
own_function(This, From, State, .. Arguments ..) -&gt;
%% IC option from
own_function(From, State, .. Arguments ..) -&gt;
    %% Send explicit reply to client.
    corba:reply(From, Reply),
    %%--- Possible replies ---
    {noreply, State}
    {noreply, State, Timeout}

 
%% If not use IC option {this, "Module:Interface"}
own_function(State, .. Arguments ..) -&gt;
    %%--- Possible replies ---
    %% Reply and await next request
    {reply, Reply, State}

    %% Reply and if no more requests within Time the special 
    %% timeout message should be handled in the 
    %% Module_Interface_impl:handle_info/2 call-back function (use the
    %% IC option {{handle_info, "Module::Interface"}, true}).
    {reply, Reply, State, Timeout}

    %% Stop the server and send Reply to invoking object.
    {stop, StopReason, Reply, State}

    %% Stop the server and send no reply to invoking object.
    {stop, StopReason, State}

    %% Raise exception. Any changes to the internal State is lost.
    corba:raise(Exception).

%%--- one-way ------------------------------------------------
%% If use IC option {this, "Module:Interface"}
%% (Required for pseudo objects)
own_function(This, State, .. Arguments ..) -&gt;

%% If not use IC option {this, "Module:Interface"}
own_function(State, .. Arguments ..) -&gt;
    %%--- Possible results ---
    {noreply, State}

    %% Release and if no more requests within Time the special 
    %% timeout message should be handled in the 
    %% Module_Interface_impl:handle_info/2 call-back function (use the
    %%  IC option {{handle_info, "Module::Interface"}, true}).
    {noreply, State, Timeout}

    %% Stop the server with StopReason.
    {stop, StopReason, State}

%%--------------- END OF MODULE ------------------------------
      </fo:block>
    
  <fo:block id="idp3176064" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.10  CORBA System and User Defined Exceptions</fo:marker>1.10  CORBA System and User Defined Exceptions</fo:block><fo:block id="idp3178752" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.10.1 
      System Exceptions</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Orber</fo:inline>, or any other <fo:inline font-family="monospace">ORB</fo:inline>, may raise a <fo:inline font-family="monospace">System Exceptions</fo:inline>.
      These exceptions contain status- and minor-fields and may not appear in the
      operations raises exception IDL-definition.</fo:block>

    <fo:block id="idp3181232" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Status Field</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The status field indicates if the request was completed or not and will be
        assigned one of the following Erlang atoms:</fo:block>
      <fo:table border-collapse="separate" space-after="1em" space-before="1em" table-layout="fixed" inline-progression-dimension="100%"><fo:table-body><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Status</fo:inline></fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="center"><fo:inline font-weight="bold">Description</fo:inline></fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">'COMPLETED_YES'</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">The operation was invoked on the target object but an error occurred after the object replied. This occur, for example, if a server replies but Orber is not able to marshal and send the reply to the  client ORB.</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">'COMPLETED_NO'</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Orber failed to invoke the operation on the target object. This occur, for example, if the object no longer exists.</fo:block></fo:table-cell>
        </fo:table-row><fo:table-row>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">'COMPLETED_MAYBE'</fo:block></fo:table-cell>
          <fo:table-cell border-style="solid" border-width="0.5pt" display-align="center" padding-after="0.5em" padding-before="0.5em" padding-end="0.3em" padding-start="0.3em" text-align="start"><fo:block text-align="start">Orber invoked the operation on the target object but an error occurred and it is impossible to decide if the request really reached the object or not.</fo:block></fo:table-cell>
        </fo:table-row></fo:table-body></fo:table><fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Table
        10.1:
         
        System Exceptions Status</fo:block>
    

    <fo:block id="idp3194272" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Minor Field</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The minor field contains an integer (VMCID), which is related to a more
        specific reason why an invocation failed. The function 
        <fo:inline font-family="monospace">orber:exception_info/1</fo:inline> can be used to map the minor code to a string. 
        Note, for VMCID:s not assigned by the OMG or Orber, the documentation
        for that particular ORB must be consulted.</fo:block>
    

    <fo:block id="idp3196352" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Supported System Exceptions</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The OMG CORBA specification defines the following exceptions:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'BAD_CONTEXT'</fo:inline> - if a request does not contain a correct
         context this exception is raised.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'BAD_INV_ORDER'</fo:inline> - this exception indicates that operations
         has been invoked operations in the wrong order, which would cause,
         for example, a dead-lock.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'BAD_OPERATION'</fo:inline> - raised if the target object exists, but
         that the invoked operation is not supported.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'BAD_PARAM'</fo:inline> - is thrown if, for example, a parameter is out
         of range or otherwise considered illegal.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'BAD_TYPECODE'</fo:inline> - if illegal type code is passed, for example,
         encapsulated in an any data type the <fo:inline font-family="monospace">'BAD_TYPECODE'</fo:inline> exception
         will be raised.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'BAD_QOS'</fo:inline> - raised whenever an object cannot support the 
         required quality of service.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'CODESET_INCOMPATIBLE'</fo:inline> - raised if two ORB's cannot 
         communicate due to different representation of, for example, 
        <fo:inline font-family="monospace">char</fo:inline> and/or <fo:inline font-family="monospace">wchar</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'COMM_FAILURE'</fo:inline> - raised if an ORB is unable to setup 
         communication or it is lost while an operation is in progress.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'DATA_CONVERSION'</fo:inline> - raised if an ORB cannot convert data 
         received to the native representation. See also the 
        <fo:inline font-family="monospace">'CODESET_INCOMPATIBLE'</fo:inline> exception.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'FREE_MEM'</fo:inline> - the ORB failed to free dynamic memory and 
         failed.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'IMP_LIMIT'</fo:inline> - an implementation limit was exceeded in the
         ORB at run time. A object factory may, for example, limit the
         number of object clients are allowed to create.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INTERNAL'</fo:inline> - an internal failure occurred in an ORB, which
         is unrecognized. You may consider contacting the ORB providers 
         support.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INTF_REPOS'</fo:inline> - the ORB was not able to reach the interface
         repository, or some other failure relating to the interface 
         repository is detected.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INITIALIZE'</fo:inline> - the ORB initialization failed due to, for
         example, network or configuration error.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INVALID_TRANSACTION'</fo:inline> - is raised if the request carried an
         invalid transaction context.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INV_FLAG'</fo:inline> - an invalid flag was passed to an operation, 
         which caused, for example, a connection to be closed.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INV_IDENT'</fo:inline> - this exception indicates that an IDL 
         identifier is incorrect.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INV_OBJREF'</fo:inline> - this exception is raised if an object 
         reference is malformed or a nil reference (see 
         also corba:create_nil_objref/0).</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'INV_POLICY'</fo:inline> - the invocation cannot be made due to an
         incompatibility between policy overrides that apply to the
         particular invocation.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'MARSHAL'</fo:inline> - this exception may be raised by the client- or
         server-side when either ORB is unable to marshal/unmarshal requests or
         replies.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'NO_IMPLEMENT'</fo:inline> - if the operation exists but no implementation
         exists, this exception is raised.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'NO_MEMORY'</fo:inline> - the ORB has run out of memory.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'NO_PERMISSION'</fo:inline> - the caller has insufficient privileges, 
         such as, for example, bad <fo:inline font-family="monospace">SSL</fo:inline> certificate.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'NO_RESOURCES'</fo:inline> - a general platform resource limit 
         exceeded.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'NO_RESPONSE'</fo:inline> - no response available of a deferred
         synchronous request.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'OBJ_ADAPTER'</fo:inline> - indicates administrative mismatch; the object
         adapter is not able to associate an object with the implementation
         repository.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'OBJECT_NOT_EXIST'</fo:inline> - the object have been disposed or 
         terminated; clients should remove all copies of the object reference
         and initiate desired recovery process.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'PERSIST_STORE'</fo:inline> - the ORB was not able to establish a
         connection to its persistent storage or data contained in the
         the storage is corrupted.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'REBIND'</fo:inline> - a request resulted in, for example, a 
        <fo:inline font-family="monospace">'LOCATION_FORWARD'</fo:inline> message; if the policies are incompatible 
         this exception is raised.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'TIMEOUT'</fo:inline> - raised if a request fail to complete within the 
         given time-limit.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'TRANSACTION_MODE'</fo:inline> - a transaction policy mismatch detected.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'TRANSACTION_REQUIRED'</fo:inline> - a transaction is required for the
         invoked operation but the request contained no transaction context.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'TRANSACTION_ROLLEDBACK'</fo:inline> - the transaction associated with
         the request has already been rolled back or will be.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'TRANSACTION_UNAVAILABLE'</fo:inline> - no transaction context can be
         supplied since the ORB is unable to contact the Transaction
         Service.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'TRANSIENT'</fo:inline> - the ORB could not determine the current status
         of an object since it could not be reached. The error may be
         temporary.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'UNKNOWN'</fo:inline> - is thrown if an implementation throws a 
         non-CORBA, or unrecognized, exception.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    
  <fo:block id="idp3231152" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.10.2 
      User Defined Exceptions</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">User exceptions is defined in IDL-files and is listed in operations raises
      exception listing. For example, if we have the following IDL code:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
module MyModule {

  exception MyException {};
  exception MyExceptionMsg { string ExtraInfo; };

  interface MyInterface {

    void foo() 
      raises(MyException);

    void bar() 
      raises(MyException, MyExceptionMsg);

    void baz();
  };
};    
    </fo:block>
  <fo:block id="idp3233584" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.10.3 
      Throwing Exceptions</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To be able to raise <fo:inline font-family="monospace">MyException</fo:inline> or <fo:inline font-family="monospace">MyExceptionMsg</fo:inline> exceptions, 
      the generated <fo:inline font-family="monospace">MyModule.hrl</fo:inline> must be included, and typical usage is:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-module('MyModule_MyInterface_impl').
-include("MyModule.hrl").

bar(State) -&gt;
    case TestingSomething of
        ok -&gt;
           {reply, ok, State};
        {error, Reason} when list(Reason) -&gt;
           corba:raise(#'MyModule_MyExceptionMsg'{'ExtraInfo' = Reason});
        error -&gt;
           corba:raise(#'MyModule_MyException'{})
    end.
    </fo:block>
  <fo:block id="idp3237376" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.10.4 
      Catching Exceptions</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Depending on which operation we invoke we must be able to handle:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>foo - <fo:inline font-family="monospace">MyException</fo:inline> or a system exception.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>bar - <fo:inline font-family="monospace">MyException</fo:inline>, <fo:inline font-family="monospace">MyExceptionMsg</fo:inline> or a system
       exception.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>baz - a system exception.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Catching and matching exceptions can bee done in different ways:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
    case catch 'MyModule_MyInterface':bar(MIReference) of
        ok -&gt;
           %% The operation raised no exception.
           ok;
        {'EXCEPTION', #'MyModule_MyExceptionMsg'{'ExtraInfo' = Reason}} -&gt;
           %% If we want to log the Reason we must extract 'ExtraInfo'.
           error_logger:error_msg("Operation 'bar' raised: ~p~n", [Reason]),
           ... do something ...;
        {'EXCEPTION', E} when record(E, 'OBJECT_NOT_EXIST') -&gt;
           ... do something ...;
        {'EXCEPTION', E} -&gt;
           ... do something ...
    end.
    </fo:block>
  <fo:block id="idp3247888" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.11  Orber Interceptors</fo:marker>1.11  Orber Interceptors</fo:block><fo:block id="idp3250704" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.11.1 
      Using Interceptors</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For Inter-ORB communication, e.g., via <fo:inline font-family="monospace">IIOP</fo:inline>, it is possible
      to intercept requests and replies. To be able to use <fo:inline font-family="monospace">Interceptors</fo:inline>
      Orber the configuration parameter <fo:inline font-family="monospace">interceptors</fo:inline> must be defined.</fo:block>

    <fo:block id="idp3253344" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Configure Orber to Use Interceptors</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The configuration parameter <fo:inline font-family="monospace">interceptors</fo:inline> must be defined, e.g.,
        as command line option:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
erl -orber interceptors "{native, ['myInterceptor']}"
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is possible to use more than one interceptor; simply add them to the
        list and they will be invoked in the same order as they appear in the list.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">One can also active and deactivate an interceptor during
        run-time, but this will only affect currently existing connections. 
        For more information, consult Orber's Reference Manual regarding the
        operations <fo:inline font-family="monospace">orber:activate_audit_trail/0/1</fo:inline> and
        <fo:inline font-family="monospace">orber:activate_audit_trail/0/1.</fo:inline></fo:block>
    

    <fo:block id="idp3257984" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Creating Interceptors</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Each supplied interceptor <fo:inline font-weight="bold">must</fo:inline> export the following functions:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">new_out_connection/3/5</fo:inline> - one of these operations is called when
         a client application calls an object residing on remote ORB.
         If an interceptor exports both versions, arity 3 and 5, which
         operation that will be invoked is Orber internal.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">new_in_connection/3/5</fo:inline> - one of these operations is invoked
         when a client side ORB tries to set up a connection to the target ORB.
         If an interceptor exports both versions, arity 3 and 5, which
         operation that will be invoked is Orber internal.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">out_request/6</fo:inline> - supplies all request data on the client side
         ORB.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">out_request_encoded/6</fo:inline> - similar to <fo:inline font-family="monospace">out_request</fo:inline>
         but the request body is encode.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">in_request_encoded/6</fo:inline> - after a new request arrives at the
         target ORB the request data is passed to the interceptor in
         encoded format.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">in_request/6</fo:inline> - prior to invoking the operation on the
         target object, the interceptor <fo:inline font-family="monospace">in_request</fo:inline> is called.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">out_reply/6</fo:inline> - after the target object replied the
        <fo:inline font-family="monospace">out_reply</fo:inline> operation is called with the result of the object
         invocation.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">out_reply_encoded/6</fo:inline> - before sending a reply back to the
         client side ORB this operation is called with the result in 
         encoded format.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">in_reply_encoded/6</fo:inline> - after the client side ORB receives
         a reply this function is called with the reply in encoded 
         format.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">in_reply/6</fo:inline> - before delivering the reply to the client
         this operation is invoked.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">closed_in_connection/1</fo:inline> - when a connection is terminated
         on the client side this function is called.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">closed_out_connection/1</fo:inline> - if an outgoing connection is
         terminated this operation will be invoked.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The operations <fo:inline font-family="monospace">new_out_connection</fo:inline>, <fo:inline font-family="monospace">new_in_connection</fo:inline>, 
        <fo:inline font-family="monospace">closed_in_connection</fo:inline> and <fo:inline font-family="monospace">closed_out_connection</fo:inline> operations
        are only invoked <fo:inline font-weight="bold">once</fo:inline> per connection. The remaining operations
        are called, as shown below, for every Request/Reply to/from remote
        CORBA Objects.</fo:block>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="interceptor_operations.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        11.1:
         
        
The Invocation Order of Interceptor Functions.</fo:block>
      </fo:block>
    
  <fo:block id="idp3276672" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.11.2 
      Interceptor Example</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Assume we want to create a simple access service which purpose is to:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Only allow incoming request from ORB's residing on a certain set of
       nodes.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Restrict the objects any client may invoke operations on.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Only allow outgoing requests to call a limited set of external
       ORB's.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Add a checksum to each binary request/reply body.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To restricts the access we use a <fo:inline font-family="monospace">protected</fo:inline> and <fo:inline font-family="monospace">named</fo:inline> ets-table
      holding all information. How the ets-table is initiated and maintained
      is implementation specific, but it contain 
      <fo:inline font-family="monospace">{Node, ObjectTable, ChecksumModule}</fo:inline> where <fo:inline font-family="monospace">Node</fo:inline> is used as 
      ets-key, <fo:inline font-family="monospace">ObjectTable</fo:inline> is a reference to another ets-table in which
      we store which objects the clients are allowed to invoke operations on
      and <fo:inline font-family="monospace">ChecksumModule</fo:inline> determines which module we should use to handle
      the checksums. </fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
new_in_connection(Arg, Host, Port) -&gt;
    %% Since we only use one interceptor we do not care about the
    %% input Arg since it is set do undefined by Orber.
    case ets:lookup(in_access_table, Host) of
         [] -&gt;
            %% We may want to log the Host/Port to see if someone tried
            %% to hack in to our system.
            exit("Access not granted");
         [{Host, ObjTable, ChecksumModule}] -&gt;
            {ObjTable, ChecksumModule}
    end.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The returned tuple, i.e., {ObjTable, ChecksumModule}, will be passed
      as the first argument whenever invoking one of the interceptor functions.
      Unless the connection attempt did not fail we are now ready for receiving
      requests from the client side ORB.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a new request comes in the first interceptor function to be invoked is
      <fo:inline font-family="monospace">in_request_encoded</fo:inline>. We will remove the checksum from the coded
      request body in the following way:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
in_request_encoded({ObjTable, ChecksumModule}, ObjKey, Ctx, Op, Bin, Extra) -&gt;
    NewBin = ChecksumModule:remove_checksum(Bin),
    {NewBin, Extra}.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the checksum check fails the <fo:inline font-family="monospace">ChecksumModule</fo:inline> should invoke exit/1.
      But if the check succeeded we are now ready to check if the client-ORB 
      objects are allowed to invoke operations on the target object. Please note,
      it is possible to run both checks in <fo:inline font-family="monospace">in_request_encoded</fo:inline>. Please
      note, the checksum calculation must be relatively fast to ensure a
      good throughput.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If we want to we can restrict any clients to only use a subset of operations
      exported by a server:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
in_request({ObjTable, ChecksumModule}, ObjKey, Ctx, Op, Params, Extra) -&gt;
    case ets:lookup(ObjTable, {ObjKey, Op}) of
         [] -&gt;
            exit("Client tried to invoke illegal operation");
         [SomeData] -&gt;
            {Params, Extra}
    end.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">At this point Orber are now ready to invoke the operation on the target 
      object. Since we do not care about what the reply is the <fo:inline font-family="monospace">out_reply</fo:inline>
      function do nothing, i.e.:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
out_reply(_, _, _, _, Reply, Extra) -&gt;
    {Reply, Extra}.
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the client side ORB expects a checksum to be added to the reply we
      add it by using:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
out_reply_encoded({ObjTable, ChecksumModule}, ObjKey, Ctx, Op, Bin, Extra) -&gt;
    NewBin = ChecksumModule:add_checksum(Bin),
    {NewBin, Extra}.
    </fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If we manipulate the binary as above the behavior <fo:inline font-weight="bold">must</fo:inline>
        be <fo:inline font-family="monospace">Bin == remove_checksum(add_checksum(Bin))</fo:inline>.</fo:block>
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For outgoing requests the principle is the same. Hence, it is not further
      described here. The complete interceptor module would look like:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">

-module(myInterceptor).

%% Interceptor functions.
-export([new_out_connection/3,
     new_in_connection/3,
     closed_in_connection/1,
     closed_out_connection/1,
     in_request_encoded/6,
     in_reply_encoded/6,
     out_reply_encoded/6,
     out_request_encoded/6,
     in_request/6,
     in_reply/6,
     out_reply/6,
     out_request/6]).

new_in_connection(Arg, Host, Port) -&gt;
    %% Since we only use one interceptor we do not care about the
    %% input Arg since it is set do undefined by Orber.
    case ets:lookup(in_access_table, Host) of
         [] -&gt;
            %% We may want to log the Host/Port to see if someone tried
            %% to hack in to our system.
            exit("Access not granted");
         [{Host, ObjTable, ChecksumModule}] -&gt;
            {ObjTable, ChecksumModule}
    end.

new_out_connection(Arg, Host, Port) -&gt;
    case ets:lookup(out_access_table, Host) of
         [] -&gt;
            exit("Access not granted");
         [{Host, ObjTable, ChecksumModule}] -&gt;
            {ObjTable, ChecksumModule}
    end.

in_request_encoded({_, ChecksumModule}, ObjKey, Ctx, Op, Bin, Extra) -&gt;
    NewBin = ChecksumModule:remove_checksum(Bin),
    {NewBin, Extra}.

in_request({ObjTable, _}, ObjKey, Ctx, Op, Params, Extra) -&gt;
    case ets:lookup(ObjTable, {ObjKey, Op}) of
         [] -&gt;
            exit("Client tried to invoke illegal operation");
         [SomeData] -&gt;
            {Params, Extra}
    end.

out_reply(_, _, _, _, Reply, Extra) -&gt;
    {Reply, Extra}.

out_reply_encoded({_, ChecksumModule}, ObjKey, Ctx, Op, Bin, Extra) -&gt;
    NewBin = ChecksumModule:add_checksum(Bin),
    {NewBin, Extra}.

out_request({ObjTable, _}, ObjKey, Ctx, Op, Params, Extra) -&gt;
    case ets:lookup(ObjTable, {ObjKey, Op}) of
         [] -&gt;
            exit("Client tried to invoke illegal operation");
         [SomeData] -&gt;
            {Params, Extra}
    end.

out_request_encoded({_, ChecksumModule}, ObjKey, Ctx, Op, Bin, Extra) -&gt;
    NewBin = ChecksumModule:add_checksum(Bin),
    {NewBin, Extra}.

in_reply_encoded({_, ChecksumModule}, ObjKey, Ctx, Op, Bin, Extra) -&gt;
    NewBin = ChecksumModule:remove_checksum(Bin),
    {NewBin, Extra}.

in_reply(_, _, _, _, Reply, Extra) -&gt;
    {Reply, Extra}.

closed_in_connection(Arg) -&gt;
    %% Nothing to clean up.
    Arg.

closed_out_connection(Arg) -&gt;
    %% Nothing to clean up.
    Arg.
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">One can also use interceptors for debugging purposes, e.g.,
        print which objects and operations are invoked with which arguments
        and the outcome of the operation. In conjunction with the configuration
        parameter <fo:inline font-family="monospace">orber_debug_level</fo:inline> it is rather easy to find out what
        went wrong or just to log the traffic.  </fo:block>
    </fo:block>
  <fo:block id="idp3305456" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.12  OrberWeb</fo:marker>1.12  OrberWeb</fo:block><fo:block id="idp3308272" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.12.1 
      Using OrberWeb</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">OrberWeb</fo:inline> is intended to make things easier when developing and 
      testing applications using <fo:inline font-family="monospace">Orber</fo:inline>. The user is able to interact
      with <fo:inline font-family="monospace">Orber</fo:inline> via a GUI by using a web browser.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">OrberWeb</fo:inline> requires that the application <fo:inline font-family="monospace">WebTool</fo:inline> is available and
      started on at least one node; if so <fo:inline font-family="monospace">OrberWeb</fo:inline> can usually be used to
      to access <fo:inline font-family="monospace">Orber</fo:inline> nodes supporting the Interoperable Naming 
      Service. How to start OrberWeb is described in
      <fo:inline font-style="italic">Starting OrberWeb</fo:inline></fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">OrberWeb</fo:inline> GUI consists of a <fo:inline font-weight="bold">Menu Frame</fo:inline> and a 
      <fo:inline font-weight="bold">Data Frames</fo:inline>.</fo:block>

    <fo:block id="idp3315392" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">The Menu Frame</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The menu frame consists of:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Node List</fo:inline> - which node to access.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Configuration</fo:inline> - see how Orber on the current node is configured.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Name Service</fo:inline> - browse the NameService and add/remove a Context/Object.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">IFR Types</fo:inline> - see which types are registered in IFR.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Create Object</fo:inline> - create a new object and, possibly, store it in the NameService.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="menuframe.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.1:
         
        The Menu Frame.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Which nodes we can access is determined by what is returned when invoking <fo:inline font-family="monospace">[node()|nodes()]</fo:inline>.
        If you cannot see a desired node in the list, you have to call <fo:inline font-family="monospace">net_adm:ping(Node)</fo:inline>.
        But this requires that the node is started with the distribution switched on
        (e.g. <fo:inline font-family="monospace">erl -sname myNode</fo:inline>); this also goes for the node <fo:inline font-family="monospace">OrberWeb</fo:inline> is running on.</fo:block>
    

    <fo:block id="idp3325808" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">The Configuration Data Frame</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When accessing the <fo:inline font-weight="bold">Configuration</fo:inline> page OrberWeb presents a table containing the
        <fo:inline font-style="italic">configuration settings</fo:inline> for the target node.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe3.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.2:
         
        Configuration Settings.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is also possible to change those configuration parameters which can be changed when Orber
        is already started. The Key-Value pairs is given as a list of tuples, e.g.,
        <fo:inline font-weight="bold">[{orber_debug_level, 5}, {iiop_timeout, 60}, {giop_version, {1,2}}]</fo:inline>. If one tries to update a parameter
        which may not be changed an error message will be displayed.</fo:block>
    

    <fo:block id="idp3331600" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">The IFR Data Frame</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All types registered in the IFR (Interface Repository) which have an associated IFR-id
        can be viewed via the IFR Data Frame. This gives the user an easy way to confirm that
        all necessary IDL-specifications have been properly registered. All available types are
        listed when choosing <fo:inline font-family="monospace">IFR Types</fo:inline> in the menu frame:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe1.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.3:
         
        Select Type.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After selecting a type all definitions of that particular type will be displayed. If no such
        bindings exists the table will be empty.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since Orber adds definitions to the IFR when it is installed (e.g. CosNaming), not only
        types defined by the user will show up in the table. In the figure below you find the
        the NameService exceptions listed.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe2.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.4:
         
        List Registered Exceptions.</fo:block>
      </fo:block>
    

    <fo:block id="idp3338960" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">The NameService Data Frame</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The NameService main purpose is to make possible to bind object references, which
        can client applications can resolve and invoke operations on. Initially, the NameService
        is empty. The most common scenario, is that user applications create Contexts and add objects
        in the NameService. OrberWeb allows the user to do the very same thing.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When referencing an object or context you must use stringified NameComponents.
        For more information see the <fo:inline font-style="italic">Interoperable Naming Service</fo:inline>.
        In the following example we will use the string <fo:inline font-weight="bold">org/erlang/TheObjectName</fo:inline>, where
        <fo:inline font-weight="bold">org</fo:inline> and <fo:inline font-weight="bold">erlang</fo:inline> will be contexts and <fo:inline font-weight="bold">TheObjectName</fo:inline>
        the name the object will be bound to.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since the NameService is empty in the beginning, the only thing we can do is creating
        a new context. Simply write <fo:inline font-weight="bold">org</fo:inline> in the input field and press <fo:inline font-family="monospace">New Context</fo:inline>.
        If OrberWeb was able to create the context or not, is shown in the completion message. 
        If successful, just press the <fo:inline font-family="monospace">Go Back</fo:inline> button. Now, a link named <fo:inline font-weight="bold">org</fo:inline> should
        be listed in the table. In the right column the context type is displayed. Contexts are
        associated with <fo:inline font-weight="bold">ncontext</fo:inline> and objects with <fo:inline font-weight="bold">nobject</fo:inline>.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe5.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.5:
         
        Add a New Context.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To create the next level context (i.e. erlang), simply follow the link and repeat the procedure.
        If done correctly, a table containing the same data as the following figure should be the result 
        if you follow the <fo:inline font-weight="bold">erlang</fo:inline> link. Note, that the path is displayed in the yellow
        field.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a context does not contain any sub-contexts or object bindings, it is possible to
        delete the context. If these requirements are met, a <fo:inline font-family="monospace">Delete Context</fo:inline> button will appear.
        A completion status message will be displayed after deleting the context.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe6.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.6:
         
        Delete Context.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Now it is possible to bind an object using the complete name string. To find out how this is
        done using OrberWeb see <fo:inline font-style="italic">Object Creation</fo:inline>.
        For now, we will just assume that an object have been created and bound as <fo:inline font-weight="bold">TheObjectName</fo:inline>. </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe7.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.7:
         
        Object Stored in the NameService.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you follow the <fo:inline font-weight="bold">TheObjectName</fo:inline> link, data about the bound object will be
        presented. Note, depending on which type of object it is, the information given differs.
        It would, for example, not be possible to display a Pid for all types of objects since
        it might reside on a Java-ORB. In the figure below a CosNotification FilterFactory have
        been bound under the name <fo:inline font-weight="bold">org/erlang/TheObjectName</fo:inline>.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe8.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.8:
         
        Object Data.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">OrberWeb also makes it possible to remove a binding and dispose the associated object.
        Pressing <fo:inline font-weight="bold">Unbind</fo:inline> the binding will be removed but the object will still exist. 
        But, if the <fo:inline font-weight="bold">Unbind and Dispose</fo:inline> button is pressed, the binding will be removed
        and the object terminated.</fo:block>
    

    <fo:block id="idp3363056" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">The Object Creation Data Frame</fo:block>
      
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This part makes it possible to create a new object and, if wanted, store it the
        NameService.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
      
      <fo:block space-after="0.5em" space-before="0.5em"><fo:external-graphic content-width="scale-down-to-fit" inline-progression-dimension.maximum="100%" src="dataframe4.gif"/>
        <fo:block font-family="DejaVuSans, sans-serif" font-size="0.8em" font-weight="bold" keep-with-previous.within-page="always" space-after="2.5em" space-before="0em">
        Figure
        12.9:
         
        Create a New Object.</fo:block>
      </fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Module</fo:inline> - simply type the name of the module of the object type
         you want to create. If the module begins with a capital letter, we normally must
         write <fo:inline font-family="monospace">'Module_Interface'</fo:inline>. But, when using OrberWeb, you shall <fo:inline font-weight="bold">NOT</fo:inline>.
         Since we cannot create linked objects this is not an option.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Arguments</fo:inline> - the supplied arguments must be written as a single Erlang term.
         That is, as a list or tuple containing other Erlang terms. The arguments will be 
         passed to the <fo:inline font-family="monospace">init</fo:inline> function of the object. It is, however, not possible
         to use Erlang records. If OrberWeb is not able to parse the arguments, an error message
         will be displayed. If left empty, an empty list will be passed.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Options</fo:inline> - the options can be the ones listed under 
        <fo:inline font-style="italic">Module_Interface</fo:inline> in Orber's Reference manual.
         Hence, they are not further described here. But, as an example, in the figure above
         we started the object as globally registered. If no options supplied the object
         will be started as default.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Name String</fo:inline> - if left empty the object will <fo:inline font-weight="bold">not</fo:inline> be registered in the 
         NameService. Hence, it is important that you can access the object in another way,
         otherwise a zombie process is created. In the previous section we used the name string
        <fo:inline font-weight="bold">org/erlang/TheObjectName</fo:inline>. If we choose the same name here, the listed contexts
         (i.e. <fo:inline font-weight="bold">org</fo:inline> and <fo:inline font-weight="bold">erlang</fo:inline>) must be created <fo:inline font-weight="bold">before</fo:inline> we can create
         and bind the object to <fo:inline font-weight="bold">TheObjectName</fo:inline>. If this requirement is not met, OrberWeb
         cannot bind the object. Hence, the object will be terminated and an error message
         displayed.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Operation to use</fo:inline> - which option choosed will determine the behavior of OrberWeb.
         If you choose <fo:inline font-weight="bold">bind</fo:inline> and a binding already exists an error message will be 
         displayed and the newly started object terminated. But if you choose <fo:inline font-weight="bold">rebind</fo:inline>
         any existing binding will over-written.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
    
  <fo:block id="idp3378816" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.12.2 
      Starting OrberWeb</fo:block>
    
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">You may choose to start OrberWeb on node, on which Orber is running or not. But
      the Erlang distribution must be started (e.g. by using -sname aNodeName). Now, all 
      you have to do is to invoke:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
    
erl&gt; webtool:start().
WebTool is available at http://localhost:8888/
Or  http://127.0.0.1:8888/
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Type one of the URL:s in your web-browser. If you want to access the WebTool application
      from different machine, just replace <fo:inline font-family="monospace">localhost</fo:inline> with its name. For more information,
      see the WebTool documentation.</fo:block>
  <fo:block id="idp3386720" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">1.13  Debugging</fo:marker>1.13  Debugging</fo:block><fo:block id="idp3389376" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">1.13.1 
      Tools and FAQ</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Persons who use Orber for the first time may find it hard to tell what goes
      wrong when trying to setup communication between an Orber-ORB and ORB:s supplied
      by another vendor or another Orber-ORB. The purpose of this chapter is to inform
      about the most common mistakes and what tools one can use to overcome these 
      problems. </fo:block>

    <fo:block id="idp3390896" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">Tools</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To begin with, Orber can be configured to run in debug mode. There are four ways
        to set this parameter:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">erl -orber orber_debug_level 10</fo:inline> - can be added to a start-script.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">corba:orb_init([{orber_debug_level, 10}])</fo:inline> - this operation must
         be invoked <fo:inline font-weight="bold">before</fo:inline> starting Orber.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">orber:configure(orber_debug_level, 10)</fo:inline> - this operation can
         be invoked at any time.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">OrberWeb</fo:inline> - via the <fo:inline font-family="monospace">Configuration</fo:inline> menu one can easily change
         the configuration. For more information, see the OrberWeb chapter in this
         User's Guide.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When Orber runs i debug mode, printouts will be generated if anything abnormal occurs
        (not necessarily an error). An error message typically looks like:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
=ERROR REPORT==== 29-Nov-2001::14:09:55 ===
=================== Orber =================
[410] corba:common_create(orber_test_server, [{pseudo,truce}]); 
not a boolean(truce).
===========================================
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In the example above, we tried to create an object with an incorrect option (i.e. should
        have been <fo:inline font-family="monospace">{pseudo,true}</fo:inline>).</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you are not able to solve the problem, you should include all generated reports when
        contacting support or using the erlang-questions mailing list.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is easy to forget to, for example, set all fields in a struct, which
        one may not discover when developing an application using Orber. When using
        a typed language, such faults would cause a compile time error. To avoid
        these mistakes, Orber allows the user to activate automatic typechecking
        of all local invocations of CORBA Objects. For this feature to be really
        useful, the user must create test suites which cover as much as 
        possible. For example, invoking an operation with invalid or incorrect
        arguments should also be tested. This option can be activated for one object
        or all object via:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">'MyModuyle_MyInterface':oe_create(Env, [{local_typecheck, true}])</fo:inline> - 
         This approach will only activate, or deactivate, typechecking for
         the returned instance. Naturally, this option can also be passed
         to <fo:inline font-family="monospace">oe_create_link/2</fo:inline>, <fo:inline font-family="monospace">corba:create/4</fo:inline> and 
        <fo:inline font-family="monospace">corba:create_link/4</fo:inline>.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">erl -orber flags 2</fo:inline> - can be added to a start-script.
         All object invocations will be typechecked, unless overridden by the
         previous option.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">corba:orb_init([{flags, 16#0002}])</fo:inline> - this operation must
         be invoked <fo:inline font-weight="bold">before</fo:inline> starting Orber. Behaves as the previous
         option.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If incorrect data is passed or returned, Orber uses the <fo:inline font-family="monospace">error_logger</fo:inline>
        to generate logs, which can look like:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
=ERROR REPORT==== 10-Jul-2002::12:36:09 ===
========= Orber Typecheck Request =========
Invoked......: MyModule_MyInterface:foo/1
Typecode.....: [{tk_enum,"IDL:MyModule/enumerant:1.0",
                         "enumerant",
                         ["one","two"]}]
Arguments....: [three]
Result.......: {'EXCEPTION',{'MARSHAL',[],102,'COMPLETED_NO'}}
===========================================
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note, that the arity is equivalent to the IDL-file. In the example above,
        an undefined enumerant was used. In most cases, it is useful to set the
        configuration parameter <fo:inline font-family="monospace">orber_debug_level 10</fo:inline> as well. Due to the
        extra overhead, this option <fo:inline font-weight="bold">MAY ONLY</fo:inline> be used during testing and
        development.
        For more information, see also
        <fo:inline font-style="italic">configuration settings</fo:inline>.</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is also possible to trace all communication between an Orber-ORB and, for example,
        a Java-ORB, communicating via IIOP. All you need to do is to activate an 
        <fo:inline font-style="italic">interceptor</fo:inline>. Normally, the users must
        implement the interceptor themselves, but for your convenience Orber includes three
        pre-compiled interceptors called <fo:inline font-family="monospace">orber_iiop_tracer</fo:inline>,
        <fo:inline font-family="monospace">orber_iiop_tracer_silent</fo:inline> and <fo:inline font-family="monospace">orber_iiop_tracer_stealth</fo:inline>.</fo:block>
      <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Logging all traffic is <fo:inline font-weight="bold">expensive</fo:inline>. Hence, only use the supplied 
          interceptors during test and development.</fo:block>
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">orber_iiop_tracer</fo:inline> and <fo:inline font-family="monospace">orber_iiop_tracer_silent</fo:inline> interceptors
        uses the <fo:inline font-family="monospace">error_logger</fo:inline> module to generate the logs. If the traffic 
        is intense you probably want to write the reports to a log-file. 
        This is done by, for example, invoking:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
erl&gt; error_logger:tty(false). 
erl&gt; error_logger:logfile({open, "/tmp/IIOPTrace"}). 
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">IIOPTrace</fo:inline> file will contain, if you use the <fo:inline font-family="monospace">orber_iiop_tracer</fo:inline> 
        interceptor, reports which looks like:</fo:block>
      <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
=INFO REPORT==== 13-Jul-2005::18:22:39 ===
=============== new_out_connection =======
Node      : myNode@myHost
From      : 192.0.0.10:47987
To        : 192.0.0.20:4001
==========================================

=INFO REPORT==== 29-Nov-2001::15:26:28 ===
=============== out_request ==============
Connection: {"192.0.0.20",4001,"192.0.0.10",47987}
Operation : resolve
Parameters: [[{'CosNaming_NameComponent',
                "AIK","SwedishIcehockeyChampions"}]]
Context   : [{'IOP_ServiceContext',1,
               {'CONV_FRAME_CodeSetContext',65537,65801}}]
==========================================
      </fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">orber_iiop_tracer_silent</fo:inline> will not log GIOP encoded data. To activate
        one the interceptors, you have two options:</fo:block>
      <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">erl -orber interceptors "{native,[orber_iiop_tracer]}"</fo:inline> - can be added to a start-script.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">corba:orb_init([{interceptors, {native, [orber_iiop_tracer_silent]}}])</fo:inline> - this operation must
         be invoked <fo:inline font-weight="bold">before</fo:inline> starting Orber.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is also possible to active and deactivate an interceptor during
        run-time, but this will only affect currently existing connections. 
        For more information, consult Orber's Reference Manual regarding the
        operations <fo:inline font-family="monospace">orber:activate_audit_trail/0/1</fo:inline> and
        <fo:inline font-family="monospace">orber:activate_audit_trail/0/1.</fo:inline></fo:block>
    

    <fo:block id="idp3425856" font-family="DejaVuSans, sans-serif" font-size="1.17em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.6em">FAQ</fo:block>
      
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Q: When my client, typically written in C++ or Java, invoke narrow on an Orber  object reference it fails?</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: You must register your application in the IFR by invoking <fo:inline font-family="monospace">oe_register()</fo:inline>. 
        If the object was created by a COS-application, you must run install 
        (e.g. <fo:inline font-family="monospace">cosEventApp:install()</fo:inline>).</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: Confirm, by consulting the IDL specifications, that the received object reference really
        inherit from the interface you are trying to narrow it to.</fo:block>
      <fo:block/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Q: I am trying to register my application in the IFR but it fails. Why?</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: If one, or more, interface in your IDL-specification inherits from
        other interface(s), you must register them before registering your
        application. Note, this also apply when you inherit interfaces
        supported by a COS-application. Hence, they must be installed prior to
        registration of your application.</fo:block>
      <fo:block/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Q: I have a Orber client and server residing on two different Orber instances but I only get the 'OBJECT_NOT_EXIST' exception, even though I am sure that the object is still alive?</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: If the two Orber-ORB's are not intended to be a part of multi-node ORB, make sure that the
        two Orber-ORB's have different <fo:inline font-weight="bold">domain</fo:inline> names set (see
        <fo:inline font-style="italic">configuration settings</fo:inline>). The easiest way
        to confirm this is to invoke <fo:inline font-family="monospace">orber:info()</fo:inline> on each node.</fo:block>
      <fo:block/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Q: When I'm trying to install and/or start Orber it fails?</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: Make sure that no other Orber-ORB is already running on the same node. If so,
        change the <fo:inline font-family="monospace">iiop_port</fo:inline> configuration parameter (see
        <fo:inline font-style="italic">configuration settings</fo:inline>).</fo:block>
      <fo:block/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Q: My Orber server is invoked via IIOP but Orber cannot marshal the  reply?</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: Consult your IDL file to confirm that your replies are of the correct
        type. If it is correct and the return type is, for example,
        a struct, make sure you have set every field in the struct. If
        you do not do that it will be set to the atom 'undefined', which
        most certainly is not correct.</fo:block>
      <fo:block/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: Check that you handle <fo:inline font-family="monospace">inout</fo:inline> and <fo:inline font-family="monospace">out</fo:inline> parameters correctly
        (see the IDL specification). For example, a function which have one
        out-parameter and should return void, then your call-back module
        should return <fo:inline font-family="monospace">{reply, {ok, OutParam}, State}</fo:inline>. Note, even though
        the return value is void (IDL) you must reply with ok.</fo:block>
      <fo:block/>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Q: I cannot run Orber as a multi-node ORB?</fo:inline></fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A: Make sure that the Erlang distribution have been started for each
        node and the <fo:inline font-family="monospace">cookies</fo:inline> are correct. For more information,
        consult the <fo:inline font-family="monospace">System Documentation</fo:inline></fo:block>
      <fo:block/>
    
  <fo:block id="idp531712" border-after-style="solid" border-after-width="1pt" border-color="#960003" break-before="page" font-family="DejaVuSans, sans-serif" font-size="1.83em" font-weight="normal" space-after="1em" space-before="2em" space-before.conditionality="retain">2   
      Reference Manual</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">Orber</fo:inline> application is an Erlang implementation of a
      CORBA Object Request Broker.</fo:block>
  <fo:block page-break-before="always" id="idp576000" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">any</fo:marker>any</fo:block>Erlang module</fo:block>
  <fo:block/>
  any
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions that gives an interface to the CORBA any type.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note that the <fo:inline font-family="monospace">any</fo:inline> interface in orber does not contain a destroy 
      function because the any type is represented as an Erlang record and 
      therefor will be removed by the garbage collector when not in use.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">TC</fo:inline> used below describes an IDL type and is a tuple according 
      to the to the Erlang language mapping.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">Any</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record(any, {typecode, value}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">where <fo:inline font-family="monospace">typecode</fo:inline> is a TC tuple and <fo:inline font-family="monospace">value</fo:inline> is an Erlang term of 
      the type defined by the typecode field.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp311376">create() -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1008016">create(Typecode, Value) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Typecode = TC</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Any</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The create/0 function creates an empty any record and the create/2 
          function creates an initialized record.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1286656">set_typecode(A, Typecode) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">A = Any</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Typecode = TC</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Any</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function sets the typecode of <fo:inline font-weight="bold">A</fo:inline> and returns a 
          new any record.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp744528">get_typecode(A) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">A = Any</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = TC</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the typecode of <fo:inline font-weight="bold">A</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp673696">set_value(A, Value) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">A = Any</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Any</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function sets the value of <fo:inline font-weight="bold">A</fo:inline> and returns a 
          new any record.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp413664">get_value(A) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">A = Any</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the value of <fo:inline font-weight="bold">A</fo:inline>.
          </fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp408992" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">fixed</fo:marker>fixed</fo:block>Erlang module</fo:block>
  <fo:block/>
  fixed
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions that gives an interface to the CORBA fixed type.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">Fixed</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record(fixed, {digits, scale, value}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">where <fo:inline font-family="monospace">digits</fo:inline> is the total amount of digits it consists of and 
      <fo:inline font-family="monospace">scale</fo:inline> is the number of fractional digits. The <fo:inline font-family="monospace">value</fo:inline> field
      contains the actual Fixed value represented as an integer. The limitations
      of each field are:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Digits - integer(), -1 &gt; Digits &lt; 32</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Scale - integer(), -1 &gt; Scale =&lt; Digits</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Value - integer(), range (31 digits): ±9999999999999999999999999999999</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since the Value part is represented by an integer, it is vital that the
      Digits and Scale values are correct. This also means that trailing zeros
      cannot be left out in some cases:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>fixed&lt;5,3&gt; eq. 03.140d eq. 3140</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>fixed&lt;3,2&gt; eq. 3.14d eq. 314</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Leading zeros can be left out.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For your convenience, this module exports functions which handle
      unary (<fo:inline font-family="monospace">-</fo:inline>) and binary (<fo:inline font-family="monospace">+-*/</fo:inline>) operations legal for the Fixed type.
      Since a unary <fo:inline font-family="monospace">+</fo:inline> have no effect, this module do not export such a 
      function. Any of the binary operations may cause an overflow (i.e. more than
      31 significant digits; leading and trailing zeros are not considered 
      significant). If this is the case, the Digit and Scale values are adjusted
      and the Value truncated (no rounding performed). This behavior is
      compliant with the OMG CORBA specification. Each binary operation have
      the following upper bounds:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Fixed1 + Fixed2</fo:inline> - <fo:inline font-family="monospace">fixed&lt;max(d1-s1,d2-s2) + max(s1,s2) + 1, max(s1,s2)&gt;</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Fixed1 - Fixed2</fo:inline> - <fo:inline font-family="monospace">fixed&lt;max(d1-s1,d2-s2) + max(s1,s2) + 1, max(s1,s2)&gt;</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Fixed1 * Fixed2</fo:inline> - <fo:inline font-family="monospace">fixed&lt;d1+d2, s1+s2&gt;</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">Fixed1 / Fixed2</fo:inline> - <fo:inline font-family="monospace">fixed&lt;(d1-s1+s2) + Sinf ,Sinf &gt;</fo:inline></fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A quotient may have an arbitrary number of decimal places, which is 
      denoted by a scale of Sinf.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp387632">create(Digits, Scale, Value) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Fixed Type | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function creates a new instance of a <fo:inline font-family="monospace">Fixed Type</fo:inline>. If
          the limitations is not fulfilled (e.g. overflow) an exception is
          raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1418720">get_typecode(Fixed) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = TypeCode | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the TypeCode which represents the supplied Fixed type.
          If the parameter is not of the correct type, an exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp675152">add(Fixed1, Fixed2) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Fixed1 + Fixed2 | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs a Fixed type addition.
          If the parameters are not of the correct type, an exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp421200">subtract(Fixed1, Fixed2) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Fixed1 - Fixed2 | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs a Fixed type subtraction.
          If the parameters are not of the correct type, an exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idm17088">multiply(Fixed1, Fixed2) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Fixed1 * Fixed2 | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs a Fixed type multiplication.
          If the parameters are not of the correct type, an exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp947248">divide(Fixed1, Fixed2) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = Fixed1 / Fixed2 | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Performs a Fixed type division.
          If the parameters are not of the correct type, an exception is raised.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp471936">unary_minus(Fixed) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = -Fixed | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Negates the supplied Fixed type.
          If the parameter is not of the correct type, an exception is raised.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp1285904" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">corba</fo:marker>corba</fo:block>Erlang module</fo:block>
  <fo:block/>
  corba
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions that are specified on the CORBA module
      level. It also contains some functions for creating and disposing
      objects.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp583120">create(Module, TypeID) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp583536">create(Module, TypeID, Env) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1978592">create(Module, TypeID, Env, Optons1) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1979008">create_link(Module, TypeID) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1979472">create_link(Module, TypeID, Env) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1979888">create_link(Module, TypeID, Env, Options2) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Module = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">TypeID = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options1 = [{persistent, Bool} | {regname, RegName} | {local_typecheck, Bool}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options2 = [{sup_child, Bool} | {persistent, Bool} | {regname, RegName} | {pseudo, Bool} | {local_typecheck, Bool}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RegName = {local, atom()} | {global, term()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = #objref | {ok, Pid, #objref}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bool = true | false</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">These functions start a new server object. If you start it
          without <fo:inline font-weight="bold">RegName</fo:inline> it can only be accessed through the 
          returned object key. Started with a <fo:inline font-weight="bold">RegName</fo:inline> the name is
          registered locally or globally. </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">TypeID</fo:inline> is the repository ID of the server object type and 
          could for example look like "IDL:StackModule/Stack:1.0". </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Module</fo:inline> is the name of the interface API module. </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Env</fo:inline> is the arguments passed which will be passed to the 
          implementations <fo:inline font-weight="bold">init</fo:inline> call-back function.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A server started with create/2, create/3 or create/4 does not care
          about the parent, which means that the parent is not handled
          explicitly in  the  generic process part. </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">A server started with create_link2, create_link/3 or create_link/4
          is initially linked to the caller, the parent, and it will
          terminate whenever the parent process terminates, and with the same 
          reason as the parent. If the server traps exits, the terminate/2 
          call-back function is called in order to clean up before the 
          termination. These functions should be used if the server is a 
          worker in a supervision tree.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you use the option <fo:inline font-family="monospace">{sup_child, true}</fo:inline> create_link/4 will return
          <fo:inline font-family="monospace">{ok, Pid, #objref}</fo:inline>, otherwise <fo:inline font-family="monospace">#objref</fo:inline>, and make it possible
          to start a server as a supervisor child (stdlib-1.7 or later).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you use the option <fo:inline font-family="monospace">{persistent, true}</fo:inline> you also must use the option
          <fo:inline font-family="monospace">{regname, {global, Name}}</fo:inline>. This combination makes it possible to tell
          the difference between a server permanently terminated or in the process of restarting.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The option <fo:inline font-family="monospace">{pseudo, true}</fo:inline>, allow us to create an object which is not a
          server. Using <fo:inline font-family="monospace">{pseudo, true}</fo:inline> overrides all other start options. 
          For more information see section <fo:inline font-family="monospace">Module_Interface</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a server is started using the option <fo:inline font-family="monospace">{persistent, true}</fo:inline> the object key
          will not be removed unless it terminates with reason <fo:inline font-weight="bold">normal</fo:inline> or <fo:inline font-weight="bold">shutdown</fo:inline>.
          Hence, if persistent servers is used as supervisor children they should be <fo:inline font-weight="bold">transient</fo:inline>
          and the <fo:inline font-weight="bold">objectkeys_gc_time</fo:inline> should be modified (default equals <fo:inline font-family="monospace">infinity</fo:inline>).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The option <fo:inline font-family="monospace">{local_typecheck, boolean()}</fo:inline>, which overrides the
          <fo:inline font-style="italic">Local Typechecking</fo:inline>
          environment flag, turns on or off typechecking. If activated,
          parameters, replies and raised exceptions will be checked to ensure that
          the data is correct, when invoking operations on CORBA Objects within
          the same Orber domain. Due to the extra overhead, this option 
          <fo:inline font-weight="bold">MAY ONLY</fo:inline> be used during testing and development.</fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
Example: 

  corba:create('StackModule_Stack', "IDL:StackModule/Stack:1.0", {10, test})
        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1916624">dispose(Object) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is used for terminating the execution of a 
          server object. Invoking this operation on a NIL object reference,
          e.g., the return value of <fo:inline font-family="monospace">corba:create_nil_objref/0</fo:inline>, always
          return ok. For valid object references, invoking this operation
          more than once, will result in a system exception.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1920512">create_nil_objref() -&gt; Object</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref representing NIL.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an object reference that represents the NIL value.
          Attempts to invoke operations using the returned object reference
          will return a system exception.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1923840">create_subobject_key(Object, Key) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is used to create a subobject in a server object.
          It can for example be useful when one wants unique access to 
          separate rows in a mnesia or an ETS table. The <fo:inline font-weight="bold">Result</fo:inline> is
          an object reference that will be seen as a unique reference to 
          the outside world but will access the same server object where one 
          can use the <fo:inline font-weight="bold">get_subobject_key/1</fo:inline> function to get the private
          key value.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-weight="bold">Key</fo:inline> is stored in the object reference <fo:inline font-weight="bold">Object</fo:inline>.
          If it is a binary it will be stored as is and otherwise it is 
          converted to a binary before storage.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1930512">get_subobject_key(Object) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = #binary</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is used to fetch a subobject key from the object 
          reference <fo:inline font-weight="bold">Object</fo:inline>. The result is a always a binary, if it 
          was an Erlang term that was stored with <fo:inline font-weight="bold">create_subobject_key/2</fo:inline>
          one can to do <fo:inline font-weight="bold">binary_to_term/1</fo:inline> to get the real value. </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3524128">get_pid(Object) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = #pid | {error, Reason} | {'EXCEPTION',E}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is to get the process id  from an object, which is a 
          must when CORBA objects is started/handled in a supervisor tree. 
          The function will throw exceptions if the key is not found or 
          some other error occurs.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3528016">raise(Exception)</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Exception = record()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is used for raising corba exceptions as an 
          Erlang user generated exit signal. It will throw the tuple 
          <fo:inline font-family="monospace">{'EXCEPTION', </fo:inline><fo:inline font-weight="bold">Exception</fo:inline><fo:inline font-family="monospace">}</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3532320">reply(To, Reply) -&gt; true</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">To = client reference</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = IDL type</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function can be used by a CORBA object to explicitly send 
          a reply to a client that invoked a two-way operation. If this operation
          is used, it is <fo:inline font-weight="bold">not</fo:inline> possible to return a reply in the call-back
          module.
                    <fo:block/>
<fo:inline font-weight="bold">To</fo:inline> must be the <fo:inline font-weight="bold">From</fo:inline> argument provided to the 
          callback function, which requires that the IC option <fo:inline font-weight="bold">from</fo:inline> 
          was used when compiling the IDL-file.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3538256">resolve_initial_references(ObjectId) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3538736">resolve_initial_references(ObjectId, Contexts) -&gt; Object</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjectId = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the object reference associated with the given
          object id. Initially, only <fo:inline font-family="monospace">"NameService"</fo:inline> is available. To add or remove
          services use <fo:inline font-family="monospace">add_initial_service/2</fo:inline> or <fo:inline font-family="monospace">remove_initial_service/1</fo:inline>.</fo:block>
       <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
       </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3548992">add_initial_service(ObjectId, Object) -&gt; boolean()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjectId = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation allows us to add initial services, which can be accessed by 
          using <fo:inline font-family="monospace">resolve_initial_references/1</fo:inline> or the <fo:inline font-family="monospace">corbaloc</fo:inline> schema.
          If using an Id defined by the OMG, the given object must be of the
          correct type; for more information see the
          <fo:inline font-style="italic">Interoperable Naming Service</fo:inline>.
          Returns <fo:inline font-family="monospace">false</fo:inline> if the given id already exists.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3554912">remove_initial_service(ObjectId) -&gt; boolean()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjectId = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If we don not want a certain service to be accessible, invoking this function
          will remove the association. Returns <fo:inline font-family="monospace">true</fo:inline> if able to terminate the
          binding. If no such binding existed <fo:inline font-family="monospace">false</fo:inline> is returned.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3559088">list_initial_services() -&gt; [ObjectId]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjectId = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a list of allowed object id's.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3562288">resolve_initial_references_remote(ObjectId, Address) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3562704">resolve_initial_references_remote(ObjectId, Address, Contexts) -&gt; Object</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjectId = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = [RemoteModifier]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteModifier = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the object reference for the object id asked 
          for.
          The remote modifier string has the following format:
          <fo:inline font-family="monospace">"iiop://"&lt;host&gt;":"&lt;port&gt;</fo:inline> where <fo:inline font-family="monospace">&lt;host&gt; = &lt;DNS hostname&gt; | 
	  &lt;IPv4 address&gt; | "["&lt;IPv6 address&gt;"]"</fo:inline>.
	</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
        <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation is not supported by most ORB's. Hence, use 
            <fo:inline font-family="monospace">corba:string_to_object/1</fo:inline> instead.</fo:block>
        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1798400">list_initial_services_remote(Address) -&gt; [ObjectId]</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1798880">list_initial_services_remote(Address, Contexts) -&gt; [ObjectId]</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = [RemoteModifier]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RemoteModifier = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjectId = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a list of allowed object id's. 
	  The remote modifier string has the following format: 
	   <fo:inline font-family="monospace">"iiop://"&lt;host&gt;":"&lt;port&gt;</fo:inline> where <fo:inline font-family="monospace">&lt;host&gt; = &lt;DNS hostname&gt; | 
	  &lt;IPv4 address&gt; | "["&lt;IPv6 address&gt;"]"</fo:inline>.
	</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
        <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation is not supported by most ORB's. Hence, avoid
            using it.</fo:block>
        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1809952">object_to_string(Object) -&gt; IOR_string</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IOR_string = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the object reference as the external string 
          representation of an IOR.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1813680">string_to_object(IOR_string) -&gt; Object</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1814144">string_to_object(IOR_string, Contexts) -&gt; Object</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IOR_string = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function takes a <fo:inline font-family="monospace">corbaname</fo:inline>, <fo:inline font-family="monospace">corbaloc</fo:inline> or an IOR on the
          external string representation and returns the object reference.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To lookup the NameService reference, simply use
          <fo:inline font-family="monospace">"corbaloc:iiop:1.2@123.0.0.12:4001/NameService"</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">We can also resolve an object from the NameService by using
          <fo:inline font-family="monospace">"corbaname:iiop:1.2@123.0.0.12:4001/NameService#org/Erlang/MyObj"</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To lookup the NameService reference with an IPv6 address, simply use
          <fo:inline font-family="monospace">"corbaloc:iiop:1.2@[FEC1:0:3:0:0312:44AF:FAB1:3D01]:4001/NameService"</fo:inline></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information about <fo:inline font-family="monospace">corbaname</fo:inline> and <fo:inline font-family="monospace">corbaloc</fo:inline>, see
          the User's Guide (Interoperable Naming Service).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">How to handle the interface context is further described in the User's Guide.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp1828288">print_object(Data [, Type]) -&gt; ok | {'EXCEPTION', E} |  {'EXIT', R} | string()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data = IOR_string | #objref (local or external) | corbaloc/corbaname string</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = IoDevice | error_report | {error_report, Reason} | info_msg | {info_msg, Comment} | string</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IoDevice = see the io-module</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = Comment = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The object represented by the supplied data is dissected and presented
          in a more readable form. The Type parameter is optional; if not supplied
          standard output is used. For <fo:inline font-family="monospace">error_report</fo:inline> and <fo:inline font-family="monospace">info_msg</fo:inline>
          the <fo:inline font-family="monospace">error_logger</fo:inline> module is used, with or without Reason or Comment.
          If the atom <fo:inline font-family="monospace">string</fo:inline> is supplied this function will return a flat
          list. The <fo:inline font-family="monospace">IoDevice</fo:inline> is passed to the operation <fo:inline font-family="monospace">io:format/2</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the supplied object is a local reference, the output is equivalent
          to an object exported from the node this function is invoked on.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3587632">add_alternate_iiop_address(Object, Host, Port) -&gt; NewObject | {'EXCEPTION', E}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = NewObject = local #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Host = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation creates a new instance of the supplied object
          containing an ALTERNATE_IIOP_ADDRESS component. Only the new instance
          contains the new component. When this object is passed to another
          ORB, which supports the ALTERNATE_IIOP_ADDRESS, requests will be routed
          to the alternate address if it is not possible to communicate with
          the main address.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The ALTERNATE_IIOP_ADDRESS component requires that IIOP-1.2 is used.
          Hence, make sure both Orber and the other ORB is correctly configured.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Make sure that the given <fo:inline font-family="monospace">Object</fo:inline> is accessible via the
            alternate Host/port. For example, if the object is correctly started as 
            <fo:inline font-family="monospace">local</fo:inline> or <fo:inline font-family="monospace">pseudo</fo:inline>, the object should be available on all
            nodes within a multi-node Orber installation. Since only one instance
            exists for other object types, it will not be possible to access it
            if the node it was started on terminates.</fo:block>
        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3595648">orb_init(KeyValueList) -&gt; ok | {'EXIT', Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">KeyValueList = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = any key listed in the configuration chapter</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function allows the user to configure Orber in, for example,
          an Erlang shell. Orber may <fo:inline font-weight="bold">NOT</fo:inline> be started prior to invoking
          this operation. For more information, see
          <fo:inline font-style="italic">configuration settings</fo:inline>
          in the User's Guide.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp3608352" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">corba_object</fo:marker>corba_object</fo:block>Erlang module</fo:block>
  <fo:block/>
  corba_object
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains the CORBA Object interface functions that can be 
      called for all objects.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3610816">get_interface(Object) -&gt; InterfaceDef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">InterfaceDef = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the full interface description for an object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3614480">is_nil(Object) -&gt; boolean()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function checks if the object reference has a nil object value,
          which denotes no object. It is the reference that is tested and no 
          object implementation is involved in the test. </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3617888">is_a(Object, Logical_type_id) -&gt; Return</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3618352">is_a(Object, Logical_type_id, Contexts) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Logical_type_id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = boolean() | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">Logical_type_id</fo:inline> is a string that is a share type
          identifier (repository id). The function returns true if the object
          is an instance of that type or an ancestor of the "most derived"
          type of that object.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: Other ORB suppliers may not support this function completely
          according to the OMG specification. Thus, a <fo:inline font-weight="bold">is_a</fo:inline> call may
          raise an exception or respond unpredictable if the Object is
          located on a remote node.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3629744">is_remote(Object) -&gt; boolean()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns true if an object reference is remote 
          otherwise false. </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3633008">non_existent(Object) -&gt; Return</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3633472">non_existent(Object, Contexts) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = boolean() | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function can be used to test if the object has been destroyed. 
          It does this without invoking any application level code. The ORB 
          returns true if it knows that the object is destroyed otherwise 
          false.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: The OMG have specified two different operators, <fo:inline font-family="monospace">_not_existent</fo:inline> (CORBA version 2.0 and 2.2) and 
          <fo:inline font-family="monospace">_non_existent</fo:inline> (CORBA version 2.3), to be used for this function. It is not mandatory to support
          both versions. Thus, a <fo:inline font-weight="bold">non_existent</fo:inline> call may raise an exception or respond unpredictable 
          if the Object is located on a remote node. Depending on which version, ORB:s you intend to
          communicate with supports, you can either use this function or <fo:inline font-family="monospace">not_existent/1</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3645456">not_existent(Object) -&gt; Return</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3645920">not_existent(Object, Contexts) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = [Context]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = boolean() | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is implemented due to Interoperable purposes. Behaves as
          <fo:inline font-family="monospace">non_existent</fo:inline> except the operator <fo:inline font-family="monospace">_not_existent</fo:inline> is used when
          communicating with other ORB:s.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3656064">is_equivalent(Object, OtherObject) -&gt; boolean()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">OtherObject = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function is used to determine if two object references are 
          equivalent so far the ORB easily can determine. It returns 
          <fo:inline font-weight="bold">true</fo:inline> if the target object reference is equal to the 
          other object reference and <fo:inline font-weight="bold">false</fo:inline> otherwise.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3660864">hash(Object, Maximum) -&gt; int()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Maximum = int()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a hash value based on the object reference 
          that not will change during the lifetime of the object. 
          The <fo:inline font-weight="bold">Maximum</fo:inline> parameter denotes the upper bound of the value.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp3672128" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">orber</fo:marker>orber</fo:block>Erlang module</fo:block>
  <fo:block/>
  orber
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains the functions for starting and stopping the 
      application. It also has some utility functions to get some of 
      the configuration information from running application.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3674704">start() -&gt; ok</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3675152">start(Type) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = temporary | permanent</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starts the Orber application (it also starts mnesia if it is not running).
          Which <fo:inline font-family="monospace">Type</fo:inline> parameter is supplied determines the behavior. If not
          supplied Orber is started as <fo:inline font-family="monospace">temporary</fo:inline>. 
          See the Reference Manual <fo:inline font-weight="bold">application(3)</fo:inline> for further information. </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3679856">jump_start(Attributes) -&gt; ok | {'EXIT', Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Attributes = Port | Options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = any key listed in the configuration chapter</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Installs and starts the Orber and the Mnesia applications with the configuration
          parameters <fo:inline font-family="monospace">domain</fo:inline> and <fo:inline font-family="monospace">iiop_port</fo:inline> set to <fo:inline font-family="monospace">"IP-number:Port"</fo:inline>
          and the supplied Port respectively. Theses settings are in most cases
          sufficient to ensure that no clash with any other Orber instance occur.
          If this operation fails, check if the listen port (iiop_port) is already
          in use. This function <fo:inline font-weight="bold">MAY ONLY</fo:inline> be used during development and
          tests; how Orber is configured when using this operation may change 
          at any time without warning.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3687200">stop() -&gt; ok</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stops the Orber application.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3689472">info() -&gt; ok</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3689920">info(IoType) -&gt; ok | {'EXIT', Reason} | string()</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IoType = info_msg | string | io | {io, IoDevice}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Generates an Info Report, which contain Orber's configuration settings.
          If no <fo:inline font-family="monospace">IoType</fo:inline> is supplied, <fo:inline font-family="monospace">info_msg</fo:inline> is used (see the
          error_logger documentation). When the atom string is supplied this
          function will return a flat list. For <fo:inline font-family="monospace">io</fo:inline> and <fo:inline font-family="monospace">{io, IoDevice}</fo:inline>,
          <fo:inline font-family="monospace">io:format/1</fo:inline> and <fo:inline font-family="monospace">io:format/3</fo:inline> is used respectively.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3696064">exception_info(Exception) -&gt; {ok, string()} | {error, Reason}</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a printable string, which describes the supplied exception
          in greater detail. Note, this function is mainly intended for
          system exceptions.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3698544">is_system_exception(Exception) -&gt; true | false</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns true if the supplied exception is a system defined 
          exception, otherwise false.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3700960">get_tables() -&gt; [Tables]</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of the Orber specific Mnesia tables. This list is
          required to restore Mnesia if it has been partitioned.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3703344">get_ORBInitRef() -&gt; string() | undefined</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns undefined if we will resolve references locally,
          otherwise a string describing which host we will contact if the Key given
          to <fo:inline font-family="monospace">corba:resolve_initial_references/1</fo:inline> matches the Key set
          in this configuration variable. For more information
          see the user's guide.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3706352">get_ORBDefaultInitRef() -&gt; string() | undefined</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns undefined if we will resolve references locally,
          otherwise a string describing which host, or hosts, from which we
          will try to resolve the Key given to 
          <fo:inline font-family="monospace">corba:resolve_initial_references/1</fo:inline>. For more information
          see the user's guide.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3709328">domain() -&gt; string()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the domain name of the current Orber domain
          as a string.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3711664">iiop_port() -&gt; int()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the port-number, which is used by the IIOP
          protocol. It can be configured by setting the application variable 
          <fo:inline font-weight="bold">iiop_port</fo:inline>, if it is not set it will have the default number
          4001.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3714560">iiop_out_ports() -&gt; 0 | {Min, Max}</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The return value of this operation is what the configuration
          parameter <fo:inline font-style="italic">iiop_out_ports</fo:inline>
          has been set to.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3717664">iiop_out_ports_random() -&gt; true | false</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Return the value of the configuration parameter
           <fo:inline font-style="italic">iiop_out_ports_random</fo:inline>.</fo:block>
      </fo:block>

    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3720720">iiop_out_ports_attempts() -&gt; int()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Return the value of the configuration parameter
           <fo:inline font-style="italic">iiop_out_ports_attempts</fo:inline>.</fo:block>
      </fo:block>


    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3723808">iiop_ssl_port() -&gt; int()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the port-number, which is used by the secure IIOP
          protocol. It can be configured by setting the application variable 
          <fo:inline font-weight="bold">iiop_ssl_port</fo:inline>, if it is not set it will have the default number
          4002 if Orber is to configured to run in secure mode. Otherwise it returns -1.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3726832">iiop_timeout() -&gt; int() (milliseconds)</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the timeout value after which outgoing IIOP requests terminate.
          It can be configured by setting the application variable 
          <fo:inline font-weight="bold">iiop_timeout TimeVal (seconds)</fo:inline>, if it is not set it will have the default value
          <fo:inline font-weight="bold">infinity</fo:inline>. If a request times out a system exception, e.g.
          <fo:inline font-weight="bold">TIMEOUT</fo:inline>, is raised.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: the iiop_timeout configuration parameter (TimeVal) may only range between 0 and 1000000 seconds. 
          Otherwise, the default value is used.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: Earlier IC versions required that the compile option <fo:inline font-family="monospace">{timeout,"module::interface"}</fo:inline>,
          was used, which allow the user to add an extra timeout parameter, e.g., 
          <fo:inline font-family="monospace">module_interface:function(ObjRef, Timeout, ... Arguments ...)</fo:inline> or
          <fo:inline font-family="monospace">module_interface:function(ObjRef, [{timeout, Timeout}], ... Arguments ...)</fo:inline>, 
          instead of <fo:inline font-family="monospace">module_interface:function(ObjRef, ... Arguments ...)</fo:inline>. 
          This is no longer the case and if the extra Timeout is used,
          argument will override the configuration parameter <fo:inline font-family="monospace">iiop_timeout</fo:inline>.
          It is, however, not possible
          to use <fo:inline font-family="monospace">infinity</fo:inline> to override the Timeout parameter. The Timeout
          option is also valid for objects which resides within the same Orber domain.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3734992">iiop_connection_timeout() -&gt; int() (milliseconds)</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the timeout value after which outgoing IIOP connections terminate.
          It can be configured by setting the application variable 
          <fo:inline font-weight="bold">iiop_connection_timeout TimeVal (seconds)</fo:inline>, if it is not set it will have the default value
          <fo:inline font-weight="bold">infinity</fo:inline>. The connection will not be terminated if there are 
          pending requests.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: the iiop_connection_timeout configuration parameter (TimeVal) may only range between 0 and 1000000 seconds. 
          Otherwise, the default value is used.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3739072">iiop_connections() -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3739536">iiop_connections(Direction) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Direction = in | out | inout</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = [{Host, Port}] | [{Host, Port, Interface}] | {'EXIT',Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Host = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The list returned by this operation contain tuples of remote hosts/ports
          Orber is currently connected to. If no Direction is not supplied, both
          incoming and outgoing connections are included.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a specific local interface has been defined for the connection,
          this will be added to the returned tuple.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3745760">iiop_connections_pending() -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = [{Host, Port}] | [{Host, Port, Interface}] | {'EXIT',Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Host = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In some cases a connection attempt (i.e. trying to communicate with
          another ORB) may block due to a number of reasons. This operation
          allows the user to check if this is the case. The returned list
          contain tuples of remote hosts/ports. Normally, the list is empty.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If a specific local interface has been defined for the connection,
          this will be added to the returned tuple.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3751616">iiop_in_connection_timeout() -&gt; int() (milliseconds)</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the timeout value after which incoming IIOP 
          connections terminate. It can be configured by setting the application 
          variable <fo:inline font-weight="bold">iiop_in_connection_timeout TimeVal (seconds)</fo:inline>, if it is
          not set it will have the default value <fo:inline font-weight="bold">infinity</fo:inline>. The connection
          will not be terminated if there are pending requests.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: the iiop_in_connection_timeout configuration parameter (TimeVal) may 
          only range between 0 and 1000000 seconds. Otherwise, the default value is
          used.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3755744">iiop_acl() -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = [{Direction, Filter}] | [{Direction, Filter, [Interface]}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Direction = tcp_in | ssl_in | tcp_out | ssl_out</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Filter = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the ACL configuration. The <fo:inline font-family="monospace">Filter</fo:inline> uses a extended format of 
          Classless Inter Domain Routing (CIDR). For example, <fo:inline font-family="monospace">"123.123.123.10"</fo:inline> limits
          the connection to that particular host, while <fo:inline font-family="monospace">"123.123.123.10/17"</fo:inline> allows
          connections to or from any host equal to the 17 most significant bits. Orber
          also allow the user to specify a certain port or port range, for example,
          <fo:inline font-family="monospace">"123.123.123.10/17#4001"</fo:inline> and <fo:inline font-family="monospace">"123.123.123.10/17#4001/5001"</fo:inline>
          respectively. IPv4 or none compressed IPv6 strings are accepted.          <fo:block/>

          The list of <fo:inline font-family="monospace">Interfaces</fo:inline>, IPv4 or IPv6 strings, are currently only used
          for outgoing connections and may only contain <fo:inline font-weight="bold">one</fo:inline> address. If set and
          access is granted, Orber will use that local interface when connecting to the
          other ORB. The module <fo:inline font-style="italic">orber_acl</fo:inline>
          provides operations for evaluating the access control for filters and addresses.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3765200">activate_audit_trail() -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3765664">activate_audit_trail(Verbosity) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Verbosity = stealth | normal | verbose</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Activates audit/trail for all existing incoming and outgoing IIOP
          connections. The <fo:inline font-family="monospace">Verbosity</fo:inline> parameter, <fo:inline font-family="monospace">stealth</fo:inline>, 
          <fo:inline font-family="monospace">normal</fo:inline> or <fo:inline font-family="monospace">verbose</fo:inline>, determines which of the built in
          interceptors is used (<fo:inline font-family="monospace">orber_iiop_tracer_stealth</fo:inline>, 
          <fo:inline font-family="monospace">orber_iiop_tracer_silent</fo:inline> or <fo:inline font-family="monospace">orber_iiop_tracer</fo:inline> respectively).
          If no verbosity level is supplied, then the <fo:inline font-family="monospace">normal</fo:inline> will be used.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">In case Orber is configured to use other interceptors, the audit/trail
          interceptors will simply be added to that list.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3774128">deactivate_audit_trail() -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {error, Reason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Deactivates audit/trail for all existing incoming and outgoing IIOP
          connections. In case Orber is configured to use other interceptors, 
          those will still be used.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3777920">add_listen_interface(IP, Type) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3778400">add_listen_interface(IP, Type, Port) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3778880">add_listen_interface(IP, Type, ConfigurationParameters) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IP = string</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = normal | ssl</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = integer() &gt; 0</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ConfigurationParameters = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = flags | ip_family | iiop_in_connection_timeout | iiop_max_fragments | iiop_max_in_requests | interceptors | iiop_port | iiop_ssl_port | ssl_server_options</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = as described in the User's Guide or below</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = {ok, Ref} | {error, Reason} | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref = #Ref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Create a new process that handle requests for creating a new incoming
          IIOP connection via the given interface and port. If the latter is 
          excluded, Orber will use the value of the <fo:inline font-family="monospace">iiop_port</fo:inline> or 
          <fo:inline font-family="monospace">iiop_ssl_port</fo:inline> configuration parameters.
          The <fo:inline font-family="monospace">Type</fo:inline> parameter determines if it is
          supposed to be IIOP or IIOP via SSL. If successful, the returned
          <fo:inline font-family="monospace">#Ref</fo:inline> shall be passed to <fo:inline font-family="monospace">orber:remove_listen_interface/1</fo:inline>
          when the connection shall be terminated.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is also possible to supply configuration parameters that override
          the global configuration. The <fo:inline font-weight="bold">iiop_in_connection_timeout</fo:inline>,
          <fo:inline font-weight="bold">iiop_max_fragments</fo:inline>, <fo:inline font-weight="bold">iiop_max_in_requests</fo:inline> and
          <fo:inline font-weight="bold">interceptors</fo:inline> parameters simply overrides the global
          counterparts (See the
          <fo:inline font-style="italic">Configuration</fo:inline> chapter
          in the User's Guide). 
          But for the following parameters there are a few restrictions:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">flags</fo:inline> - currently it is only possible to override the global
           setting for the <fo:inline font-family="monospace">Use Current Interface in IOR</fo:inline> and 
          <fo:inline font-family="monospace">Exclude CodeSet Component</fo:inline> flags.</fo:block></fo:list-item-body></fo:list-item>
	  <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">ip_family</fo:inline> - can be set to <fo:inline font-family="monospace">inet</fo:inline> or <fo:inline font-family="monospace">inet6</fo:inline> and is 
	  used to get a listen interface that uses another IP version than the default
	  set with flags at startup.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">iiop_port</fo:inline> - requires that <fo:inline font-family="monospace">Use Current Interface in IOR</fo:inline>
           is activated and the supplied <fo:inline font-family="monospace">Type</fo:inline> is <fo:inline font-family="monospace">normal</fo:inline>. If so,
           exported IOR:s will contain the IIOP port defined by this configuration
           parameter. Otherwise, the global setting will be used.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-weight="bold">iiop_ssl_port</fo:inline> - almost equivalent to <fo:inline font-family="monospace">iiop_port</fo:inline>.
           The difference is that <fo:inline font-family="monospace">Type</fo:inline> shall be <fo:inline font-family="monospace">ssl</fo:inline> and that
           exported IOR:s will contain the IIOP via SSL port defined by this configuration
           parameter.</fo:block></fo:list-item-body></fo:list-item>	
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If it is not possible to add a listener based on the supplied interface
          and port, the error message is one of the ones described in <fo:inline font-family="monospace">inet</fo:inline>
          and/or <fo:inline font-family="monospace">ssl</fo:inline> documentation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3801920">remove_listen_interface(Ref) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref = #Ref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Terminates the listen process, associated with the supplied <fo:inline font-family="monospace">#Ref</fo:inline>,
          for incoming a connection. The Ref parameter is the return value from
          the <fo:inline font-family="monospace">orber:add_listen_interface/2/3</fo:inline> operation. When terminating
          the connection, all associated requests will not deliver a reply to
          the clients.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3806256">close_connection(Connection) -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3806720">close_connection(Connection, Interface) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Connection = Object | [{Host, Port}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref (external)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Host = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Port = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {'EXCEPTION', #'BAD_PARAM'{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Will try to close all outgoing connections to the host/port combinations
          found in the supplied object reference or the given list of hosts/ports.
          If a <fo:inline font-family="monospace">#'IOP_ServiceContext'{}</fo:inline> containing a local interface has been
          used when communicating with the remote object
          (see also <fo:inline font-style="italic">Module_Interface</fo:inline>), 
          that interface shall be passed as the second argument. Otherwise, connections
          via the default local interface, will be terminated.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Since several clients maybe communicates via the same connection,
            they will be affected when invoking this operation. Other clients may
            re-create the connection by invoking an operation on the target object.</fo:block>
        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3815168">secure() -&gt; no | ssl</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the security mode Orber is running in, which is either no if it is an 
          insecure domain or the type of security mechanism used. For the moment the only security 
          mechanism is ssl. This is configured by setting the application variable 
          <fo:inline font-weight="bold">secure</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3818160">ssl_server_options() -&gt; list()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the list of SSL options set for the Orber domain as server. 
          This is configured by setting the application variable 
          <fo:inline font-weight="bold">ssl_server_options</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3821024">ssl_client_options() -&gt; list()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the list of SSL options used in outgoing calls in the current process.
          The default value is configured by setting the application variable 
          <fo:inline font-weight="bold">ssl_client_options</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3823904">set_ssl_client_options(Options) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = list()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function takes a list of SSL options as parameter and sets 
	it for the current process.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3827152">objectkeys_gc_time() -&gt; int() (seconds)</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the timeout value after which after which terminated object keys, 
          related to servers started with the configuration parameter <fo:inline font-family="monospace">{persistent, true}</fo:inline>,
          will be removed.
          It can be configured by setting the application variable <fo:inline font-weight="bold">objectkeys_gc_time TimeVal (seconds)</fo:inline>, 
          if it is not set it will have the default value <fo:inline font-weight="bold">infinity</fo:inline>. </fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objects terminating with reason <fo:inline font-weight="bold">normal</fo:inline> or <fo:inline font-weight="bold">shutdown</fo:inline> are removed automatically.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: the objectkeys_gc_time configuration parameter (TimeVal) may only range between 0 and 1000000 seconds. 
          Otherwise, the default value is used.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3833024">orber_nodes() -&gt; RetVal</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RetVal = [node()]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the list of node names that this orber 
          domain consists of. </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3836272">install(NodeList) -&gt; ok</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3836720">install(NodeList, Options) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NodeList = [node()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {install_timeout, Timeout} | {ifr_storage_type, TableType} | {nameservice_storage_type, TableType} | {initialreferences_storage_type, TableType} | {load_order, Priority}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = infinity | integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">TableType = disc_copies | ram_copies</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Priority = integer()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function installs all the necessary mnesia tables and
          load default data in some of them. If one or more Orber tables
          already exists the installation fails. The function
          <fo:inline font-weight="bold">uninstall</fo:inline> may be used, if it is safe, i.e., no other 
          application is running Orber.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Preconditions:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>a mnesia schema must exist before the installation</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>mnesia is running on the other nodes if the new installation 
           shall be a multi node domain</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Mnesia will be started by the function if it is not already running on 
          the installation node and if it was started it will be stopped
          afterwards.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The options that can be sent to the installation program is:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{install_timeout, Timeout}</fo:inline> - this timeout is how long we 
           will wait for the tables to be created. The Timeout value can be
          <fo:inline font-weight="bold">infinity</fo:inline> or an integer number in milliseconds.
           Default is infinity.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{ifr_storage_type, TableType}</fo:inline> - this option sets the 
           type of tables used for the interface repository.
           The TableType can be disc_copies or ram_copies. Default is 
           disc_copies.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{initialreferences_storage_type, TableType}</fo:inline> - this option 
           sets the type of table used for storing initial references.
           The TableType can be disc_copies or ram_copies. Default is 
           ram_copies.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{nameservice_storage_type, TableType}</fo:inline> - the default
           behavior of Orber is to install the NameService as ram_copies.
           This option makes it possible to change this to disc_copies. But
           the user should be aware of that if a node is restarted, all
           local object references stored in the NameService is not valid.
           Hence, you cannot switch to disc_copies and expect exactly the same
           behavior as before.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block><fo:inline font-family="monospace">{load_order, Priority}</fo:inline> - per default the priority is set to 0.
           Using this option it will change the priority of in which order
           Mnesia will load Orber internal tables. For more information,
           consult the Mnesia documentation.</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3852304">uninstall() -&gt; ok</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function stops the Orber application, terminates all server
          objects and removes all Orber related mnesia tables.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note: Since other applications may be running on the same node
          using mnesia <fo:inline font-weight="bold">uninstall</fo:inline> will not stop the mnesia application.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3855648">add_node(Node, Options) -&gt; RetVal</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Node = node()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = IFRStorageType | [KeyValue] </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IFRStorageType = StorageType</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StorageType = disc_copies | ram_copies</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">KeyValue = {ifr_storage_type, StorageType} |  {initialreferences_storage_type, StorageType} |  {nameservice_storage_type, StorageType} |  {type, Type} </fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = temporary | permanent</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RetVal = ok | exit()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function add given node to a existing Orber node group and starts
          Orber on the new node. <fo:inline font-family="monospace">orber:add_node</fo:inline> is called from a member in the Orber
          node group.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Preconditions for new node:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Erlang started on the new node using the option <fo:inline font-family="monospace">-mnesia extra_db_nodes</fo:inline>, e.g.,
          <fo:inline font-family="monospace">erl -sname new_node_name -mnesia extra_db_nodes ConnectToNodes_List</fo:inline></fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The new node's <fo:inline font-family="monospace">domain</fo:inline> name is the same for the nodes we want to connect to.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Mnesia is running on the new node (no new schema created).</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If the new node will use <fo:inline font-family="monospace">disc_copies</fo:inline> the schema type must be changed using:
          <fo:inline font-family="monospace">mnesia:change_table_copy_type(schema, node(), disc_copies).</fo:inline></fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Orber will be started by the function on the new node.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Fails if:</fo:block>
        <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Orber already installed on given node.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Mnesia not started as described above on the new node.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Impossible to copy data in Mnesia tables to the new node.</fo:block></fo:list-item-body></fo:list-item>
          <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Not able to start Orber on the new node, due to, for example, the 
          <fo:inline font-family="monospace">iiop_port</fo:inline> is already in use.</fo:block></fo:list-item-body></fo:list-item>
        </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The function do not remove already copied tables after a failure.
          Use <fo:inline font-family="monospace">orber:remove_node</fo:inline> to remove these tables.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3872480">remove_node(Node) -&gt; RetVal</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Node = node()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RetVal = ok | exit()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function removes given node from a Orber node group. The Mnesia
          application is not stopped.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3876208">configure(Key, Value) -&gt; ok | {'EXIT', Reason}</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = orbDefaultInitRef | orbInitRef | giop_version | iiop_timeout | iiop_connection_timeout | iiop_setup_connection_timeout | iiop_in_connection_timeout | objectkeys_gc_time | orber_debug_level</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function allows the user to configure Orber in, for example,
          an Erlang shell. It is possible to invoke <fo:inline font-family="monospace">configure</fo:inline> at any time
          the keys specified above.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Any other key must be set before installing and starting Orber.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Trying to change the configuration in any other way is <fo:inline font-weight="bold">NOT</fo:inline>
          allowed since it may affect the behavior of Orber.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">For more information regarding allowed values, see
          <fo:inline font-style="italic">configuration settings</fo:inline>
          in the User's Guide.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Configuring the IIOP timeout values will not affect already
            existing connections. If you want a guaranteed uniform behavior, you
            must set these parameters from the start.</fo:block>
        </fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp3891424" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">orber_ifr</fo:marker>orber_ifr</fo:block>Erlang module</fo:block>
  <fo:block/>
  orber_ifr
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions for managing the Interface
      Repository (IFR). This documentation should be used in conjunction
      with the documentation in chapter 6 of 2.3.
      Whenever the term IFR object is used in this manual page, it
      refers to a pseudo object used only for interaction with the IFR
      rather than a CORBA object.</fo:block>
  

  <fo:block id="idp3894432" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Initialization of the IFR</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following functions are used to initialize the Interface
      Repository and to obtain the initial reference to the
      repository.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3896208">init(Nodes,Timeout) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Nodes = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = integer() | infinity</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function should be called to initialize the IFR. It
          creates the necessary mnesia-tables. A mnesia schema should
          exist, and mnesia must be running.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3899984">find_repository() -&gt; #IFR_Repository_objref</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Find the IFR object reference for the Repository. This
          reference should be used when adding objects to the IFR, and
          when extracting information from the IFR.
          The first time this function is called, it will create the
          repository and all the primitive definitions.</fo:block>
      </fo:block>
  

  <fo:block id="idp3902736" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">General methods</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following functions are the methods of the IFR. The first
      argument is always an #IFR_objref, i.e. the IFR (pseudo)object
      on which to apply this method. These functions are useful when
      the type of IFR object is not know, but they are somewhat slower
      than the specific functions listed below which only accept a
      particular type of IFR object as the first argument.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3904752">get_def_kind(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = atom() (one of dk_none, dk_all, dk_Attribute, dk_Constant, dk_Exception, dk_Interface, dk_Module, dk_Operation, dk_Typedef, dk_Alias, dk_Struct, dk_Union, dk_Enum, dk_Primitive, dk_String, dk_Wstring, dk_Fixed, dk_Sequence, dk_Array, dk_Repository)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind. Returns the definition
          kind of the IFR object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3908704">destroy(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind except IRObject,
          Contained and Container. Destroys that object and its
          contents (if any). Returns whatever mnesia:transaction
          returns.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3912560">get_id(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns the repository id of that object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3916288">set_id(Objref,Id) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Sets the repository id of that object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3919984">get_name(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns the name of that object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3923696">set_name(Objref,Name) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Sets the name of that object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3927408">get_version(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns the version of that object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3931120">set_version(Objref,Version) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Sets the version of that object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3934832">get_defined_in(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_Container_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns the Container object that the object is
          defined in.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3938608">get_absolute_name(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns the absolute (scoped) name of that
          object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3942368">get_containing_repository(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns the Repository that is eventually reached
          by recursively following the object's defined_in attribute.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3946240">describe(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple() (a contained_description record) | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. Returns a tuple describing the object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3950016">move(Objref,New_container,New_name,New_version) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">New_container = #IFR_Container_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">New_name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">New_version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Contained. New_container is an IFR object of any kind that
          inherits from Container. Removes Objref from its current 
          Container, and adds it to New_container. The name attribute
          is changed to New_name and the version attribute is changed
          to New_version.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3955424">lookup(Objref,Search_name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Search_name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return =  #IFR_object</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Returns an IFR object identified by search_name
          (a scoped name).</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3959632">contents(Objref,Limit_type,Exclude_inherited) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Limit_type = atom() (one of dk_none, dk_all, dk_Attribute, dk_Constant, dk_Exception, dk_Interface, dk_Module, dk_Operation, dk_Typedef, dk_Alias, dk_Struct, dk_Union, dk_Enum, dk_Primitive, dk_String, dk_Wstring, dk_Fixed, dk_Sequence, dk_Array, dk_Repository)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Exclude_inherited = atom() (true or false)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (a list of IFR#_objects)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Returns the contents of that IFR object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3964608">lookup_name(Objref,Search_name,Levels_to_search, Limit_type, Exclude_inherited) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Search_name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Levels_to_search = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Limit_type = atom() (one of dk_none, dk_all, dk_Attribute, dk_Constant, dk_Exception, dk_Interface, dk_Module, dk_Operation, dk_Typedef, dk_Alias, dk_Struct, dk_Union, dk_Enum, dk_Primitive, dk_String, dk_Wstring, dk_Fixed, dk_Sequence,  dk_Array, dk_Repository)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Exclude_inherited = atom() (true or false)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (a list of #IFR_objects)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Returns a list of #IFR_objects with an id
          matching Search_name.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3970544">describe_contents(Objref, Limit_type, Exclude_inherited, Max_returned_objs) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Limit_type = atom() (one of dk_none, dk_all, dk_Attribute, dk_Constant, dk_Exception, dk_Interface, dk_Module, dk_Operation, dk_Typedef, dk_Alias, dk_Struct, dk_Union, dk_Enum, dk_Primitive, dk_String, dk_Wstring, dk_Fixed, dk_Sequence, dk_Array, dk_Repository)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Exclude_inherited = atom() (true or false)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (a list of tuples (contained_description records) | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Returns a list of descriptions of the IFR objects
          in this Container's contents.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3975648">create_module(Objref,Id,Name,Version) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_ModuleDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type ModuleDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3980752">create_constant(Objref,Id,Name,Version,Type,Value) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = any()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_ConstantDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type ConstantDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3986784">create_struct(Objref,Id,Name,Version,Members) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Members = list() (list of structmember records)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_StructDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type StructDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3992368">create_union(Objref,Id,Name,Version,Discriminator_type,Members) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Discriminator_type = #IFR_IDLType_Objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Members = list() (list of unionmember records)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_UnionDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type UnionDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp3998448">create_enum(Objref,Id,Name,Version,Members) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Members = list() (list of strings)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_EnumDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type EnumDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4004000">create_alias(Objref,Id,Name,Version,Original_type) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Original_type = #IFR_IDLType_Objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_AliasDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type AliasDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4009568">create_interface(Objref,Id,Name,Version,Base_interfaces) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Base_interfaces = list() (a list of IFR_InterfaceDef_objrefs that this interface inherits from</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type InterfaceDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4015216">create_exception(Objref,Id,Name,Version,Members) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Members = list() (list of structmember records)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_ExceptionDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          Container. Creates an IFR object of the type ExceptionDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4020816">get_type(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple() (a typecode tuple)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of any kind that inherits from
          IDLType or an IFR object of the kind ConstantDef,
          ExceptionDef or AttributeDef. Returns the typecode of the
          IFR object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4024656">lookup_id(Objref,Search_id) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Search_id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns an IFR object matching the Search_id.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4028784">get_primitive(Objref,Kind) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Kind = atom() (one of pk_null, pk_void, pk_short, pk_long, pk_ushort, pk_ulong, pk_float, pk_double, pk_boolean, pk_char, pk_octet, pk_any, pk_TypeCode, pk_Principal, pk_string, pk_wstring, pk_fixed, pk_objref)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_PrimitiveDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a PrimitiveDef of the specified kind.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4033120">create_string(Objref,Bound) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bound = integer() (unsigned long /= 0)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_StringDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR objref of the type StringDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4037280">create_wstring(Objref,Bound) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bound = integer() (unsigned long /= 0)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_WstringDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR objref of the type WstringDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4041440">create_fixed(Objref,Digits,Scale) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Digits = Scale = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_FixedDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR objref of the type FixedDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4045616">create_sequence(Objref,Bound,Element_type) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bound = integer() (unsigned long)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Element_type = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_SequenceDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR objref of the type SequenceDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4050256">create_array(Objref,Length,Element_type) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bound = integer() (unsigned long)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Element_type = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_ArrayDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR objref of the type ArrayDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4054896">create_idltype(Objref,Typecode) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_Repository_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Typecode = tuple() (a typecode tuple)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR objref of the type IDLType.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4059072">get_type_def(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of the kind ConstantDef or
          AttributeDef. Returns an IFR object of the type IDLType
          describing the type of the IFR object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4062896">set_type_def(Objref,TypeDef) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">TypeDef = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object of the kind ConstantDef or
          AttributeDef. Sets the type_def of the IFR Object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4067088">get_value(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_ConstantDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = any()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the value attribute of an IFR Object of the type ConstantDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4070800">set_value(Objref,Value) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_ConstantDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = any()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the value attribute of an IFR Object of the type ConstantDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4074976">get_members(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind StructDef, UnionDef,
          EnumDef or ExceptionDef.
          For StructDef, UnionDef and ExceptionDef: Returns a list of
          structmember records that are the constituent parts of the
          object.
          For EnumDef: Returns a list of strings describing the
          enumerations.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4078912">set_members(Objref,Members) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Members = list()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind StructDef, UnionDef,
          EnumDef or ExceptionDef.
          For StructDef, UnionDef and ExceptionDef: Members is a list
          of structmember records.
          For EnumDef: Members is a list of strings describing the
          enumerations.
          Sets the members attribute, which are the constituent parts of the
          exception.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4083376">get_discriminator_type(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_UnionDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple() (a typecode tuple)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the discriminator typecode of an IFR object of the type
          UnionDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4087120">get_discriminator_type_def(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_UnionDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns an IFR object of the type IDLType describing the
          discriminator type of an IFR object of the type UnionDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4090944">set_discriminator_type_def(Objref,TypeDef) -&gt;  Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_UnionDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the attribute discriminator_type_def, an IFR object of
          the type IDLType describing the discriminator type of an IFR
          object of the type UnionDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4094816">get_original_type_def(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_AliasDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns an IFR object of the type IDLType describing the
          original type.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4098560">set_original_type_def(Objref,TypeDef) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_AliasDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Typedef = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the original_type_def attribute which describes the
          original type.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4102784">get_kind(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_PrimitiveDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = atom()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns an atom describing the primitive type (See CORBA 2.0
          p 6-21).</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4106496">get_bound(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = integer (unsigned long)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind StringDef or SequenceDef.
          For StringDef: returns the maximum number of characters in
          the string.
          For SequenceDef: Returns the maximum number of elements in
          the sequence. Zero indicates an unbounded sequence.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4110416">set_bound(Objref,Bound) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bound = integer (unsigned long)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind StringDef or SequenceDef.
          For StringDef: Sets the maximum number of characters in the
          string. Bound must not be zero.
          For SequenceDef: Sets the maximum number of elements in the
          sequence. Zero indicates an unbounded sequence.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4114816">get_element_type(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple() (a typecode tuple)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind SequenceDef or ArrayDef.
          Returns the typecode of the elements in the IFR object.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4118576">get_element_type_def(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind SequenceDef or ArrayDef.
          Returns an IFR object of the type IDLType describing the
          type of the elements in Objref.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4122400">set_element_type_def(Objref,TypeDef) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">TypeDef = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind SequenceDef or ArrayDef.
          Sets the element_type_def attribute, an IFR object of the
          type IDLType describing the type of the elements in Objref.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4126736">get_length(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_ArrayDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = integer() (unsigned long)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the number of elements in the array.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4130432">set_length(Objref,Length) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_ArrayDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Length = integer() (unsigned long)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the number of elements in the array.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4134112">get_mode(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = atom()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind AttributeDef or OperationDef.
          For AttributeDef: Return is an atom ('ATTR_NORMAL' or
          'ATTR_READONLY') specifying the read/write access for this
          attribute.
          For OperationDef: Return is an atom ('OP_NORMAL' or
          'OP_ONEWAY') specifying the mode of the operation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4138080">set_mode(Objref,Mode) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Mode = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Objref is an IFR object the kind AttributeDef or OperationDef.
          For AttributeDef: Sets the read/write access for this
          attribute. Mode is an atom ('ATTR_NORMAL' or
          'ATTR_READONLY').
          For OperationDef: Sets the mode of the operation. Mode is an
          atom ('OP_NORMAL' or 'OP_ONEWAY').</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4142512">get_result(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple() (a typecode tuple)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a typecode describing the type of the value returned by the
          operation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4146288">get_result_def(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns an IFR object of the type IDLType describing the type of the
          result.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4150048">set_result_def(Objref,ResultDef) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ResultDef = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the type_def attribute, an IFR Object of the type IDLType
          describing the result.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4154288">get_params(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (list of parameter description records)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of parameter description records, which describes the
          parameters of the OperationDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4158112">set_params(Objref,Params) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Params = list() (list of parameter description records)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the params attribute, a list of parameter description records.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4162352">get_contexts(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (list of strings)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of context identifiers for the operation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4166064">set_contexts(Objref,Contexts) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = list() (list of strings)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the context attribute for the operation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4170224">get_exceptions(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (list of #IFR_ExceptionDef_objrefs)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of exception types that can be raised by this
          operation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4174000">set_exceptions(Objref,Exceptions) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Exceptions = list() (list of #IFR_ExceptionDef_objrefs)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the exceptions attribute for this operation.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4178192">get_base_interfaces(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = list() (list of #IFR_InterfaceDef_objrefs)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a list of InterfaceDefs from which this InterfaceDef inherits.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4181952">set_base_interfaces(Objref,BaseInterfaces) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BaseInterfaces = list() (list of #IFR_InterfaceDef_objrefs)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok | {exception, _}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Sets the BaseInterfaces attribute.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4186128">is_a(Objref,Interface_id) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface_id = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = atom() (true or false)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns true if the InterfaceDef either is identical to or
          inherits from Interface_id.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4190368">describe_interface(Objref) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = tuple() (a fullinterfacedescription record)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns a full inter face description record describing the InterfaceDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4194128">create_attribute(Objref,Id,Name,Version,Type,Mode) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Type = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Mode = atom() ('ATTR_NORMAL' or 'ATTR_READONLY')</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_AttributeDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR object of the type AttributeDef contained in this
          InterfaceDef.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4200240">create_operation(Objref,Id,Name,Version,Result,Mode,Params, Exceptions,Contexts) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Objref = #IFR_InterfaceDef_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Version = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = #IFR_IDLType_objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Mode = atom() ('OP_NORMAL' or 'OP_ONEWAY')</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Params = list() (list of parameter description records)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Exceptions = list() (list of #IFR_ExceptionDef_objrefs)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Contexts = list() (list of strings)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #IFR_OperationDef_objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates an IFR object of the type OperationDef contained in this
          InterfaceDef.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4215488" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">orber_tc</fo:marker>orber_tc</fo:block>Erlang module</fo:block>
  <fo:block/>
  orber_tc
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains some functions that gives support in creating 
      IDL typecodes that can be used in for example the any types typecode field.
      For the simple types it is meaningless to use this API but the functions exist
      to get the interface complete.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">TC</fo:inline> used below describes an IDL type and is a tuple according 
      to the to the Erlang language mapping.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4219120">null() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4219568">void() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4220016">short() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4220464">unsigned_short() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4220912">long() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4221360">unsigned_long() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4221808">long_long() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4222256">unsigned_long_long() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4222720">wchar() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4223168">float() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4223616">double() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4224064">boolean() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4224512">char() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4224960">octet() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4225408">any() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4225856">typecode() -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4226304">principal() -&gt; TC</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">These functions return the IDL typecodes for simple types.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4228592">object_reference(Id, Name) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the type name of the object</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for object_reference.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4233168">struct(Id, Name, ElementList) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the type name of the struct</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ElementList = [{MemberName, TC}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>a list of the struct elements</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MemberName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the element name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for struct.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4239552">union(Id, Name, DiscrTC, Default, ElementList) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the type name of the union</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">DiscrTC = TC</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the typecode for the unions discriminant</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Default = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>a value that indicates which tuple in the element list that is default (value &lt; 0 means no default)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ElementList = [{Label, MemberName, TC}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>a list of the union elements</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Label = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the label value should be of the <fo:inline font-weight="bold">DiscrTC</fo:inline>type</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MemberName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the element name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for union.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4249216">enum(Id, Name, ElementList) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the type name of the enum</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ElementList = [MemberName]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>a list of the enums elements</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MemberName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the element name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for enum.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4255600">string(Length) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Length = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the length of the string (0 means unbounded)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for string.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4259264">wstring(Length) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Length = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the length of the wstring (0 means unbounded)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for wstring.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4262928">fixed(Digits, Scale) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Digits = Scale = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the digits and scale parameters of a Fixed type</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for fixed.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4266624">sequence(ElemTC, Length) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ElemTC = TC</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the typecode for the sequence elements</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Length = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the length of the sequence (0 means unbounded)</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for sequence.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4271216">array(ElemTC, Length) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ElemTC = TC</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the typecode for the array elements</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Length = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the length of the array</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for array.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4275776">alias(Id, Name, AliasTC) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the type name of the alias</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">AliasTC = TC</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the typecode for the type which the alias refer to</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for alias.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4281264">exception(Id, Name, ElementList) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the type name of the exception</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ElementList = [{MemberName, TC}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>a list of the exception elements</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">MemberName = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the element name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function returns the IDL typecode for exception.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4287648">get_tc(Object) -&gt; TC</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4288096">get_tc(Id) -&gt; TC</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = record()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>an IDL specified struct, union or exception</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>the repository ID</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the get_tc/1 gets a record that is and IDL specified 
          struct, union or exception as a parameter it returns the 
          typecode.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the parameter is a repository ID it uses the Interface Repository
          to get the typecode.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4293264">check_tc(TC) -&gt; boolean()</fo:block></fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Function checks the syntax of an IDL typecode.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4302768" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">orber_acl</fo:marker>orber_acl</fo:block>Erlang module</fo:block>
  <fo:block/>
  orber_acl
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions intended for analyzing Access 
      Control List (ACL) filters. The filters uses a extended format of 
      Classless Inter Domain Routing (CIDR). 
      For example, <fo:inline font-family="monospace">"123.123.123.10"</fo:inline> limits
      the connection to that particular host, while <fo:inline font-family="monospace">"123.123.123.10/17"</fo:inline> allows
      connections to or from any host equal to the 17 most significant bits. Orber
      also allow the user to specify a certain port or port range, for example,
      <fo:inline font-family="monospace">"123.123.123.10/17#4001"</fo:inline> and <fo:inline font-family="monospace">"123.123.123.10/17#4001/5001"</fo:inline>
      respectively. IPv4 or none compressed IPv6 strings are accepted.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4307408">match(IP, Direction) -&gt; boolean()</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4307872">match(IP, Direction, GetInfo) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IP = tuple() | [integer()]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Direction = tcp_in | ssl_in | tcp_out | ssl_out</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">GetInfo = boolean()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = boolean() | {boolean(), [Interface], PortInfo}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PortInfo = integer() | {integer(), integer()}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If <fo:inline font-family="monospace">GetInfo</fo:inline> is not supplied or set to false, this operation returns
          a boolean which tells if the IPv4 or IPv6 address would pass the ACL
          filter, defined by the <fo:inline font-family="monospace">iiop_acl</fo:inline> configuration parameter, or not.
          When <fo:inline font-family="monospace">GetInfo</fo:inline> is set to true, a tuple which, besides the boolean
          that tells if access was granted, also include the defined
          interfaces and port(s). This operation requires that Orber is running and
          can be used on a live node to determine if Orber has been properly configured.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4315232">verify(IP, Filter, Family) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">IP = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Filter = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Family = inet | inet6</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = true | {false, From, To} | {error, string()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">From = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">To = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns true if the IPv4 or IPv6 address would pass the
          supplied ACL. If that is not the case, a tuple containing the accepted range
          is returned. This operation should only be used for test purposes.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4320912">range(Filter, Family) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Filter = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Family = inet | inet6</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {ok, From, To} | {error, string()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">From = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">To = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the range of accepted IP addresses based on the supplied filter. 
          This operation should only be used for test purposes.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4332464" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosNaming</fo:marker>CosNaming</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosNaming
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The naming service provides  the principal mechanism for clients to find 
      objects in an ORB based world. The naming service provides an initial naming
      context that functions as the root context for all names. Given this context 
      clients can navigate in the name space. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Types that are declared on the CosNaming level are:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
typedef string Istring;
struct NameComponent {
      Istring id;  
      Istring kind;
};
  
typedef sequence &lt;NameComponent&gt; Name;
  
enum BindingType {nobject, ncontext};
  
struct Binding {
      Name    binding_name;
      BindingType binding_type;
};

typedef sequence &lt;Binding&gt; BindingList;
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to the record definitions for the structs use:
      <fo:inline font-family="monospace">-include_lib("orber/COSS/CosNaming.hrl").</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Names are not an ORB object but the can be structured in components as seen by 
      the definition above. There are no requirements on names so the service can support 
      many different conventions and standards.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are two different interfaces supported in the service:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>NamingContext</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>BindingIterator</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  
  
<fo:block page-break-before="always" id="idp4346432" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosNaming_NamingContext</fo:marker>CosNaming_NamingContext</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosNaming_NamingContext
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This is the object that defines name scopes, names must be unique within a 
      naming context. Objects may have multiple names and may exist in multiple
      naming contexts. Name context may be named in other contexts and cycles are
      permitted.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">NameComponent</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record('CosNaming_NameComponent', {id, kind=""}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">where <fo:inline font-family="monospace">id</fo:inline> and <fo:inline font-family="monospace">kind</fo:inline> are strings. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">Binding</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record('CosNaming_Binding', {binding_name, binding_type}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">where <fo:inline font-family="monospace">binding_name</fo:inline> is a Name and <fo:inline font-family="monospace">binding_type</fo:inline> is an enum which 
      has the values <fo:inline font-family="monospace">nobject</fo:inline> and <fo:inline font-family="monospace">ncontext</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Both these records are defined in the file <fo:inline font-family="monospace">CosNaming.hrl</fo:inline> and it 
      is included with:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -include_lib("orber/COSS/CosNaming/CosNaming.hrl").
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">There are a number of exceptions that can be returned from functions in this 
      interface.</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">NotFound is defined as </fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-record('CosNaming_NamingContext_NotFound', 
                      {rest_of_name, why}).        </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">CannotProceed is defined as </fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-record('CosNaming_NamingContext_CannotProceed', 
                      {rest_of_name, cxt}).        </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">InvalidName is defined as </fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-record('CosNaming_NamingContext_InvalidName', {}).        </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">NotFound is defined as </fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-record('CosNaming_NamingContext_NotFound', {}).        </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">AlreadyBound is defined as </fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-record('CosNaming_NamingContext_AlreadyBound', {}).        </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">NotEmpty is defined as </fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
-record('CosNaming_NamingContext_NotEmpty', {).        </fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">These exceptions are defined in the file <fo:inline font-family="monospace">CosNaming_NamingContext.hrl</fo:inline> and it 
      is included with:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -include_lib("orber/COSS/CosNaming/CosNaming_NamingContext.hrl").
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4370880">bind(NamingContext, Name, Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates a binding of a name and an object in the naming context. 
          Naming contexts that are bound using <fo:inline font-weight="bold">bind()</fo:inline> do not participate
          in name resolution.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4375984">rebind(NamingContext, Name, Object) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Creates a binding of a name and an object in the naming context even
          if the name is already bound. Naming contexts that are bound using
          <fo:inline font-weight="bold">rebind()</fo:inline> do not participate in name resolution.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4381152">bind_context(NamingContext1, Name, NamingContex2) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext1 = NamingContext2 =#objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The bind_context function creates a binding of a name and a naming context in
          the current context.
          Naming contexts that are bound using <fo:inline font-weight="bold">bind_context()</fo:inline> participate
          in name resolution.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4385904">rebind_context(NamingContext1, Name, NamingContex2) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext1 = NamingContext2 =#objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The rebind_context function creates a binding of a name and a naming context in
          the current context even if the name already is bound.
          Naming contexts that are bound using <fo:inline font-weight="bold">rebind_context()</fo:inline> participate
          in name resolution.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4390720">resolve(NamingContext, Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = Object</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Object = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The resolve function is the way to retrieve an object bound to a name in
          the naming context. The given name must match exactly the bound name. The 
          type of the object is not returned, clients are responsible for narrowing 
          the object to the correct type.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4395504">unbind(NamingContext, Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The unbind operation removes a name binding from the naming context.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4399616">new_context(NamingContext) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The new_context operation creates a new naming context.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4403264">bind_new_context(NamingContext, Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The new_context operation creates a new naming context and binds it to
          Name in the current context.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4407456">destroy(NamingContext) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The destroy operation disposes the NamingContext object and removes it from the 
          name server. The context must be empty e.g. not contain any bindings to be 
          removed.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4411232">list(NamingContext, HowMany) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NamingContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HowMany = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = {ok, BindingList, BindingIterator}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BindingList = [Binding]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BindingIterator = #objref</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The list operation returns a BindingList with a number of bindings up-to
          HowMany from the context. It also returns a BindinIterator which can be used to
          step through the list. If the total number of existing bindings are less
          than, or equal to, the <fo:inline font-family="monospace">HowMany</fo:inline> parameter a NIL object reference
          is returned.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">One must destroy the BindingIterator, unless it is a NIL object
            reference, by using 'BindingIterator':destroy(). Otherwise one can get
            dangling objects.</fo:block>
        </fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4425008" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosNaming_NamingContextExt</fo:marker>CosNaming_NamingContextExt</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosNaming_NamingContextExt
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To get access to the record definitions for the structures use:      <fo:block/>
</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
        -include_lib("orber/COSS/CosNaming/CosNaming.hrl").
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module also exports the functions described in:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-style="italic">CosNaming_NamingContext</fo:inline></fo:block>
      </fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4431056">to_string(NamingContext, Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string() | {'EXCEPTION', NamingContext::InvalidName{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Stringifies a <fo:inline font-family="monospace">Name</fo:inline> sequence to a string.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4436064">to_name(NamingContext, NameString) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameString = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = [NameComponent] | {'EXCEPTION', NamingContext::InvalidName{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Converts a stringified <fo:inline font-family="monospace">Name</fo:inline> to a <fo:inline font-family="monospace">Name</fo:inline> sequence.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4441968">to_url(NamingContext, AddressString, NameString) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Address = NameString = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return =  URLString |  {'EXCEPTION', NamingContext::InvalidName{}} |  {'EXCEPTION', NamingContextExt::InvalidAddress{}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation takes a <fo:inline font-family="monospace">corbaloc</fo:inline> string and a stringified <fo:inline font-family="monospace">Name</fo:inline>
          sequence as input and returns a fully formed URL string.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4447184">resolve_str(NamingContext, NameString) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameContext = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NameString = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return =  #objref |  {'EXCEPTION', NamingContext::InvalidName{}} |  {'EXCEPTION', NamingContext::NotFound{why, rest_of_name}} | {'EXCEPTION', NamingContext::CannotProceed{cxt, rest_of_name}}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation takes a stringified <fo:inline font-family="monospace">Name</fo:inline> sequence as input and
          returns the associated, if any, object.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4458656" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">CosNaming_BindingIterator</fo:marker>CosNaming_BindingIterator</fo:block>Erlang module</fo:block>
  <fo:block/>
  CosNaming_BindingIterator
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This interface allows a client to iterate over the Bindinglist it has been
      initiated with.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">NameComponent</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record('CosNaming_NameComponent', {id, kind=""}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">id</fo:inline> and <fo:inline font-family="monospace">kind</fo:inline> are strings. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">Binding</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record('CosNaming_Binding', {binding_name, binding_type}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">binding_name</fo:inline> is a <fo:inline font-family="monospace">Name = [NameComponent]</fo:inline> and
      <fo:inline font-family="monospace">binding_type</fo:inline> is an enum which 
      has the values <fo:inline font-family="monospace">nobject</fo:inline> and <fo:inline font-family="monospace">ncontext</fo:inline>.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Both these records are defined in the file <fo:inline font-family="monospace">CosNaming.hrl</fo:inline> and it 
      is included with:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -include_lib("orber/COSS/CosNaming/CosNaming.hrl").
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4469984">next_one(BindinIterator) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BindingIterator = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = {bool(), Binding}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns the next binding and a boolean. The latter
          is set to true if the binding is valid otherwise false. If the boolean
          is false there are no more bindings to retrieve.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4473808">next_n(BindinIterator, HowMany) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BindingIterator = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">HowMany = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BindingList = [Binding]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = {bool(), BindingList}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation returns a binding list with at most HowMany bindings.
          If there are no more bindings it returns false otherwise true.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4478480">destroy(BindingIterator) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">BindingIterator = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ok</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation destroys the binding iterator.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4489168" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">lname</fo:marker>lname</fo:block>Erlang module</fo:block>
  <fo:block/>
  lname
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This interface is a part of the names library which is used to hide the 
      representation of names. In Orbers Erlang mapping the pseudo-object names 
      and the real IDL names have the same representation but it is desirable that 
      the clients uses the names library so they will not be dependent of the representation.
      The lname interface supports handling of names e.g. adding and removing name 
      components.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note that the lname interface in orber does not contain a destroy function because 
      the Names are represented as standard Erlang lists and therefor will be removed 
      by the garbage collector when not in use.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">NameComponent</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record('CosNaming_NameComponent', {id, kind=""}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">id</fo:inline> and <fo:inline font-family="monospace">kind</fo:inline> are strings. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The record is defined in the file <fo:inline font-family="monospace">CosNaming.hrl</fo:inline> and it 
      is included with:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -include_lib("orber/COSS/CosNaming/CosNaming.hrl").
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4497200">create() -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a new name.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4500368">insert_component(Name, N, NameComponent) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">N = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = Name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a name where the new name component has been inserted as 
          component <fo:inline font-family="monospace">N</fo:inline> in Name.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4504976">get_component(Name, N) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">N = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = NameComponent</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the <fo:inline font-family="monospace">N:th</fo:inline> name component in Name.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4509520">delete_component(Name, N) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">N = int()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = Name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function deletes the <fo:inline font-family="monospace">N:th</fo:inline> name component from Name and returns 
          the new name.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4514096">num_component(Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = int()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a the number of name components in Name.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4517776">equal(Name1, Name2) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name1 = Name2 = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = bool()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns true if the two names are equal and false otherwise.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4521472">less_than(Name1, Name2) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name1 = Name2 = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = bool()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns true if Name1 are lesser than Name2 and false otherwise.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4525184">to_idl_form(Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = Name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function just checks if Name is a correct IDL name before returning it
          because the name representation is the same for pseudo and IDL names in orber.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4528944">from_idl_form(Name) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Name = [NameComponent]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = Name</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function just returns the Name because the name representation is the 
          same for pseudo and IDL names in orber.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4539696" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">lname_component</fo:marker>lname_component</fo:block>Erlang module</fo:block>
  <fo:block/>
  lname_component
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This interface is a part of the name library, which is used to hide the 
      representation of names. In Orbers Erlang mapping the pseudo-object names 
      and the real IDL names have the same representation but it is desirable that 
      the clients uses the names library so they will not be dependent of the representation.
      The lname_component interface supports handling of name components e.g. set and get
      of the struct members.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Note that the lname_component interface in orber does not contain a destroy 
      function because the NameComponents are represented as Erlang records and 
      therefor will be removed by the garbage collector when not in use.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The type <fo:inline font-family="monospace">NameComponent</fo:inline> used below is defined as:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -record('CosNaming_NameComponent', {id, kind=""}).
    </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">id</fo:inline> and <fo:inline font-family="monospace">kind</fo:inline> are strings. </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The record is defined in the file <fo:inline font-family="monospace">CosNaming.hrl</fo:inline> and it 
      is included with:</fo:block>
    <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
      -include_lib("orber/COSS/CosNaming/CosNaming.hrl").
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4547744">create() -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = NameComponent</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns a new name component.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4550928">get_id(NameComponent) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the id string of a name component.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4554144">set_id(NameComponent, Id) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Id = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = NameComponent</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function sets the id string of a name component and returns the component.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4557824">get_kind(NameComponent) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = string()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function returns the id string of a name component.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4561040">set_kind(NameComponent, Kind) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Kind = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = NameComponent</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function sets the kind string of a name component and returns the component.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4571344" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">Module_Interface</fo:marker>Module_Interface</fo:block>Erlang module</fo:block>
  <fo:block/>
  Module_Interface
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains the stub/skeleton functions generated by IC.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Starting a Orber server can be done in three ways:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Normal - when the server dies Orber forgets all knowledge of the server.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Supervisor child - adding the configuration parameter <fo:inline font-family="monospace">{sup_child, true}</fo:inline>
       the <fo:inline font-family="monospace">oe_create_link/2</fo:inline> function returns <fo:inline font-family="monospace">{ok, Pid, ObjRef}</fo:inline> which
       can be handled by the application <fo:inline font-weight="bold">supervisor/stdlib-1.7</fo:inline> or later. </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Persistent object reference - adding the configuration parameters <fo:inline font-family="monospace">{persistent, true}</fo:inline>
       and <fo:inline font-family="monospace">{regname, {global, term()}}</fo:inline> Orber will remember the object reference until the
       server terminates with reason <fo:inline font-weight="bold">normal</fo:inline> or <fo:inline font-weight="bold">shutdown</fo:inline>. Hence,
       if the server is started as a <fo:inline font-weight="bold">transient</fo:inline> supervisor child we do not
       receive a 'OBJECT_NOT_EXIST' exception when it has crashed and is being restarted.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The Orber stub can be used to start a <fo:inline font-family="monospace">pseudo object</fo:inline>, which will create a non-server implementation.
      A pseudo object introduce some limitations:</fo:block>
    <fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The functions <fo:inline font-family="monospace">oe_create_link/2</fo:inline> is equal to <fo:inline font-family="monospace">oe_create/2</fo:inline>, i.e.,
       no link can or will be created.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The <fo:inline font-family="monospace">BIF:s self()</fo:inline> and <fo:inline font-family="monospace">process_flag(trap_exit,true)</fo:inline> behaves incorrectly.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The <fo:inline font-family="monospace">IC</fo:inline> option <fo:inline font-family="monospace">{{impl, "M::I"}, "other_impl"}</fo:inline> has no effect. The call-back
       functions must be implemented in a file called <fo:inline font-family="monospace">M_I_impl.erl</fo:inline></fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The <fo:inline font-family="monospace">IC</fo:inline> option <fo:inline font-family="monospace">from</fo:inline> has no effect. </fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The call-back functions must be implemented as if the <fo:inline font-family="monospace">IC</fo:inline> option 
      <fo:inline font-family="monospace">{this, "M::I"}</fo:inline> was used.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Server <fo:inline font-family="monospace">State</fo:inline> changes have no effect. The user can provide information via
       the <fo:inline font-family="monospace">Env</fo:inline> start parameter and the State returned from <fo:inline font-family="monospace">init/2</fo:inline> will be the State
       passed in following invocations.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>If a call-back function replies with the <fo:inline font-family="monospace">Timeout</fo:inline> parameter set it have no effect.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Operations defined as <fo:inline font-family="monospace">oneway</fo:inline> are blocking until the operation replies.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>The option <fo:inline font-family="monospace">{pseudo, true}</fo:inline> overrides all other start options.</fo:block></fo:list-item-body></fo:list-item>
      <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block>
          •
        </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block>Only the functions, besides own definitions, <fo:inline font-family="monospace">init/2</fo:inline> (called via oe_create*/2) and 
      <fo:inline font-family="monospace">terminate/2</fo:inline> (called via corba:dispose/1) must be implemented.</fo:block></fo:list-item-body></fo:list-item>
    </fo:list-block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">By adopting the rules for <fo:inline font-family="monospace">pseudo</fo:inline> objects described above we can use <fo:inline font-family="monospace">oe_create/2</fo:inline>
      to create <fo:inline font-family="monospace">server</fo:inline> or <fo:inline font-family="monospace">pseudo</fo:inline> objects, by excluding or including the 
      option <fo:inline font-family="monospace">{pseudo, true}</fo:inline>, without changing the call-back module.
      </fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If you start a object without <fo:inline font-family="monospace">{regname, RegName}</fo:inline> it can only be accessed through the returned object key. 
      Started with a <fo:inline font-family="monospace">{regname, RegName}</fo:inline> the name is registered locally or globally. 
      </fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To avoid flooding Orber with old object references start erlang using the flag 
        <fo:inline font-weight="bold">-orber objectkeys_gc_time Time</fo:inline>, which will remove all object references
        related to servers being dead for Time seconds. To avoid extra overhead, i.e., performing
        garbage collect if no persistent objects are started, the objectkeys_gc_time default value 
        is <fo:inline font-weight="bold">infinity</fo:inline>. For more information, see the orber and corba documentation.</fo:block>
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4602192">Module_Interface:typeID() -&gt; TypeId</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">TypeId = string(), e.g., "IDL:Module/Interface:1.0"</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Returns the Type ID related to this stub/skeleton</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4605440">Module_Interface:oe_create() -&gt; ObjRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start a Orber server.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4608608">Module_Interface:oe_create_link() -&gt; ObjRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start a linked Orber server.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4611824">Module_Interface:oe_create(Env) -&gt; ObjRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start a Orber server passing Env to <fo:inline font-family="monospace">init/1</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4615920">Module_Interface:oe_create_link(Env) -&gt; ObjRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start a linked Orber server passing Env to <fo:inline font-family="monospace">init/1</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4620048">Module_Interface:oe_create(Env, Options) -&gt; ObjRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{sup_child, false} | {persistent, Bool} | {regname, RegName} |  {pseudo, Bool} | {local_typecheck, Bool} | {survive_exit, Bool} | {create_options, [CreateOpts]}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bool = true | false</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RegName = {global, term()} | {local, atom()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CreateOpts = {debug, [Dbg]} | {timeout, Time}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dbg = trace | log | statistics | {log_to_file, FileName}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start a Orber server passing Env to <fo:inline font-family="monospace">init/1</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the option <fo:inline font-family="monospace">{pseudo, true}</fo:inline> is used, all other options are overridden.
          As default, this option is set to false.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function cannot be used for starting a server as supervisor child.
          If started as <fo:inline font-family="monospace">persistent</fo:inline>, the options <fo:inline font-family="monospace">[{persistent, true}, {regname, {global, term()}}]</fo:inline> must be used and
          Orber will only forget the object reference if it terminates with reason <fo:inline font-weight="bold">normal</fo:inline> or <fo:inline font-weight="bold">shutdown</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The option <fo:inline font-family="monospace">{local_typecheck, boolean()}</fo:inline>, which overrides the
          <fo:inline font-style="italic">Local Typechecking</fo:inline>
          environment flag, turns on or off typechecking. If activated,
          parameters, replies and raised exceptions will be checked to ensure that
          the data is correct, when invoking operations on CORBA Objects within
          the same Orber domain. Due to the extra overhead, this option 
          <fo:inline font-weight="bold">MAY ONLY</fo:inline> be used during testing and development.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">{survive_exit, boolean()}</fo:inline> overrides the
          <fo:inline font-style="italic">EXIT Tolerance</fo:inline>
          environment flag. If activated, the server will not terminate, even though
          the call-back module returns EXIT.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Time</fo:inline> specifies how long time, in milliseconds, the server is allowed to
          spend initializing. For more information about the <fo:inline font-family="monospace">Dbg</fo:inline> options,
          see the <fo:inline font-family="monospace">sys</fo:inline> module.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4635872">Module_Interface:oe_create_link(Env, Options) -&gt; Return</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Return = ObjRef | {ok, Pid, ObjRef}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{sup_child, Bool} | {persistent, Bool} | {regname, RegName} | {pseudo, Bool} | {local_typecheck, Bool} | {survive_exit, Bool} |  {create_options, [CreateOpts]}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bool = true | false</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">RegName = {global, term()} | {local, atom()}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CreateOpts = {debug, [Dbg]} | {timeout, Time}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Dbg = trace | log | statistics | {log_to_file, FileName}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"/></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"/></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace"/></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Start a linked Orber server passing Env to <fo:inline font-family="monospace">init/1</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the option <fo:inline font-family="monospace">{pseudo, true}</fo:inline> is used, all other options are overridden and no link will be created.
          As default, this option is set to false.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This function can be used for starting a server as persistent or supervisor child. At the moment
          <fo:inline font-family="monospace">[{persistent, true}, {regname, {global, term()}}]</fo:inline> must be used to start
          a server as persistent, i.e., if a server died and is in the process of being restarted
          a call to the server will not raise <fo:inline font-family="monospace">'OBJECT_NOT_EXIST'</fo:inline> exception.
          Orber will only forget the object reference if it terminates with reason <fo:inline font-weight="bold">normal</fo:inline> or <fo:inline font-weight="bold">shutdown</fo:inline>,
          hence, the server must be started as <fo:inline font-weight="bold">transient</fo:inline> (for more information see the
          supervisor documentation).</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The options <fo:inline font-family="monospace">{local_typecheck, boolean()}</fo:inline> and <fo:inline font-family="monospace">{survive_exit, boolean()}</fo:inline> 
          behaves in the same way as for <fo:inline font-family="monospace">oe_create/2</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"><fo:inline font-family="monospace">Time</fo:inline> specifies how long time, in milliseconds, the server is allowed to
          spend initializing. For more information about the <fo:inline font-family="monospace">Dbg</fo:inline> options,
          see the <fo:inline font-family="monospace">sys</fo:inline> module.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4651584">Module_Interface:own_functions(ObjRef, Arg1, ..., ArgN) -&gt; Reply</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4652080">Module_Interface:own_functions(ObjRef, Options, Arg1, ..., ArgN) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ObjRef = #object reference</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [Option] | Timeout</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Option = {timeout, Timeout} | {context, [Context]}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = infinity | integer(milliseconds)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Context = #'IOP_ServiceContext'{context_id = CtxId, context_data = CtxData}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxId = ?ORBER_GENERIC_CTX_ID</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CtxData = {interface, Interface} | {userspecific, term()} | {configuration, Options}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Interface = string()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Options = [{Key, Value}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Key = ssl_client_verify | ssl_client_depth | ssl_client_certfile | ssl_client_cacertfile |
                 ssl_client_password | ssl_client_keyfile | ssl_client_ciphers | ssl_client_cachetimeout</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Value = allowed value associated with the given key</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ArgX = specified in the IDL-code.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = specified in the IDL-code.</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The default value for the <fo:inline font-family="monospace">Timeout</fo:inline> option is <fo:inline font-family="monospace">infinity</fo:inline>.
          IPv4 or IPv6 addresses are accepted as local Interface.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-weight="bold">configuration</fo:inline> context is used to override the global
           SSL client side 
           <fo:inline font-style="italic">configuration</fo:inline>.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To gain access to <fo:inline font-family="monospace">#'IOP_ServiceContext'{}</fo:inline> record and the 
          <fo:inline font-family="monospace">?ORBER_GENERIC_CTX_ID</fo:inline> macro, you must add 
          <fo:inline font-family="monospace">-include_lib("orber/include/corba.hrl").</fo:inline> to your module.</fo:block>
      </fo:block>
  

  <fo:block id="idp4665840" font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">CALLBACK FUNCTIONS</fo:block>
    
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The following functions should be exported from a <fo:inline font-family="monospace">CORBA</fo:inline>
      callback module. Note, a complete template of the call-back module can
      be generated automatically by compiling the IDL-file with the IC option 
      <fo:inline font-family="monospace">{be,erl_template}</fo:inline>. One should also add
      the same compile options, for example <fo:inline font-family="monospace">this</fo:inline> or <fo:inline font-family="monospace">from</fo:inline>,
      used when generating the stub/skeleton modules.</fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4669520">Module_Interface_impl:init(Env) -&gt; CallReply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Env = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CallReply = {ok, State} | {ok, State, Timeout} | ignore | {stop, StopReason}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = int() &gt;= 0 | infinity</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StopReason = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Whenever a new server is started, <fo:inline font-weight="bold">init/1</fo:inline> is the first function called in the specified call-back module.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4675104">Module_Interface_impl:terminate(Reason, State) -&gt; ok</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reason = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This call-back function is called whenever the server is about to terminate.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4678816">Module_Interface_impl:code_change(OldVsn, State, Extra) -&gt; CallReply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">OldVsn = undefined | term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Extra = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CallReply = {ok, NewState}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewState = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Update the internal <fo:inline font-family="monospace">State</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4684304">Module_Interface_impl:handle_info(Info, State) -&gt; CallReply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Info = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CallReply = {noreply, State} | {noreply, State, Timeout} | {stop, StopReason, State}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = int() &gt;= 0 | infinity</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StopReason = normal | shutdown | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If the configuration parameter <fo:inline font-weight="bold">{{handle_info, "Module::Interface"}, true}</fo:inline>
          is passed to IC and <fo:inline font-weight="bold">process_flag(trap_exit,true)</fo:inline> is set in the <fo:inline font-weight="bold">init()</fo:inline> 
          call-back this function must be exported. </fo:block>
        <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
          <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">To be able to handle the <fo:inline font-family="monospace">Timeout</fo:inline> option in <fo:inline font-family="monospace">CallReply</fo:inline> in the call-back
            module the configuration parameter <fo:inline font-weight="bold">{{handle_info, "Module::Interface"}, true}</fo:inline> must
            be passed to IC. </fo:block>
        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4693216">Module_Interface_impl:own_functions(State, Arg1, ..., ArgN) -&gt; CallReply</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4693728">Module_Interface_impl:own_functions(This, State, Arg1, ..., ArgN) -&gt; CallReply</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4694240">Module_Interface_impl:own_functions(This, From, State, Arg1, ..., ArgN) -&gt; ExtCallReply</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4694752">Module_Interface_impl:own_functions(From, State, Arg1, ..., ArgN) -&gt; ExtCallReply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">This = the servers #object reference</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ArgX = specified in the IDL-code.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CallReply = {reply, Reply, State} | {reply, Reply, State, Timeout} |  {stop, StopReason, Reply, State} | {stop, StopReason, State} |  corba:raise(Exception)</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ExtCallReply = CallReply | corba:reply(From, Reply), {noreply, State} | corba:reply(From, Reply), {noreply, State, Timeout}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = specified in the IDL-code.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = int() &gt;= 0 | infinity</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StopReason = normal | shutdown | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All two-way functions must return one of the listed replies or raise any of
          the exceptions listed in the IDL code (i.e. raises(...)). 
          If the IC compile options <fo:inline font-weight="bold">this</fo:inline> and/or <fo:inline font-weight="bold">from</fo:inline> are used,
          the implementation must accept the <fo:inline font-weight="bold">This</fo:inline> and/or <fo:inline font-weight="bold">From</fo:inline> 
          parameters.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4703456">Module_Interface_impl:own_functions(State, Arg1, ..., ArgN) -&gt; CastReply</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4703968">Module_Interface_impl:own_functions(This, State, Arg1, ..., ArgN) -&gt; CastReply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">This = the servers #object reference</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">State = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">CastReply = {noreply, State} | {noreply, State, Timeout} | {stop, StopReason, State}</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">ArgX = specified in the IDL-code.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = specified in the IDL-code.</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Timeout = int() &gt;= 0 | infinity</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">StopReason = normal | shutdown | term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">All one-way functions must return one of the listed replies. 
          If the IC compile option <fo:inline font-weight="bold">this</fo:inline> is used,
          the implementation must accept the <fo:inline font-weight="bold">This</fo:inline> parameter.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4718064" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">interceptors</fo:marker>interceptors</fo:block>Erlang module</fo:block>
  <fo:block/>
  interceptors
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains the mandatory functions for user supplied native
      interceptors and their intended behavior. See also the User's Guide.</fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Using <fo:inline font-family="monospace">Interceptors</fo:inline> may reduce the through-put significantly
        if the supplied interceptors invoke expensive operations. Hence, 
        one should always supply interceptors which cause as little overhead
        as possible.</fo:block>
    </fo:block>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">It is possible to alter the <fo:inline font-family="monospace">Data</fo:inline>, <fo:inline font-family="monospace">Bin</fo:inline> and <fo:inline font-family="monospace">Args</fo:inline>
        parameter for the <fo:inline font-family="monospace">in_reply</fo:inline> and <fo:inline font-family="monospace">out_reply</fo:inline>, 
        <fo:inline font-family="monospace">in_reply_encoded</fo:inline>, <fo:inline font-family="monospace">in_request_encoded</fo:inline>, 
        <fo:inline font-family="monospace">out_reply_encoded</fo:inline> and <fo:inline font-family="monospace">out_request_encoded</fo:inline>,
        <fo:inline font-family="monospace">in_request</fo:inline> and <fo:inline font-family="monospace">out_request</fo:inline> respectively. But,
        if it is done incorrectly, the consequences can be serious.</fo:block>
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">Extra</fo:inline> parameter is set to 'undefined' by Orber when calling
        the first interceptor and may be set to any Erlang term.  If an
        interceptor change this parameter it will be passed on to the next
        interceptor in the list uninterpreted.</fo:block>
    </fo:block>
    <fo:block background-color="#d0fed0" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Note:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The <fo:inline font-family="monospace">Ref</fo:inline> parameter is set to 'undefined' by Orber when calling
        <fo:inline font-family="monospace">new_in_connection</fo:inline> or <fo:inline font-family="monospace">new_out_connection</fo:inline> using
        the first interceptor. The user supplied interceptor may set <fo:inline font-family="monospace">NewRef</fo:inline>
        to any Erlang term.  If an interceptor change this parameter it will be
        passed on to the next interceptor in the list uninterpreted.</fo:block>
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4732592">new_in_connection(Ref, PeerHost, PeerPort) -&gt; NewRef</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4733072">new_in_connection(Ref, PeerHost, PeerPort, SocketHost, SocketPort) -&gt; NewRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref    = term() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerHost = SocketHost = string(), e.g., "myHost@myServer" or "192.0.0.10"</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerPort = SocketPort = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewRef = term() | {'EXIT', Reason}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a new connection is requested by a client side ORB this operation
          is invoked. If more than one interceptor is supplied, e.g., 
          <fo:inline font-family="monospace">{native, ['myInterceptor1', 'myInterceptor2']}</fo:inline>, the return value
          from 'myInterceptor1' is passed to 'myInterceptor2' as <fo:inline font-family="monospace">Ref</fo:inline>.
          Initially, Orber uses the atom 'undefined' as <fo:inline font-family="monospace">Ref</fo:inline> parameter
          when calling the first interceptor. The return value from the last
          interceptor, in the example above 'myInterceptor2', is passed
          to all other functions exported by the interceptors. Hence,
          the <fo:inline font-family="monospace">Ref</fo:inline> parameter can, for example, be used as a unique 
          identifier to mnesia or ets where information/restrictions for
          this connection is stored.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The PeerHost and PeerPort variables supplied data of
          the client ORB which requested a new connection. SocketHost 
          and SocketPort are the local interface and port the client
          connected to.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">If, for some reason, we do not allow the client ORB to connect
          simply invoke <fo:inline font-family="monospace">exit(Reason)</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4741840">new_out_connection(Ref, PeerHost, PeerPort) -&gt; NewRef</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4742320">new_out_connection(Ref, PeerHost, PeerPort, SocketHost, SocketPort) -&gt; NewRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref    = term() | undefined</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerHost = SocketHost = string(), e.g., "myHost@myServer" or "192.0.0.10"</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">PeerPort = SocketPort = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewRef = term() | {'EXIT', Reason}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a new connection is set up this function is invoked. Behaves
          just like <fo:inline font-family="monospace">new_in_connection</fo:inline>; the only difference is that
          the PeerHost and PeerPort variables identifies the target ORB's bootstrap
          data and SocketHost and SocketPort are the local interface and port
          the client ORB connected via.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4747744">closed_in_connection(Ref) -&gt; NewRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref    = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewRef = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When an existing connection is terminated this operation is invoked.
          The main purpose of this function is to make it possible for a user
          to clean up all data associated with the associated connection.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The input parameter <fo:inline font-family="monospace">Ref</fo:inline> is the return value from 
          <fo:inline font-family="monospace">new_in_connection/3</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4752976">closed_out_connection(Ref) -&gt; NewRef</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref    = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">NewRef = term()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When an existing connection is terminated this operation is invoked.
          The main purpose of this function is to make it possible for a user
          to clean up all data associated with the associated connection.</fo:block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">The input parameter <fo:inline font-family="monospace">Ref</fo:inline> is the return value from 
          <fo:inline font-family="monospace">new_out_connection/3</fo:inline>.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4758208">in_reply(Ref, Obj, Ctx, Op, Data, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data  = [Result, OutParameter1, ..., OutPramaterN]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewData, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When replies are delivered from the server side ORB to the client side
          ORB this operation is invoked. The <fo:inline font-family="monospace">Data</fo:inline> parameter is a list in which
          the first element is the return value value from the target object and
          the rest is a all parameters defined as <fo:inline font-family="monospace">out</fo:inline> or <fo:inline font-family="monospace">inout</fo:inline> in
          the IDL-specification.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4765312">in_reply_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin   = #binary</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewBin, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When replies are delivered from the server side ORB to the client side
          ORB this operation is invoked. The <fo:inline font-family="monospace">Bin</fo:inline> parameter is the reply 
          body still uncoded.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4771408">in_request(Ref, Obj, Ctx, Op, Args, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Args  = [Argument] - defined in the IDL-specification</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewArgs, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a new request arrives at the server side ORB this operation is 
          invoked.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4776976">in_request_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin   = #binary</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewBin, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">When a new request arrives at the server side ORB this operation is 
          invoked before decoding the request body.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4782608">out_reply(Ref, Obj, Ctx, Op, Data, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Data  = [Result, OutParameter1, ..., OutPramaterN]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewData, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">After the target object have been invoked this operation is invoked
          with the result. The <fo:inline font-family="monospace">Data</fo:inline> parameter is a list in which
          the first element is the return value value from the target object and
          the rest is a all parameters defined as <fo:inline font-family="monospace">out</fo:inline> or <fo:inline font-family="monospace">inout</fo:inline> in
          the IDL-specification.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4789680">out_reply_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin   = #binary</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewBin, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation is similar to <fo:inline font-family="monospace">out_reply</fo:inline>; the only difference is
          that the reply body have been encoded.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4795712">out_request(Ref, Obj, Ctx, Op, Args, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Args  = [Argument] - defined in the IDL-specification</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewArgs, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Before a request is sent to the server side ORB, <fo:inline font-family="monospace">out_request</fo:inline> is
          invoked.</fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4801712">out_request_encoded(Ref, Obj, Ctx, Op, Bin, Extra) -&gt; Reply</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ref   = term()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Obj   = #objref</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Ctx   = [#'IOP_ServiceContext'{}]</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Op    = atom()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Bin   = #binary</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Reply = {NewBin, NewExtra}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation is similar to <fo:inline font-family="monospace">out_request</fo:inline>; the only
          difference is that the request body have been encoded.</fo:block>
      </fo:block>
  
  
<fo:block page-break-before="always" id="idp4814768" keep-with-next.within-page="always" space-after="2em" space-before="1em"><fo:block border-after-style="solid" border-after-width="1pt" font-family="DejaVuSans, sans-serif" font-size="1.5em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="1em"><fo:marker marker-class-name="chapter-title">orber_diagnostics</fo:marker>orber_diagnostics</fo:block>Erlang module</fo:block>
  <fo:block/>
  orber_diagnostics
  <fo:block/>
  
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This module contains functions which makes it possible to run simple
      tests.</fo:block>
    <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify"/>
    <fo:block background-color="#ffd6d6" space-after="1em" space-before="2em" text-align="justify" padding-before="1em" padding-after="0.3em" padding-left="0.5em" padding-right="0.5em" margin-left="0.5em" margin-right="0.5em" keep-together.within-page="always"><fo:block font-size="1.33em">Warning:</fo:block>
      <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Functions exported by this module may only be used during
        test and development phase.</fo:block>
    </fo:block>
  
  <fo:block font-family="DejaVuSans, sans-serif" font-size="1.33em" font-weight="normal" keep-with-next.within-page="always" space-after="0.3em" space-before="0.8em">Exports</fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4818480">nameservice() -&gt; Result</fo:block></fo:block><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4818928">nameservice(Flags) -&gt; Result</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Flags = integer()</fo:block></fo:list-item-body></fo:list-item>
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Result = ok | {'EXCEPTION', E}</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">Displays all objects stored in the NameService. Existent checks are, per 
          default, also performed on all local objects. This can also be activated 
          for external objects by setting the flag <fo:inline font-family="monospace">16#01</fo:inline>. The displayed
          information is the stringified Name described in 
          <fo:inline font-style="italic">CosNaming_NamingContextExt</fo:inline>,
          non existent status (true | false | external | undefined) and the IFR-Id:</fo:block>
        <fo:block background-color="#e0e0ff" font-family="DejaVuSansMono, monospace" font-size="0.8em" keep-together.within-page="auto" linefeed-treatment="preserve" padding-before="0em" padding-after="1em" space-after="1em" space-before="2em" margin-left="0.5em" margin-right="0.5em" white-space-collapse="false" white-space-treatment="preserve" wrap-option="no-wrap">
host/
host/resources/
host/resources/MyObj/ [false] IDL:MyMod/MyIntf:1.0        </fo:block>
      </fo:block>
    <fo:block space-before="1.5em"><fo:block font-weight="bold" font-family="DejaVuSansMono, monospace" keep-with-next.within-page="always" space-after="0.25em"><fo:block id="idp4824880">missing_modules() -&gt; Count</fo:block></fo:block><fo:block>Types:</fo:block><fo:list-block provisional-distance-between-starts="1.8em" provisional-label-separation="1em" space-after="0.25em" space-before="0.25em">
        <fo:list-item space-after="0.25em"><fo:list-item-label end-indent="label-end()"><fo:block/></fo:list-item-label><fo:list-item-body start-indent="body-start()" format="justify"><fo:block font-weight="bold" font-family="monospace">Count = integer()</fo:block></fo:list-item-body></fo:list-item>
      </fo:list-block>
        <fo:block font-size="1em" space-after="0.5em" space-before="0.5em" text-align="justify">This operation list missing modules generated by IC and required by
          Orber. Requires that all API:s are registered in the IFR.</fo:block>
      </fo:block>
  
  
</fo:flow>
  </fo:page-sequence>
</fo:root>
